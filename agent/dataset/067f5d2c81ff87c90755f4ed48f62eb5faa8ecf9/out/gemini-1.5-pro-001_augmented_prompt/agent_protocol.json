{
    "validate_diffs": [],
    "compile_maven": [
        {
            "input": "```diff\n--- a/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n+++ b/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n@@ -118,7 +118,7 @@\n       TSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\n       for (AuditEvent event : events) {\n         byte[] payload = serializer.serialize(ThriftCodec.encode(event));\n-        producer.send(new KeyedMessage<String, byte[]>(topicName, payload));\n+        producer.send(new KeyedMessage<>(topicName, payload));\n       }\n     } catch (Exception e) {\n       LOG.error(\"Failed to send audit events to kafka: {}\", e.getMessage());\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 8 exact lines in a row:\n```\nTSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\nfor (AuditEvent event : events) {\nbyte[] payload = serializer.serialize(ThriftCodec.encode(event));\nproducer.send(new KeyedMessage<String, byte[]>(topicName, payload));\n}\n} catch (Exception e) {\nLOG.error(\"Failed to send audit events to kafka: {}\", e.getMessage());\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 8 exact lines in a row:\n```\nTSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\nfor (AuditEvent event : events) {\nbyte[] payload = serializer.serialize(ThriftCodec.encode(event));\nproducer.send(new KeyedMessage<String, byte[]>(topicName, payload));\n}\n} catch (Exception e) {\nLOG.error(\"Failed to send audit events to kafka: {}\", e.getMessage());\n```",
            "span_id": 2328431532711887444
        },
        {
            "input": "```diff\n--- a/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n+++ b/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n@@ -116,9 +116,12 @@\n     try {\n       LOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\n       TSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\n-      for (AuditEvent event : events) {\n-        byte[] payload = serializer.serialize(ThriftCodec.encode(event));\n-        producer.send(new KeyedMessage<>(topicName, payload));\n+      try {\n+        for (AuditEvent event : events) {\n+          byte[] payload = serializer.serialize(ThriftCodec.encode(event));\n+          producer.send(new KeyedMessage<>(topicName, payload));\n+        }\n+      } catch (TException e) {\n+        LOG.error(\"Failed to send audit events to kafka: {}\", e.getMessage());\n       }\n-    } catch (Exception e) {\n-      LOG.error(\"Failed to send audit events to kafka: {}\", e.getMessage());\n     } finally {\n       producer.close();\n     }\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 13 exact lines in a row:\n```\ntry {\nLOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\nTSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\nfor (AuditEvent event : events) {\nbyte[] payload = serializer.serialize(ThriftCodec.encode(event));\nproducer.send(new KeyedMessage<>(topicName, payload));\n}\n} catch (Exception e) {\nLOG.error(\"Failed to send audit events to kafka: {}\", e.getMessage());\n} finally {\nproducer.close();\n}\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 13 exact lines in a row:\n```\ntry {\nLOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\nTSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\nfor (AuditEvent event : events) {\nbyte[] payload = serializer.serialize(ThriftCodec.encode(event));\nproducer.send(new KeyedMessage<>(topicName, payload));\n}\n} catch (Exception e) {\nLOG.error(\"Failed to send audit events to kafka: {}\", e.getMessage());\n} finally {\nproducer.close();\n}\n```",
            "span_id": 18216691983766861250
        },
        {
            "input": "```diff\n--- a/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n+++ b/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n@@ -113,16 +113,16 @@\n     Properties props = new Properties();\n     producer = new Producer<>(props);\n \n-    try {\n-      LOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\n-      TSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\n-      try {\n+    TSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\n+    try {\n+      try {\n+        LOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\n         for (AuditEvent event : events) {\n           byte[] payload = serializer.serialize(ThriftCodec.encode(event));\n           producer.send(new KeyedMessage<>(topicName, payload));\n         }\n       } catch (TException e) {\n-        LOG.error(\"Failed to send audit events to kafka: {}\", e.getMessage());\n+        LOG.error(\"Failed to serialize audit events: {}\", e.getMessage());\n       }\n     } finally {\n       producer.close();\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 17 exact lines in a row:\n```\nProperties props = new Properties();\nproducer = new Producer<>(props);\ntry {\nLOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\nTSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\ntry {\nfor (AuditEvent event : events) {\nbyte[] payload = serializer.serialize(ThriftCodec.encode(event));\nproducer.send(new KeyedMessage<>(topicName, payload));\n}\n} catch (TException e) {\nLOG.error(\"Failed to send audit events to kafka: {}\", e.getMessage());\n}\n} finally {\nproducer.close();\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 17 exact lines in a row:\n```\nProperties props = new Properties();\nproducer = new Producer<>(props);\ntry {\nLOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\nTSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\ntry {\nfor (AuditEvent event : events) {\nbyte[] payload = serializer.serialize(ThriftCodec.encode(event));\nproducer.send(new KeyedMessage<>(topicName, payload));\n}\n} catch (TException e) {\nLOG.error(\"Failed to send audit events to kafka: {}\", e.getMessage());\n}\n} finally {\nproducer.close();\n```",
            "span_id": 5278977607462877154
        },
        {
            "input": "```diff\n--- a/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n+++ b/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n@@ -118,7 +118,7 @@\n       try {\n         LOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\n         for (AuditEvent event : events) {\n-          byte[] payload = serializer.serialize(ThriftCodec.encode(event));\n+          byte[] payload = serializer.serialize(event);\n           producer.send(new KeyedMessage<>(topicName, payload));\n         }\n       } catch (TException e) {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 8 exact lines in a row:\n```\ntry {\nLOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\nfor (AuditEvent event : events) {\nbyte[] payload = serializer.serialize(ThriftCodec.encode(event));\nproducer.send(new KeyedMessage<>(topicName, payload));\n}\n} catch (TException e) {\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 8 exact lines in a row:\n```\ntry {\nLOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\nfor (AuditEvent event : events) {\nbyte[] payload = serializer.serialize(ThriftCodec.encode(event));\nproducer.send(new KeyedMessage<>(topicName, payload));\n}\n} catch (TException e) {\n```",
            "span_id": 3882720671229615412
        },
        {
            "input": "```diff\n--- a/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n+++ b/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n@@ -118,7 +118,7 @@\n       try {\n         LOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\n         for (AuditEvent event : events) {\n-          byte[] payload = serializer.serialize(event);\n+          byte[] payload = serializer.serialize(ThriftCodec.encode(event));\n           producer.send(new KeyedMessage<>(topicName, payload));\n         }\n       } catch (TException e) {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 8 exact lines in a row:\n```\ntry {\nLOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\nfor (AuditEvent event : events) {\nbyte[] payload = serializer.serialize(event);\nproducer.send(new KeyedMessage<>(topicName, payload));\n}\n} catch (TException e) {\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 8 exact lines in a row:\n```\ntry {\nLOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\nfor (AuditEvent event : events) {\nbyte[] payload = serializer.serialize(event);\nproducer.send(new KeyedMessage<>(topicName, payload));\n}\n} catch (TException e) {\n```",
            "span_id": 2187582179697682656
        },
        {
            "input": "```diff\n--- a/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n+++ b/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n@@ -113,17 +113,16 @@\n     Properties props = new Properties();\n     producer = new Producer<>(props);\n \n-    TSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\n-    try {\n-      try {\n-        LOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\n-        for (AuditEvent event : events) {\n-          byte[] payload = serializer.serialize(ThriftCodec.encode(event));\n-          producer.send(new KeyedMessage<>(topicName, payload));\n-        }\n-      } catch (TException e) {\n-        LOG.error(\"Failed to serialize audit events: {}\", e.getMessage());\n+    try (TSerializer serializer = new TSerializer(new TCompactProtocol.Factory())) {\n+      LOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\n+      for (AuditEvent event : events) {\n+        try {\n+          byte[] payload = serializer.serialize(ThriftCodec.encode(event));\n+          producer.send(new KeyedMessage<>(topicName, payload));\n+        } catch (TException e) {\n+          LOG.error(\"Failed to serialize audit event: {}\", e.getMessage());\n+        }\n       }\n     } finally {\n       producer.close();\n\n```\n",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 17 exact lines in a row:\n```\nProperties props = new Properties();\nproducer = new Producer<>(props);\nTSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\ntry {\ntry {\nLOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\nfor (AuditEvent event : events) {\nbyte[] payload = serializer.serialize(ThriftCodec.encode(event));\nproducer.send(new KeyedMessage<>(topicName, payload));\n}\n} catch (TException e) {\nLOG.error(\"Failed to serialize audit events: {}\", e.getMessage());\n}\n} finally {\nproducer.close();\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 17 exact lines in a row:\n```\nProperties props = new Properties();\nproducer = new Producer<>(props);\nTSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\ntry {\ntry {\nLOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\nfor (AuditEvent event : events) {\nbyte[] payload = serializer.serialize(ThriftCodec.encode(event));\nproducer.send(new KeyedMessage<>(topicName, payload));\n}\n} catch (TException e) {\nLOG.error(\"Failed to serialize audit events: {}\", e.getMessage());\n}\n} finally {\nproducer.close();\n```",
            "span_id": 14927741255588555804
        },
        {
            "input": "```diff\n--- a/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n+++ b/singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java\n@@ -113,16 +113,17 @@\n     Properties props = new Properties();\n     producer = new Producer<>(props);\n \n-    try (TSerializer serializer = new TSerializer(new TCompactProtocol.Factory())) {\n-      LOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\n-      for (AuditEvent event : events) {\n-        try {\n-          byte[] payload = serializer.serialize(ThriftCodec.encode(event));\n-          producer.send(new KeyedMessage<>(topicName, payload));\n-        } catch (TException e) {\n-          LOG.error(\"Failed to serialize audit event: {}\", e.getMessage());\n-        }\n+    TSerializer serializer = new TSerializer(new TCompactProtocol.Factory());\n+    try {\n+      try {\n+        LOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\n+        for (AuditEvent event : events) {\n+          byte[] payload = serializer.serialize(ThriftCodec.encode(event));\n+          producer.send(new KeyedMessage<>(topicName, payload));\n+        }\n+      } catch (TException e) {\n+        LOG.error(\"Failed to serialize audit events: {}\", e.getMessage());\n       }\n     } finally {\n       producer.close();\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 16 exact lines in a row:\n```\nProperties props = new Properties();\nproducer = new Producer<>(props);\ntry (TSerializer serializer = new TSerializer(new TCompactProtocol.Factory())) {\nLOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\nfor (AuditEvent event : events) {\ntry {\nbyte[] payload = serializer.serialize(ThriftCodec.encode(event));\nproducer.send(new KeyedMessage<>(topicName, payload));\n} catch (TException e) {\nLOG.error(\"Failed to serialize audit event: {}\", e.getMessage());\n}\n}\n} finally {\nproducer.close();\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in singer-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java!\nMake extra sure the indentation is correct.\nsinger-commons/src/main/java/com/pinterest/singer/loggingaudit/client/AuditEventKafkaSender.java does not contain these 16 exact lines in a row:\n```\nProperties props = new Properties();\nproducer = new Producer<>(props);\ntry (TSerializer serializer = new TSerializer(new TCompactProtocol.Factory())) {\nLOG.debug(\"Sending {} audit events to kafka topic {}\", events.size(), topicName);\nfor (AuditEvent event : events) {\ntry {\nbyte[] payload = serializer.serialize(ThriftCodec.encode(event));\nproducer.send(new KeyedMessage<>(topicName, payload));\n} catch (TException e) {\nLOG.error(\"Failed to serialize audit event: {}\", e.getMessage());\n}\n}\n} finally {\nproducer.close();\n```",
            "span_id": 18293894068418437817
        }
    ],
    "read_file": [],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}