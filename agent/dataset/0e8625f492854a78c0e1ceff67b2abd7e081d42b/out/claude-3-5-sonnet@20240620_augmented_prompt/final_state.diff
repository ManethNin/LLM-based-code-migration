diff --git a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java
index 6df6ebf..45ddb4e 100644
--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java
+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java
@@ -8,8 +8,9 @@ import net.jadler.KeyValues;
 import net.jadler.RequestManager;
 import net.jadler.stubbing.StubResponse;
 import org.apache.commons.lang.Validate;
+import org.eclipse.jetty.server.Handler;
 import org.eclipse.jetty.server.Request;
-import org.eclipse.jetty.server.handler.AbstractHandler;
+import org.eclipse.jetty.server.Response;
 
 import javax.servlet.ServletException;
 import javax.servlet.http.HttpServletRequest;
@@ -22,7 +23,7 @@ import java.io.OutputStream;
  * Jetty Handler which handles all http communication by returning an http response according to a stub response
  * obtained from a {@link RequestManager} instance.
  */
-class JadlerHandler extends AbstractHandler {
+class JadlerHandler implements Handler.Abstract {
 
     private final RequestManager requestManager;
 
@@ -37,11 +38,9 @@ class JadlerHandler extends AbstractHandler {
 
 
     @Override
-    public void handle(final String target, final Request baseRequest, final HttpServletRequest request,
-                       final HttpServletResponse response) throws IOException, ServletException {
-
-        final net.jadler.Request req = RequestUtils.convert(request);
-        final StubResponse stubResponse = this.requestManager.provideStubResponseFor(req);
+    public boolean handle(Request request, Response response, Callback callback) throws Exception {
+        final net.jadler.Request jadlerRequest = RequestUtils.convert(request.getHttpServletRequest());
+        final StubResponse stubResponse = this.requestManager.provideStubResponseFor(jadlerRequest);
 
         response.setStatus(stubResponse.getStatus());
         this.insertResponseHeaders(stubResponse.getHeaders(), response);
@@ -49,11 +48,12 @@ class JadlerHandler extends AbstractHandler {
         baseRequest.setHandled(true);
 
         this.processDelay(stubResponse.getDelay());
-        this.insertResponseBody(stubResponse.getBody(), response);
+        this.insertResponseBody(stubResponse.getBody(), response.getHttpServletResponse());
+        return true;
     }
 
 
-    private void insertResponseBody(final byte[] body, final HttpServletResponse response) throws IOException {
+    private void insertResponseBody(final byte[] body, final Response response) throws IOException {
         if (body.length > 0) {
             final OutputStream os = response.getOutputStream();
             os.write(body);
@@ -61,7 +61,7 @@ class JadlerHandler extends AbstractHandler {
     }
 
 
-    private void insertResponseHeaders(final KeyValues headers, final HttpServletResponse response) {
+    private void insertResponseHeaders(final KeyValues headers, final Response response) {
         for (final String key : headers.getKeys()) {
 
             for (final String value : headers.getValues(key)) {
@@ -80,4 +80,5 @@ class JadlerHandler extends AbstractHandler {
             }
         }
     }
+
 }
\ No newline at end of file
diff --git a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java
index b6fde22..2a973c4 100644
--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java
+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java
@@ -8,8 +8,8 @@ import net.jadler.RequestManager;
 import net.jadler.stubbing.server.StubHttpServer;
 import org.apache.commons.lang.Validate;
 import org.eclipse.jetty.server.Connector;
+import org.eclipse.jetty.server.ServerConnector;
 import org.eclipse.jetty.server.Server;
-import org.eclipse.jetty.server.nio.SelectChannelConnector;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -21,7 +21,7 @@ public class JettyStubHttpServer implements StubHttpServer {
 
     private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);
     private final Server server;
-    private final Connector httpConnector;
+    private final ServerConnector httpConnector;
 
     public JettyStubHttpServer() {
         this(0);
@@ -30,10 +30,8 @@ public class JettyStubHttpServer implements StubHttpServer {
 
     public JettyStubHttpServer(final int port) {
         this.server = new Server();
-        this.server.setSendServerVersion(false);
-        this.server.setSendDateHeader(true);
 
-        this.httpConnector = new SelectChannelConnector();
+        this.httpConnector = new ServerConnector(server);
         this.httpConnector.setPort(port);
         server.addConnector(this.httpConnector);
     }
@@ -77,6 +75,6 @@ public class JettyStubHttpServer implements StubHttpServer {
      */
     @Override
     public int getPort() {
-        return httpConnector.getLocalPort();
+return httpConnector.getPort();
     }
 }
\ No newline at end of file