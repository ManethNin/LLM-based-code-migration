diff --git a/src/main/java/org/pac4j/dropwizard/J2EHelper.java b/src/main/java/org/pac4j/dropwizard/J2EHelper.java
index 98898e9..255dabb 100644
--- a/src/main/java/org/pac4j/dropwizard/J2EHelper.java
+++ b/src/main/java/org/pac4j/dropwizard/J2EHelper.java
@@ -2,8 +2,20 @@ package org.pac4j.dropwizard;
 
 import java.util.EnumSet;
 
-import javax.servlet.DispatcherType;
-import javax.servlet.FilterRegistration;
+import jakarta.servlet.DispatcherType;
+import jakarta.servlet.FilterRegistration;
+import jakarta.servlet.DispatcherType;
+import jakarta.servlet.FilterRegistration;
+import jakarta.servlet.DispatcherType;
+import jakarta.servlet.FilterRegistration;
+import jakarta.servlet.DispatcherType;
+import jakarta.servlet.FilterRegistration;
+import jakarta.servlet.DispatcherType;
+import jakarta.servlet.FilterRegistration;
+import jakarta.servlet.DispatcherType;
+import jakarta.servlet.FilterRegistration;
+
+import java.util.EnumSet;
 
 import org.pac4j.core.config.Config;
 import org.pac4j.dropwizard.Pac4jFactory.ServletCallbackFilterConfiguration;
@@ -34,6 +46,7 @@ public final class J2EHelper {
 
         final SecurityFilter filter = new SecurityFilter();
 
+        final SecurityFilter filter = new SecurityFilter(); // Ensure this filter is compatible with jakarta
         filter.setClients(fConf.getClients());
         filter.setAuthorizers(fConf.getAuthorizers());
         filter.setMatchers(fConf.getMatchers());
@@ -70,13 +83,20 @@ public final class J2EHelper {
 
     private static void registerFilter(Environment environment, Config config,
                                        AbstractConfigFilter filter, String mapping) {
+                                       AbstractConfigFilter filter, String mapping) {
 
         filter.setConfigOnly(config);
 
-        final FilterRegistration.Dynamic filterRegistration = environment
+final jakarta.servlet.FilterRegistration.Dynamic filterRegistration = environment
+        final jakarta.servlet.FilterRegistration.Dynamic filterRegistration = environment
+        final jakarta.servlet.FilterRegistration.Dynamic filterRegistration = environment
+        final jakarta.servlet.FilterRegistration.Dynamic filterRegistration = environment
+        final jakarta.servlet.FilterRegistration.Dynamic filterRegistration = environment
+        final jakarta.servlet.FilterRegistration.Dynamic filterRegistration = environment
                 .servlets().addFilter(filter.getClass().getName(), filter);
 
         filterRegistration.addMappingForUrlPatterns(
                 EnumSet.of(DispatcherType.REQUEST), true, mapping);
     }
 }
+}
\ No newline at end of file