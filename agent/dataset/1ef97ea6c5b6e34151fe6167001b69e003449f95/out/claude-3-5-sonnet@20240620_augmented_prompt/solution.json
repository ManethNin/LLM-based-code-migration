{"compilation_has_succeeded": true, "test_has_succeeded": true, "error_text": "", "updated_files": {"src/main/java/com/github/knaufk/flink/faker/DateTime.java": "package com.github.knaufk.flink.faker;\n\nimport java.sql.Timestamp;\nimport java.time.Instant;\nimport java.util.Date;\nimport java.util.concurrent.TimeUnit;\nimport net.datafaker.DateAndTime;\nimport net.datafaker.Faker;\n\npublic class DateTime extends DateAndTime {\n\n  protected DateTime(Faker faker) {\n    super(faker);\n  }\n\n  public Timestamp past(int atMost, TimeUnit unit) {\n    return Timestamp.from(super.past(atMost, unit).toInstant());\n  }\n\n  public Timestamp past(int atMost, int minimum, TimeUnit unit) {\n    return Timestamp.from(super.past(atMost, minimum, unit).toInstant());\n  }\n\n  public Timestamp future(int atMost, TimeUnit unit) {\n    return Timestamp.from(super.future(atMost, unit).toInstant());\n  }\n\n  public Timestamp future(int atMost, int minimum, TimeUnit unit) {\n    return Timestamp.from(super.future(atMost, minimum, unit).toInstant());\n  }\n\n  public Timestamp future(int atMost, TimeUnit unit, Date referenceDate) {\n    return Timestamp.from(super.future(atMost, unit, referenceDate).toInstant());\n  }\n\n  public Timestamp past(int atMost, TimeUnit unit, Date referenceDate) {\n    return Timestamp.from(super.past(atMost, unit, referenceDate).toInstant());\n  }\n\n  public Timestamp between(Date from, Date to) throws IllegalArgumentException {\n    Timestamp fromTimestamp = new Timestamp(from.getTime());\n    Timestamp toTimestamp = new Timestamp(to.getTime());\n    return super.between(fromTimestamp, toTimestamp);\n  }\n\n  public Timestamp birthday() {\n    return Timestamp.from(super.birthday().toInstant());\n  }\n\n  public Timestamp birthday(int minAge, int maxAge) {\n    return Timestamp.from(super.birthday(minAge, maxAge).toInstant());\n  }\n}\n"}, "compile_error_details": {}}