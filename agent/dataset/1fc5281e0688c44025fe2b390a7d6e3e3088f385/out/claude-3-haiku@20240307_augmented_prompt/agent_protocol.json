{
    "validate_diffs": [
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -9,7 +9,7 @@ import org.eclipse.jetty.server.Connector;\n import org.eclipse.jetty.server.Server;\n import org.eclipse.jetty.server.nio.SelectChannelConnector;\n import org.eclipse.jetty.server.handler.AbstractHandler;\n-import org.eclipse.jetty.server.nio.SelectChannelConnector;\n+import org.eclipse.jetty.server.ServerConnector;\n \n public class JettyStubHttpServer implements StubHttpServer {\n \n@@ -27,15 +27,15 @@ public class JettyStubHttpServer implements StubHttpServer {\n \n     public JettyStubHttpServer(final int port) {\n         this.server = new Server();\n-        this.httpConnector = new SelectChannelConnector();\n+        this.httpConnector = new ServerConnector(this.server);\n         this.httpConnector.setPort(port);\n-        this.server.addConnector(httpConnector);\n+        this.server.addConnector(this.httpConnector);\n         this.server.setHandler(new JadlerHandler());\n-        this.server.setSendServerVersion(false);\n-        this.server.setSendDateHeader(false);\n+        ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n+        ((ServerConnector)this.httpConnector).setSendDateHeader(false);\n         this.server.start();\n     }\n \n     @Override\n@@ -74,7 +74,7 @@ public class JettyStubHttpServer implements StubHttpServer {\n \n     @Override\n     public int getPort() {\n-        return httpConnector.getLocalPort();\n+        return this.httpConnector.getLocalPort();\n     }\n \n     private static class JadlerHandler extends AbstractHandler {\n```\n",
            "output": "Diff Error: UnifiedDiffNoMatch: hunk failed to apply!\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 13 exact lines in a row:\n```\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.httpConnector = new SelectChannelConnector();\n        this.httpConnector.setPort(port);\n        this.server.addConnector(httpConnector);\n        this.server.setHandler(new JadlerHandler());\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(false);\n        this.server.start();\n    }\n\n    @Override\n```\n",
            "error": "UnifiedDiffNoMatch: hunk failed to apply!\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 13 exact lines in a row:\n```\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.httpConnector = new SelectChannelConnector();\n        this.httpConnector.setPort(port);\n        this.server.addConnector(httpConnector);\n        this.server.setHandler(new JadlerHandler());\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(false);\n        this.server.start();\n    }\n\n    @Override\n```\n",
            "span_id": 6929921148178882055
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -9,7 +9,7 @@ import org.eclipse.jetty.server.Connector;\n import org.eclipse.jetty.server.Server;\n import org.eclipse.jetty.server.nio.SelectChannelConnector;\n import org.eclipse.jetty.server.handler.AbstractHandler;\n-import org.eclipse.jetty.server.nio.SelectChannelConnector;\n+import org.eclipse.jetty.server.ServerConnector;\n \n public class JettyStubHttpServer implements StubHttpServer {\n \n@@ -27,11 +27,11 @@ public class JettyStubHttpServer implements StubHttpServer {\n \n     public JettyStubHttpServer(final int port) {\n         this.server = new Server();\n-        this.httpConnector = new SelectChannelConnector();\n+        this.httpConnector = new ServerConnector(this.server);\n         this.httpConnector.setPort(port);\n-        this.server.addConnector(httpConnector);\n+        this.server.addConnector(this.httpConnector);\n         this.server.setHandler(new JadlerHandler());\n-        this.server.setSendServerVersion(false);\n+        ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n         this.server.setSendDateHeader(false);\n         this.server.start();\n     }\n@@ -74,7 +74,7 @@ public class JettyStubHttpServer implements StubHttpServer {\n \n     @Override\n     public int getPort() {\n-        return httpConnector.getLocalPort();\n+        return this.httpConnector.getLocalPort();\n     }\n \n     private static class JadlerHandler extends AbstractHandler {\n```",
            "output": "{'jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java': '/*\\n * Copyright (c) 2012 - 2016 Jadler contributors\\n * This program is made available under the terms of the MIT License.\\n */\\npackage net.jadler.stubbing.server.jetty;\\n\\nimport net.jadler.RequestManager;\\nimport net.jadler.stubbing.server.StubHttpServer;\\nimport org.apache.commons.lang.Validate;\\nimport org.eclipse.jetty.server.Connector;\\nimport org.eclipse.jetty.server.Server;\\nimport org.eclipse.jetty.server.ServerConnector;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\n\\n\\n/**\\n * Default stub http server implementation using Jetty as an http server.\\n */\\npublic class JettyStubHttpServer implements StubHttpServer {\\n\\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\\n    private final Server server;\\n    private final Connector httpConnector;\\n\\n    public JettyStubHttpServer() {\\n        this(0);\\n    }\\n\\n\\n    public JettyStubHttpServer(final int port) {\\n        this.server = new Server();\\n        ((ServerConnector)this.httpConnector).setSendServerVersion(false);\\n        this.server.setSendDateHeader(true);\\n\\n        this.httpConnector = new ServerConnector(this.server);\\n        this.httpConnector.setPort(port);\\n-        this.server.addConnector(httpConnector);\\n+        this.server.addConnector(this.httpConnector);\\n        server.setHandler(new JadlerHandler(ruleProvider));\\n    }\\n\\n\\n    /**\\n     * {@inheritDoc}\\n     */\\n    @Override\\n    public void start() throws Exception {\\n        logger.debug(\"starting jetty\");\\n        server.start();\\n        logger.debug(\"jetty started\");\\n    }\\n\\n\\n    /**\\n     * {@inheritDoc}\\n     */\\n    @Override\\n    public void stop() throws Exception {\\n        logger.debug(\"stopping jetty\");\\n        server.stop();\\n        logger.debug(\"jetty stopped\");\\n    }\\n\\n\\n    /**\\n     * {@inheritDoc}\\n     */\\n    @Override\\n    public int getPort() {\\nreturn this.httpConnector.getLocalPort();\\n    }\\n}'}",
            "error": "",
            "span_id": 14664619989711164614
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -9,7 +9,7 @@ import org.eclipse.jetty.server.Connector;\n import org.eclipse.jetty.server.Server;\n import org.eclipse.jetty.server.nio.SelectChannelConnector;\n import org.eclipse.jetty.server.handler.AbstractHandler;\n-import org.eclipse.jetty.server.nio.SelectChannelConnector;\n+import org.eclipse.jetty.server.ServerConnector;\n \n public class JettyStubHttpServer implements StubHttpServer {\n \n@@ -27,11 +27,11 @@ public class JettyStubHttpServer implements StubHttpServer {\n         this.server = new Server();\n         this.httpConnector = new ServerConnector(this.server);\n         this.httpConnector.setPort(port);\n-        this.server.addConnector(httpConnector);\n+        this.server.addConnector(this.httpConnector);\n         this.server.setHandler(new JadlerHandler());\n-        this.server.setSendServerVersion(false);\n-        this.server.setSendDateHeader(false);\n-        this.server.start();\n+        ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n+        ((ServerConnector)this.httpConnector).setSendDateHeader(false);\n+        this.server.start();\n     }\n \n     @Override\n@@ -74,7 +74,7 @@ public class JettyStubHttpServer implements StubHttpServer {\n \n     @Override\n     public int getPort() {\n-        return httpConnector.getLocalPort();\n+        return this.httpConnector.getLocalPort();\n     }\n \n     private static class JadlerHandler extends AbstractHandler {\n```",
            "output": "Diff Error: UnifiedDiffNoMatch: hunk failed to apply!\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 7 exact lines in a row:\n```\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\n\npublic class JettyStubHttpServer implements StubHttpServer {\n\n```\n\n\nUnifiedDiffNoMatch: hunk failed to apply!\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 11 exact lines in a row:\n```\n        this.server = new Server();\n        this.httpConnector = new ServerConnector(this.server);\n        this.httpConnector.setPort(port);\n        this.server.addConnector(httpConnector);\n        this.server.setHandler(new JadlerHandler());\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(false);\n        this.server.start();\n    }\n\n    @Override\n```\n\n\nUnifiedDiffNoMatch: hunk failed to apply!\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 7 exact lines in a row:\n```\n\n    @Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n    }\n\n    private static class JadlerHandler extends AbstractHandler {\n```\n",
            "error": "UnifiedDiffNoMatch: hunk failed to apply!\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 7 exact lines in a row:\n```\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\n\npublic class JettyStubHttpServer implements StubHttpServer {\n\n```\n\n\nUnifiedDiffNoMatch: hunk failed to apply!\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 11 exact lines in a row:\n```\n        this.server = new Server();\n        this.httpConnector = new ServerConnector(this.server);\n        this.httpConnector.setPort(port);\n        this.server.addConnector(httpConnector);\n        this.server.setHandler(new JadlerHandler());\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(false);\n        this.server.start();\n    }\n\n    @Override\n```\n\n\nUnifiedDiffNoMatch: hunk failed to apply!\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\n\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 7 exact lines in a row:\n```\n\n    @Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n    }\n\n    private static class JadlerHandler extends AbstractHandler {\n```\n",
            "span_id": 10791281376861816876
        }
    ],
    "compile_maven": [
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -11,7 +11,7 @@ import org.eclipse.jetty.server.Server;\n import org.eclipse.jetty.server.Connector;\n import org.eclipse.jetty.server.nio.SelectChannelConnector;\n import org.eclipse.jetty.server.handler.AbstractHandler;\n-import org.eclipse.jetty.server.nio.SelectChannelConnector;\n+import org.eclipse.jetty.server.ServerConnector;\n \n public class JettyStubHttpServer implements StubHttpServer {\n \n@@ -30,11 +30,11 @@ public class JettyStubHttpServer implements StubHttpServer {\n         this.server = new Server();\n         this.httpConnector = new ServerConnector(this.server);\n         this.httpConnector.setPort(port);\n-        this.server.addConnector(httpConnector);\n+        this.server.addConnector(this.httpConnector);\n         this.server.setHandler(new JadlerHandler());\n-        this.server.setSendServerVersion(false);\n-        this.server.setSendDateHeader(false);\n-        this.server.start();\n+        ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n+        ((ServerConnector)this.httpConnector).setSendDateHeader(false);\n+        this.server.start();\n     }\n \n     @Override\n@@ -77,7 +77,7 @@ public class JettyStubHttpServer implements StubHttpServer {\n \n     @Override\n     public int getPort() {\n-        return httpConnector.getLocalPort();\n+        return this.httpConnector.getLocalPort();\n     }\n \n     private static class JadlerHandler extends AbstractHandler {\n```\n\nThe main changes are:\n\n1. Replaced `org.eclipse.jetty.server.nio.SelectChannelConnector` with `org.eclipse.jetty.server.ServerConnector` as the Jetty 11 version no longer has the `SelectChannelConnector` class.\n2. Used `((ServerConnector)this.httpConnector).setSendServerVersion(false)` and `((ServerConnector)this.httpConnector).setSendDateHeader(false)` to set the server version and date header, as the `Server` class no longer has these methods.\n3. Accessed `this.httpConnector.getLocalPort()` directly instead of `httpConnector.getLocalPort()` to fix the symbol not found error.\n\nThese changes should resolve the compilation errors caused by the Jetty version upgrade.",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 11 exact lines in a row:\n```\nthis.server = new Server();\nthis.httpConnector = new ServerConnector(this.server);\nthis.httpConnector.setPort(port);\nthis.server.addConnector(httpConnector);\nthis.server.setHandler(new JadlerHandler());\nthis.server.setSendServerVersion(false);\nthis.server.setSendDateHeader(false);\nthis.server.start();\n}\n@Override\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 11 exact lines in a row:\n```\nthis.server = new Server();\nthis.httpConnector = new ServerConnector(this.server);\nthis.httpConnector.setPort(port);\nthis.server.addConnector(httpConnector);\nthis.server.setHandler(new JadlerHandler());\nthis.server.setSendServerVersion(false);\nthis.server.setSendDateHeader(false);\nthis.server.start();\n}\n@Override\n```",
            "span_id": 17156642669040451629
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -9,7 +9,7 @@ import org.eclipse.jetty.server.Connector;\n import org.eclipse.jetty.server.Server;\n import org.eclipse.jetty.server.nio.SelectChannelConnector;\n import org.eclipse.jetty.server.handler.AbstractHandler;\n-import org.eclipse.jetty.server.nio.SelectChannelConnector;\n+import org.eclipse.jetty.server.ServerConnector;\n \n public class JettyStubHttpServer implements StubHttpServer {\n \n@@ -27,11 +27,11 @@ public class JettyStubHttpServer implements StubHttpServer {\n \n     public JettyStubHttpServer(final int port) {\n         this.server = new Server();\n-        this.httpConnector = new SelectChannelConnector();\n+        this.httpConnector = new ServerConnector(this.server);\n         this.httpConnector.setPort(port);\n-        this.server.addConnector(httpConnector);\n+        this.server.addConnector(this.httpConnector);\n         this.server.setHandler(new JadlerHandler());\n-        this.server.setSendServerVersion(false);\n+        ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n         this.server.setSendDateHeader(false);\n         this.server.start();\n     }\n@@ -74,7 +74,7 @@ public class JettyStubHttpServer implements StubHttpServer {\n \n     @Override\n     public int getPort() {\n-        return httpConnector.getLocalPort();\n+        return this.httpConnector.getLocalPort();\n     }\n \n     private static class JadlerHandler extends AbstractHandler {\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: not a statement\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new ServerConnector(this.server);\n        this.httpConnector.setPort(port);\n-        this.server.addConnector(httpConnector);\n+        this.server.addConnector(this.httpConnector);\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\nreturn this.httpConnector.getLocalPort();\n    }\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "38": {
                            "lines": [
                                {
                                    "line_no": 37,
                                    "content": "        this.httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 38,
                                    "content": "-        this.server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "+        this.server.addConnector(this.httpConnector);"
                                }
                            ],
                            "error_texts": [
                                "[38,] error: not a statement\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "-        this.server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "+        this.server.addConnector(this.httpConnector);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "        server.setHandler(new JadlerHandler(ruleProvider));"
                                }
                            ],
                            "error_texts": [
                                "[39,] error: not a statement\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: not a statement\n",
            "span_id": 16351842831048430255
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -24,14 +24,14 @@ public class JettyStubHttpServer implements StubHttpServer {\n \n \n     public JettyStubHttpServer(final int port) {\n-        this.server = new Server();\n         this.httpConnector = new ServerConnector(this.server);\n+        this.server = new Server();\n         this.httpConnector.setPort(port);\n         this.server.addConnector(this.httpConnector);\n         this.server.setHandler(new JadlerHandler());\n         ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n         this.server.setSendDateHeader(false);\n-        this.server.start();\n+        this.server.start();\n     }\n \n     @Override\n```\n",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: not a statement\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.httpConnector = new ServerConnector(this.server);\n        this.server = new Server();\n        ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector.setPort(port);\n-        this.server.addConnector(httpConnector);\n+        this.server.addConnector(this.httpConnector);\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\nreturn this.httpConnector.getLocalPort();\n    }\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "38": {
                            "lines": [
                                {
                                    "line_no": 37,
                                    "content": "        this.httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 38,
                                    "content": "-        this.server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "+        this.server.addConnector(this.httpConnector);"
                                }
                            ],
                            "error_texts": [
                                "[38,] error: not a statement\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "-        this.server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "+        this.server.addConnector(this.httpConnector);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "        server.setHandler(new JadlerHandler(ruleProvider));"
                                }
                            ],
                            "error_texts": [
                                "[39,] error: not a statement\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: not a statement\n",
            "span_id": 4441500143774956626
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -24,14 +24,14 @@ public class JettyStubHttpServer implements StubHttpServer {\n \n \n     public JettyStubHttpServer(final int port) {\n-        this.httpConnector = new ServerConnector(this.server);\n         this.server = new Server();\n+        this.httpConnector = new ServerConnector(this.server);\n         this.httpConnector.setPort(port);\n         this.server.addConnector(this.httpConnector);\n         this.server.setHandler(new JadlerHandler());\n         ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n         this.server.setSendDateHeader(false);\n-        this.server.start();\n+        this.server.start();\n     }\n \n     @Override\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: not a statement\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.httpConnector = new ServerConnector(this.server);\n        ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector.setPort(port);\n-        this.server.addConnector(httpConnector);\n+        this.server.addConnector(this.httpConnector);\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\nreturn this.httpConnector.getLocalPort();\n    }\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "38": {
                            "lines": [
                                {
                                    "line_no": 37,
                                    "content": "        this.httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 38,
                                    "content": "-        this.server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "+        this.server.addConnector(this.httpConnector);"
                                }
                            ],
                            "error_texts": [
                                "[38,] error: not a statement\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "-        this.server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "+        this.server.addConnector(this.httpConnector);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "        server.setHandler(new JadlerHandler(ruleProvider));"
                                }
                            ],
                            "error_texts": [
                                "[39,] error: not a statement\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: not a statement\n",
            "span_id": 15678283865447161914
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -24,14 +24,14 @@ public class JettyStubHttpServer implements StubHttpServer {\n \n \n     public JettyStubHttpServer(final int port) {\n-        this.server = new Server();\n-        this.httpConnector = new ServerConnector(this.server);\n+        this.server = new Server();\n+        this.httpConnector = new ServerConnector(this.server);\n         this.httpConnector.setPort(port);\n         this.server.addConnector(this.httpConnector);\n         this.server.setHandler(new JadlerHandler());\n         ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n         this.server.setSendDateHeader(false);\n-        this.server.start();\n+        this.server.start();\n     }\n \n     @Override\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoEdits: no applicable hunks found!\nThe provided diff does not contain any hunks that can be applied to the files in the repository.\nEnsure that your diff correctly specifies the changes and try again.\nThe diff needs to apply to the existing lines in the files.",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoEdits: no applicable hunks found!\nThe provided diff does not contain any hunks that can be applied to the files in the repository.\nEnsure that your diff correctly specifies the changes and try again.\nThe diff needs to apply to the existing lines in the files.",
            "span_id": 14424232807830008937
        }
    ],
    "read_file": [
        {
            "input": "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java",
            "output": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\n        this.httpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n    }\n}",
            "error": "",
            "span_id": 15508032233165386269
        },
        {
            "input": "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java",
            "output": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\n        this.httpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n    }\n}",
            "error": "",
            "span_id": 2441772811720918165
        },
        {
            "input": "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java",
            "output": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new ServerConnector(this.server);\n        this.httpConnector.setPort(port);\n-        this.server.addConnector(httpConnector);\n+        this.server.addConnector(this.httpConnector);\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\nreturn this.httpConnector.getLocalPort();\n    }\n}",
            "error": "",
            "span_id": 17822971757738551916
        },
        {
            "input": "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java",
            "output": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.httpConnector = new ServerConnector(this.server);\n        ((ServerConnector)this.httpConnector).setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector.setPort(port);\n-        this.server.addConnector(httpConnector);\n+        this.server.addConnector(this.httpConnector);\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\nreturn this.httpConnector.getLocalPort();\n    }\n}",
            "error": "",
            "span_id": 10215477532062303644
        }
    ],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}