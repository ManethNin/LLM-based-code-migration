diff --git a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java
index b6fde22..4f41909 100644
--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java
+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java
@@ -9,7 +9,7 @@ import net.jadler.stubbing.server.StubHttpServer;
 import org.apache.commons.lang.Validate;
 import org.eclipse.jetty.server.Connector;
 import org.eclipse.jetty.server.Server;
-import org.eclipse.jetty.server.nio.SelectChannelConnector;
+import org.eclipse.jetty.server.ServerConnector;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -30,22 +30,13 @@ public class JettyStubHttpServer implements StubHttpServer {
 
     public JettyStubHttpServer(final int port) {
         this.server = new Server();
-        this.server.setSendServerVersion(false);
+        this.httpConnector = new ServerConnector(this.server);
+        ((ServerConnector)this.httpConnector).setSendServerVersion(false);
         this.server.setSendDateHeader(true);
 
-        this.httpConnector = new SelectChannelConnector();
         this.httpConnector.setPort(port);
-        server.addConnector(this.httpConnector);
-    }
-
-
-    /**
-     * {@inheritDoc}
-     */
-    @Override
-    public void registerRequestManager(final RequestManager ruleProvider) {
-        Validate.notNull(ruleProvider, "ruleProvider cannot be null");
-
+-        this.server.addConnector(httpConnector);
++        this.server.addConnector(this.httpConnector);
         server.setHandler(new JadlerHandler(ruleProvider));
     }
 
@@ -77,6 +68,6 @@ public class JettyStubHttpServer implements StubHttpServer {
      */
     @Override
     public int getPort() {
-        return httpConnector.getLocalPort();
+return this.httpConnector.getLocalPort();
     }
 }
\ No newline at end of file