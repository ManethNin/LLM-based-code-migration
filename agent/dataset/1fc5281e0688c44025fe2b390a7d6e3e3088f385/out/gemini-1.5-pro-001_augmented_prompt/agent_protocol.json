{
    "validate_diffs": [],
    "compile_maven": [
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -10,8 +10,8 @@\n import org.eclipse.jetty.server.handler.AbstractHandler;\n import org.eclipse.jetty.server.Request;\n import org.eclipse.jetty.server.Server;\n-import org.eclipse.jetty.server.nio.SelectChannelConnector;\n import org.slf4j.Logger;\n+import org.eclipse.jetty.server.ServerConnector;\n \n import static org.slf4j.LoggerFactory.getLogger;\n \n@@ -31,18 +31,16 @@\n     public JettyStubHttpServer(final JadlerConfiguration jadlerConfiguration) {\n         this.jadlerConfiguration = jadlerConfiguration;\n         server = new Server();\n-        server.setSendServerVersion(false);\n-        server.setSendDateHeader(false);\n-        final Connector httpConnector = new SelectChannelConnector();\n-        httpConnector.setPort(jadlerConfiguration.getPort());\n+        final ServerConnector httpConnector = new ServerConnector(server);\n+        httpConnector.setPort(jadlerConfiguration.getPort()); \n         server.addConnector(httpConnector);\n \n         final AbstractHandler handler = new JadlerHandler(jadlerConfiguration.getState());\n         server.setHandler(handler);\n     }\n \n-    public int getPort() {\n-        return ((SelectChannelConnector) server.getConnectors()[0]).getLocalPort();\n+    public int getPort() { \n+        return ((ServerConnector) server.getConnectors()[0]).getLocalPort();\n     }\n \n     public void start() {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 19 exact lines in a row:\n```\npublic JettyStubHttpServer(final JadlerConfiguration jadlerConfiguration) {\nthis.jadlerConfiguration = jadlerConfiguration;\nserver = new Server();\nserver.setSendServerVersion(false);\nserver.setSendDateHeader(false);\nfinal Connector httpConnector = new SelectChannelConnector();\nhttpConnector.setPort(jadlerConfiguration.getPort());\nserver.addConnector(httpConnector);\nfinal AbstractHandler handler = new JadlerHandler(jadlerConfiguration.getState());\nserver.setHandler(handler);\n}\npublic int getPort() {\nreturn ((SelectChannelConnector) server.getConnectors()[0]).getLocalPort();\n}\npublic void start() {\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 19 exact lines in a row:\n```\npublic JettyStubHttpServer(final JadlerConfiguration jadlerConfiguration) {\nthis.jadlerConfiguration = jadlerConfiguration;\nserver = new Server();\nserver.setSendServerVersion(false);\nserver.setSendDateHeader(false);\nfinal Connector httpConnector = new SelectChannelConnector();\nhttpConnector.setPort(jadlerConfiguration.getPort());\nserver.addConnector(httpConnector);\nfinal AbstractHandler handler = new JadlerHandler(jadlerConfiguration.getState());\nserver.setHandler(handler);\n}\npublic int getPort() {\nreturn ((SelectChannelConnector) server.getConnectors()[0]).getLocalPort();\n}\npublic void start() {\n```",
            "span_id": 3585365205365281661
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -7,11 +7,11 @@\n \n package net.jadler.stubbing.server.jetty;\n \n+import org.eclipse.jetty.server.Connector;\n import org.eclipse.jetty.server.handler.AbstractHandler;\n import org.eclipse.jetty.server.Request;\n import org.eclipse.jetty.server.Server;\n+import org.eclipse.jetty.server.ServerConnector;\n import org.slf4j.Logger;\n-import org.eclipse.jetty.server.ServerConnector;\n \n import static org.slf4j.LoggerFactory.getLogger;\n \n@@ -29,18 +29,16 @@\n     private final JadlerConfiguration jadlerConfiguration;\n \n     public JettyStubHttpServer(final JadlerConfiguration jadlerConfiguration) {\n-        this.jadlerConfiguration = jadlerConfiguration;\n         server = new Server();\n-        final ServerConnector httpConnector = new ServerConnector(server);\n-        httpConnector.setPort(jadlerConfiguration.getPort()); \n+        final Connector httpConnector = new ServerConnector(server);\n+        ((ServerConnector) httpConnector).setPort(jadlerConfiguration.getPort());\n         server.addConnector(httpConnector);\n \n         final AbstractHandler handler = new JadlerHandler(jadlerConfiguration.getState());\n         server.setHandler(handler);\n+        this.jadlerConfiguration = jadlerConfiguration;\n     }\n \n-    public int getPort() { \n+    public int getPort() {\n         return ((ServerConnector) server.getConnectors()[0]).getLocalPort();\n     }\n \n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 18 exact lines in a row:\n```\nprivate final JadlerConfiguration jadlerConfiguration;\npublic JettyStubHttpServer(final JadlerConfiguration jadlerConfiguration) {\nthis.jadlerConfiguration = jadlerConfiguration;\nserver = new Server();\nfinal ServerConnector httpConnector = new ServerConnector(server);\nhttpConnector.setPort(jadlerConfiguration.getPort());\nserver.addConnector(httpConnector);\nfinal AbstractHandler handler = new JadlerHandler(jadlerConfiguration.getState());\nserver.setHandler(handler);\n}\npublic int getPort() {\nreturn ((ServerConnector) server.getConnectors()[0]).getLocalPort();\n}\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 18 exact lines in a row:\n```\nprivate final JadlerConfiguration jadlerConfiguration;\npublic JettyStubHttpServer(final JadlerConfiguration jadlerConfiguration) {\nthis.jadlerConfiguration = jadlerConfiguration;\nserver = new Server();\nfinal ServerConnector httpConnector = new ServerConnector(server);\nhttpConnector.setPort(jadlerConfiguration.getPort());\nserver.addConnector(httpConnector);\nfinal AbstractHandler handler = new JadlerHandler(jadlerConfiguration.getState());\nserver.setHandler(handler);\n}\npublic int getPort() {\nreturn ((ServerConnector) server.getConnectors()[0]).getLocalPort();\n}\n```",
            "span_id": 12676770633108161890
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -7,11 +7,11 @@\n \n package net.jadler.stubbing.server.jetty;\n \n-import org.eclipse.jetty.server.Connector;\n import org.eclipse.jetty.server.handler.AbstractHandler;\n import org.eclipse.jetty.server.Request;\n import org.eclipse.jetty.server.Server;\n import org.eclipse.jetty.server.ServerConnector;\n+import org.eclipse.jetty.util.thread.QueuedThreadPool;\n import org.slf4j.Logger;\n \n import static org.slf4j.LoggerFactory.getLogger;\n@@ -29,8 +29,8 @@\n     private final JadlerConfiguration jadlerConfiguration;\n \n     public JettyStubHttpServer(final JadlerConfiguration jadlerConfiguration) {\n-        server = new Server();\n-        final Connector httpConnector = new ServerConnector(server);\n+        server = new Server(new QueuedThreadPool(100));\n+        final ServerConnector httpConnector = new ServerConnector(server);\n         ((ServerConnector) httpConnector).setPort(jadlerConfiguration.getPort());\n         server.addConnector(httpConnector);\n \n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 9 exact lines in a row:\n```\nprivate final JadlerConfiguration jadlerConfiguration;\npublic JettyStubHttpServer(final JadlerConfiguration jadlerConfiguration) {\nserver = new Server();\nfinal Connector httpConnector = new ServerConnector(server);\n((ServerConnector) httpConnector).setPort(jadlerConfiguration.getPort());\nserver.addConnector(httpConnector);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 9 exact lines in a row:\n```\nprivate final JadlerConfiguration jadlerConfiguration;\npublic JettyStubHttpServer(final JadlerConfiguration jadlerConfiguration) {\nserver = new Server();\nfinal Connector httpConnector = new ServerConnector(server);\n((ServerConnector) httpConnector).setPort(jadlerConfiguration.getPort());\nserver.addConnector(httpConnector);\n```",
            "span_id": 18155204035984822104
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -29,7 +29,7 @@\n     private final JadlerConfiguration jadlerConfiguration;\n \n     public JettyStubHttpServer(final JadlerConfiguration jadlerConfiguration) {\n-        server = new Server(new QueuedThreadPool(100));\n+        server = new Server(new QueuedThreadPool(200));\n         final ServerConnector httpConnector = new ServerConnector(server);\n         ((ServerConnector) httpConnector).setPort(jadlerConfiguration.getPort());\n         server.addConnector(httpConnector);\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 8 exact lines in a row:\n```\nprivate final JadlerConfiguration jadlerConfiguration;\npublic JettyStubHttpServer(final JadlerConfiguration jadlerConfiguration) {\nserver = new Server(new QueuedThreadPool(100));\nfinal ServerConnector httpConnector = new ServerConnector(server);\n((ServerConnector) httpConnector).setPort(jadlerConfiguration.getPort());\nserver.addConnector(httpConnector);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 8 exact lines in a row:\n```\nprivate final JadlerConfiguration jadlerConfiguration;\npublic JettyStubHttpServer(final JadlerConfiguration jadlerConfiguration) {\nserver = new Server(new QueuedThreadPool(100));\nfinal ServerConnector httpConnector = new ServerConnector(server);\n((ServerConnector) httpConnector).setPort(jadlerConfiguration.getPort());\nserver.addConnector(httpConnector);\n```",
            "span_id": 5555881446849324283
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n@@ -22,16 +22,17 @@\n \n     private final StubbingState stubbingState;\n \n-    public JadlerHandler(final StubbingState stubbingState) {\n+    JadlerHandler(final StubbingState stubbingState) {\n         this.stubbingState = stubbingState;\n     }\n \n     @Override\n-    public void handle(final String target,\n-                       final Request baseRequest,\n-                       final HttpServletRequest request,\n-                       final HttpServletResponse response) throws IOException, ServletException {\n-        handleRequest(request, response);\n+    public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)\n+            throws IOException, ServletException {\n+        if (baseRequest.isHandled()) {\n+            return;\n+        }\n+        handleRequest(request, response); \n     }\n \n     private void handleRequest(final HttpServletRequest request, final HttpServletResponse response) throws IOException {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java does not contain these 17 exact lines in a row:\n```\nprivate final StubbingState stubbingState;\npublic JadlerHandler(final StubbingState stubbingState) {\nthis.stubbingState = stubbingState;\n}\n@Override\npublic void handle(final String target,\nfinal Request baseRequest,\nfinal HttpServletRequest request,\nfinal HttpServletResponse response) throws IOException, ServletException {\nhandleRequest(request, response);\n}\nprivate void handleRequest(final HttpServletRequest request, final HttpServletResponse response) throws IOException {\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java does not contain these 17 exact lines in a row:\n```\nprivate final StubbingState stubbingState;\npublic JadlerHandler(final StubbingState stubbingState) {\nthis.stubbingState = stubbingState;\n}\n@Override\npublic void handle(final String target,\nfinal Request baseRequest,\nfinal HttpServletRequest request,\nfinal HttpServletResponse response) throws IOException, ServletException {\nhandleRequest(request, response);\n}\nprivate void handleRequest(final HttpServletRequest request, final HttpServletResponse response) throws IOException {\n```",
            "span_id": 16162208772365282158
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n@@ -27,12 +27,11 @@\n     }\n \n     @Override\n-    public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)\n+    public void handle(final String target, final Request baseRequest, final HttpServletRequest request, final HttpServletResponse response)\n             throws IOException, ServletException {\n-        if (baseRequest.isHandled()) {\n+        if (baseRequest.isHandled())\n             return;\n-        }\n-        handleRequest(request, response); \n+        handleRequest(request, response);\n     }\n \n     private void handleRequest(final HttpServletRequest request, final HttpServletResponse response) throws IOException {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java does not contain these 13 exact lines in a row:\n```\n}\n@Override\npublic void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)\nthrows IOException, ServletException {\nif (baseRequest.isHandled()) {\nreturn;\n}\nhandleRequest(request, response);\n}\nprivate void handleRequest(final HttpServletRequest request, final HttpServletResponse response) throws IOException {\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java does not contain these 13 exact lines in a row:\n```\n}\n@Override\npublic void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)\nthrows IOException, ServletException {\nif (baseRequest.isHandled()) {\nreturn;\n}\nhandleRequest(request, response);\n}\nprivate void handleRequest(final HttpServletRequest request, final HttpServletResponse response) throws IOException {\n```",
            "span_id": 17290927022273434368
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n@@ -23,7 +23,7 @@\n     private final StubbingState stubbingState;\n \n     JadlerHandler(final StubbingState stubbingState) {\n-        this.stubbingState = stubbingState;\n+        this.stubbingState = stubbingState; \n     }\n \n     @Override\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java does not contain these 8 exact lines in a row:\n```\nprivate final StubbingState stubbingState;\nJadlerHandler(final StubbingState stubbingState) {\nthis.stubbingState = stubbingState;\n}\n@Override\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java does not contain these 8 exact lines in a row:\n```\nprivate final StubbingState stubbingState;\nJadlerHandler(final StubbingState stubbingState) {\nthis.stubbingState = stubbingState;\n}\n@Override\n```",
            "span_id": 7639556787910549623
        }
    ],
    "read_file": [],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}