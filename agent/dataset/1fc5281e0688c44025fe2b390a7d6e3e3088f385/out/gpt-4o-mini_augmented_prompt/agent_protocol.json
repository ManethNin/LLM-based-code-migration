{
    "validate_diffs": [],
    "compile_maven": [
        {
            "input": "```diff\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n@@ -22,0 +23,1 @@\n+import org.eclipse.jetty.server.Request;\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -10,0 +11,1 @@\n+import org.eclipse.jetty.server.Server;\n@@ -12,0 +13,1 @@\n+import org.eclipse.jetty.server.HttpConfiguration;\n@@ -14,0 +15,1 @@\n+import org.eclipse.jetty.server.HttpConnectionFactory;\n@@ -15,0 +16,1 @@\n+import org.eclipse.jetty.server.ServerConnector;\n@@ -20,0 +21,1 @@\n+import org.eclipse.jetty.server.handler.AbstractHandler;\n@@ -30,0 +31,1 @@\n+        HttpConfiguration httpConfig = new HttpConfiguration();\n@@ -31,0 +32,1 @@\n+        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n@@ -32,0 +33,1 @@\n+        httpConnector.setPort(port);\n@@ -33,0 +34,1 @@\n+        server.addConnector(httpConnector);\n@@ -34,0 +35,1 @@\n+        server.setHandler(new JadlerHandler());\n@@ -35,0 +36,1 @@\n+        server.start();\n@@ -36,0 +37,1 @@\n+        server.join();\n@@ -79,0 +80,1 @@\n+        return httpConnector.getLocalPort();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: class, interface, or enum expected\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.KeyValues;\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.StubResponse;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Request;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\n\n/**\n * Jetty Handler which handles all http communication by returning an http response according to a stub response\n * obtained from a {@link RequestManager} instance.\n */\nclass JadlerHandler extends AbstractHandler {\n\n    private final RequestManager requestManager;\n\n\n    /**\n     * @param requestManager request manager instance to retrieve stub responses\n     */\n    JadlerHandler(final RequestManager requestManager) {\n        Validate.notNull(requestManager, \"requestManager cannot be null\");\n        this.requestManager = requestManager;\n    }\n\n\n    @Override\n    public void handle(final String target, final Request baseRequest, final HttpServletRequest request,\n                       final HttpServletResponse response) throws IOException, ServletException {\n\n        final net.jadler.Request req = RequestUtils.convert(request);\n        final StubResponse stubResponse = this.requestManager.provideStubResponseFor(req);\n\n        response.setStatus(stubResponse.getStatus());\n        this.insertResponseHeaders(stubResponse.getHeaders(), response);\n\n        baseRequest.setHandled(true);\n\n        this.processDelay(stubResponse.getDelay());\n        this.insertResponseBody(stubResponse.getBody(), response);\n    }\n\n\n    private void insertResponseBody(final byte[] body, final HttpServletResponse response) throws IOException {\n        if (body.length > 0) {\n            final OutputStream os = response.getOutputStream();\n            os.write(body);\n        }\n    }\n\n\n    private void insertResponseHeaders(final KeyValues headers, final HttpServletResponse response) {\n        for (final String key : headers.getKeys()) {\n\n            for (final String value : headers.getValues(key)) {\n                response.addHeader(key, value);\n            }\n        }\n    }\n\n\n    private void processDelay(final long delay) {\n        if (delay > 0) {\n            try {\n                Thread.sleep(delay);\n            } catch (final InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n        }\n    }\n}import org.eclipse.jetty.server.Request;\n",
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\n        this.httpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n    }\n}import org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.HttpConnectionFactory;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n        httpConnector.setPort(port);\n        server.addConnector(httpConnector);\n        server.setHandler(new JadlerHandler());\n        server.start();\n        server.join();\n        return httpConnector.getLocalPort();\n"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": {
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 83,
                                    "content": "}import org.eclipse.jetty.server.Request;"
                                },
                                {
                                    "line_no": 84,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[83,1] error: class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                }
                            ],
                            "error_texts": [
                                "[82,1] error: class, interface, or enum expected\n"
                            ]
                        },
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                }
                            ],
                            "error_texts": [
                                "[83,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "84": {
                            "lines": [
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                }
                            ],
                            "error_texts": [
                                "[84,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "85": {
                            "lines": [
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                }
                            ],
                            "error_texts": [
                                "[85,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "86": {
                            "lines": [
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                }
                            ],
                            "error_texts": [
                                "[86,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "87": {
                            "lines": [
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                }
                            ],
                            "error_texts": [
                                "[87,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "88": {
                            "lines": [
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                }
                            ],
                            "error_texts": [
                                "[88,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "89": {
                            "lines": [
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                }
                            ],
                            "error_texts": [
                                "[89,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "90": {
                            "lines": [
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                }
                            ],
                            "error_texts": [
                                "[90,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "91": {
                            "lines": [
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                }
                            ],
                            "error_texts": [
                                "[91,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "92": {
                            "lines": [
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                }
                            ],
                            "error_texts": [
                                "[92,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "93": {
                            "lines": [
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                }
                            ],
                            "error_texts": [
                                "[93,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "94": {
                            "lines": [
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                },
                                {
                                    "line_no": 95,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[94,8] error: class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: class, interface, or enum expected\n",
            "span_id": 16573681002056140913
        },
        {
            "input": "```diff\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n@@ -22,0 +23,1 @@\n+import org.eclipse.jetty.server.Request;\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -10,0 +11,1 @@\n+import org.eclipse.jetty.server.Server;\n@@ -12,0 +13,1 @@\n+import org.eclipse.jetty.server.HttpConfiguration;\n@@ -14,0 +15,1 @@\n+import org.eclipse.jetty.server.HttpConnectionFactory;\n@@ -15,0 +16,1 @@\n+import org.eclipse.jetty.server.ServerConnector;\n@@ -20,0 +21,1 @@\n+import org.eclipse.jetty.server.handler.AbstractHandler;\n@@ -30,0 +31,1 @@\n+        HttpConfiguration httpConfig = new HttpConfiguration();\n@@ -31,0 +32,1 @@\n+        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n@@ -32,0 +33,1 @@\n+        httpConnector.setPort(port);\n@@ -33,0 +34,1 @@\n+        server.addConnector(httpConnector);\n@@ -34,0 +35,1 @@\n+        server.setHandler(new JadlerHandler());\n@@ -35,0 +36,1 @@\n+        server.start();\n@@ -36,0 +37,1 @@\n+        server.join();\n@@ -79,0 +80,1 @@\n+        return httpConnector.getLocalPort();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: class, interface, or enum expected\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.KeyValues;\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.StubResponse;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Request;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\n\n/**\n * Jetty Handler which handles all http communication by returning an http response according to a stub response\n * obtained from a {@link RequestManager} instance.\n */\nclass JadlerHandler extends AbstractHandler {\n\n    private final RequestManager requestManager;\n\n\n    /**\n     * @param requestManager request manager instance to retrieve stub responses\n     */\n    JadlerHandler(final RequestManager requestManager) {\n        Validate.notNull(requestManager, \"requestManager cannot be null\");\n        this.requestManager = requestManager;\n    }\n\n\n    @Override\n    public void handle(final String target, final Request baseRequest, final HttpServletRequest request,\n                       final HttpServletResponse response) throws IOException, ServletException {\n\n        final net.jadler.Request req = RequestUtils.convert(request);\n        final StubResponse stubResponse = this.requestManager.provideStubResponseFor(req);\n\n        response.setStatus(stubResponse.getStatus());\n        this.insertResponseHeaders(stubResponse.getHeaders(), response);\n\n        baseRequest.setHandled(true);\n\n        this.processDelay(stubResponse.getDelay());\n        this.insertResponseBody(stubResponse.getBody(), response);\n    }\n\n\n    private void insertResponseBody(final byte[] body, final HttpServletResponse response) throws IOException {\n        if (body.length > 0) {\n            final OutputStream os = response.getOutputStream();\n            os.write(body);\n        }\n    }\n\n\n    private void insertResponseHeaders(final KeyValues headers, final HttpServletResponse response) {\n        for (final String key : headers.getKeys()) {\n\n            for (final String value : headers.getValues(key)) {\n                response.addHeader(key, value);\n            }\n        }\n    }\n\n\n    private void processDelay(final long delay) {\n        if (delay > 0) {\n            try {\n                Thread.sleep(delay);\n            } catch (final InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n        }\n    }\n}import org.eclipse.jetty.server.Request;\n",
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\n        this.httpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n    }\n}import org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.HttpConnectionFactory;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n        httpConnector.setPort(port);\n        server.addConnector(httpConnector);\n        server.setHandler(new JadlerHandler());\n        server.start();\n        server.join();\n        return httpConnector.getLocalPort();\n"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": {
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 83,
                                    "content": "}import org.eclipse.jetty.server.Request;"
                                },
                                {
                                    "line_no": 84,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[83,1] error: class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                }
                            ],
                            "error_texts": [
                                "[82,1] error: class, interface, or enum expected\n"
                            ]
                        },
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                }
                            ],
                            "error_texts": [
                                "[83,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "84": {
                            "lines": [
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                }
                            ],
                            "error_texts": [
                                "[84,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "85": {
                            "lines": [
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                }
                            ],
                            "error_texts": [
                                "[85,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "86": {
                            "lines": [
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                }
                            ],
                            "error_texts": [
                                "[86,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "87": {
                            "lines": [
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                }
                            ],
                            "error_texts": [
                                "[87,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "88": {
                            "lines": [
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                }
                            ],
                            "error_texts": [
                                "[88,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "89": {
                            "lines": [
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                }
                            ],
                            "error_texts": [
                                "[89,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "90": {
                            "lines": [
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                }
                            ],
                            "error_texts": [
                                "[90,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "91": {
                            "lines": [
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                }
                            ],
                            "error_texts": [
                                "[91,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "92": {
                            "lines": [
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                }
                            ],
                            "error_texts": [
                                "[92,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "93": {
                            "lines": [
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                }
                            ],
                            "error_texts": [
                                "[93,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "94": {
                            "lines": [
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                },
                                {
                                    "line_no": 95,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[94,8] error: class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: class, interface, or enum expected\n",
            "span_id": 17715596971350736852
        },
        {
            "input": "```diff\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n@@ -22,0 +23,1 @@\n+import org.eclipse.jetty.server.Request;\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -10,0 +11,1 @@\n+import org.eclipse.jetty.server.Server;\n@@ -12,0 +13,1 @@\n+import org.eclipse.jetty.server.HttpConfiguration;\n@@ -14,0 +15,1 @@\n+import org.eclipse.jetty.server.HttpConnectionFactory;\n@@ -15,0 +16,1 @@\n+import org.eclipse.jetty.server.ServerConnector;\n@@ -20,0 +21,1 @@\n+import org.eclipse.jetty.server.handler.AbstractHandler;\n@@ -30,0 +31,1 @@\n+        HttpConfiguration httpConfig = new HttpConfiguration();\n@@ -31,0 +32,1 @@\n+        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n@@ -32,0 +33,1 @@\n+        httpConnector.setPort(port);\n@@ -33,0 +34,1 @@\n+        server.addConnector(httpConnector);\n@@ -34,0 +35,1 @@\n+        server.setHandler(new JadlerHandler());\n@@ -35,0 +36,1 @@\n+        server.start();\n@@ -36,0 +37,1 @@\n+        server.join();\n@@ -79,0 +80,1 @@\n+        return httpConnector.getLocalPort();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: class, interface, or enum expected\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.KeyValues;\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.StubResponse;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Request;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\n\n/**\n * Jetty Handler which handles all http communication by returning an http response according to a stub response\n * obtained from a {@link RequestManager} instance.\n */\nclass JadlerHandler extends AbstractHandler {\n\n    private final RequestManager requestManager;\n\n\n    /**\n     * @param requestManager request manager instance to retrieve stub responses\n     */\n    JadlerHandler(final RequestManager requestManager) {\n        Validate.notNull(requestManager, \"requestManager cannot be null\");\n        this.requestManager = requestManager;\n    }\n\n\n    @Override\n    public void handle(final String target, final Request baseRequest, final HttpServletRequest request,\n                       final HttpServletResponse response) throws IOException, ServletException {\n\n        final net.jadler.Request req = RequestUtils.convert(request);\n        final StubResponse stubResponse = this.requestManager.provideStubResponseFor(req);\n\n        response.setStatus(stubResponse.getStatus());\n        this.insertResponseHeaders(stubResponse.getHeaders(), response);\n\n        baseRequest.setHandled(true);\n\n        this.processDelay(stubResponse.getDelay());\n        this.insertResponseBody(stubResponse.getBody(), response);\n    }\n\n\n    private void insertResponseBody(final byte[] body, final HttpServletResponse response) throws IOException {\n        if (body.length > 0) {\n            final OutputStream os = response.getOutputStream();\n            os.write(body);\n        }\n    }\n\n\n    private void insertResponseHeaders(final KeyValues headers, final HttpServletResponse response) {\n        for (final String key : headers.getKeys()) {\n\n            for (final String value : headers.getValues(key)) {\n                response.addHeader(key, value);\n            }\n        }\n    }\n\n\n    private void processDelay(final long delay) {\n        if (delay > 0) {\n            try {\n                Thread.sleep(delay);\n            } catch (final InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n        }\n    }\n}import org.eclipse.jetty.server.Request;\n",
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\n        this.httpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n    }\n}import org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.HttpConnectionFactory;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n        httpConnector.setPort(port);\n        server.addConnector(httpConnector);\n        server.setHandler(new JadlerHandler());\n        server.start();\n        server.join();\n        return httpConnector.getLocalPort();\n"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": {
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 83,
                                    "content": "}import org.eclipse.jetty.server.Request;"
                                },
                                {
                                    "line_no": 84,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[83,1] error: class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                }
                            ],
                            "error_texts": [
                                "[82,1] error: class, interface, or enum expected\n"
                            ]
                        },
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                }
                            ],
                            "error_texts": [
                                "[83,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "84": {
                            "lines": [
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                }
                            ],
                            "error_texts": [
                                "[84,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "85": {
                            "lines": [
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                }
                            ],
                            "error_texts": [
                                "[85,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "86": {
                            "lines": [
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                }
                            ],
                            "error_texts": [
                                "[86,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "87": {
                            "lines": [
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                }
                            ],
                            "error_texts": [
                                "[87,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "88": {
                            "lines": [
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                }
                            ],
                            "error_texts": [
                                "[88,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "89": {
                            "lines": [
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                }
                            ],
                            "error_texts": [
                                "[89,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "90": {
                            "lines": [
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                }
                            ],
                            "error_texts": [
                                "[90,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "91": {
                            "lines": [
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                }
                            ],
                            "error_texts": [
                                "[91,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "92": {
                            "lines": [
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                }
                            ],
                            "error_texts": [
                                "[92,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "93": {
                            "lines": [
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                }
                            ],
                            "error_texts": [
                                "[93,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "94": {
                            "lines": [
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                },
                                {
                                    "line_no": 95,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[94,8] error: class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: class, interface, or enum expected\n",
            "span_id": 1808023954693914891
        },
        {
            "input": "```diff\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n@@ -22,0 +23,1 @@\n+import org.eclipse.jetty.server.Request;\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -10,0 +11,1 @@\n+import org.eclipse.jetty.server.Server;\n@@ -12,0 +13,1 @@\n+import org.eclipse.jetty.server.HttpConfiguration;\n@@ -14,0 +15,1 @@\n+import org.eclipse.jetty.server.HttpConnectionFactory;\n@@ -15,0 +16,1 @@\n+import org.eclipse.jetty.server.ServerConnector;\n@@ -20,0 +21,1 @@\n+import org.eclipse.jetty.server.handler.AbstractHandler;\n@@ -30,0 +31,1 @@\n+        HttpConfiguration httpConfig = new HttpConfiguration();\n@@ -31,0 +32,1 @@\n+        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n@@ -32,0 +33,1 @@\n+        httpConnector.setPort(port);\n@@ -33,0 +34,1 @@\n+        server.addConnector(httpConnector);\n@@ -34,0 +35,1 @@\n+        server.setHandler(new JadlerHandler());\n@@ -35,0 +36,1 @@\n+        server.start();\n@@ -36,0 +37,1 @@\n+        server.join();\n@@ -79,0 +80,1 @@\n+        return httpConnector.getLocalPort();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: class, interface, or enum expected\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.KeyValues;\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.StubResponse;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Request;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\n\n/**\n * Jetty Handler which handles all http communication by returning an http response according to a stub response\n * obtained from a {@link RequestManager} instance.\n */\nclass JadlerHandler extends AbstractHandler {\n\n    private final RequestManager requestManager;\n\n\n    /**\n     * @param requestManager request manager instance to retrieve stub responses\n     */\n    JadlerHandler(final RequestManager requestManager) {\n        Validate.notNull(requestManager, \"requestManager cannot be null\");\n        this.requestManager = requestManager;\n    }\n\n\n    @Override\n    public void handle(final String target, final Request baseRequest, final HttpServletRequest request,\n                       final HttpServletResponse response) throws IOException, ServletException {\n\n        final net.jadler.Request req = RequestUtils.convert(request);\n        final StubResponse stubResponse = this.requestManager.provideStubResponseFor(req);\n\n        response.setStatus(stubResponse.getStatus());\n        this.insertResponseHeaders(stubResponse.getHeaders(), response);\n\n        baseRequest.setHandled(true);\n\n        this.processDelay(stubResponse.getDelay());\n        this.insertResponseBody(stubResponse.getBody(), response);\n    }\n\n\n    private void insertResponseBody(final byte[] body, final HttpServletResponse response) throws IOException {\n        if (body.length > 0) {\n            final OutputStream os = response.getOutputStream();\n            os.write(body);\n        }\n    }\n\n\n    private void insertResponseHeaders(final KeyValues headers, final HttpServletResponse response) {\n        for (final String key : headers.getKeys()) {\n\n            for (final String value : headers.getValues(key)) {\n                response.addHeader(key, value);\n            }\n        }\n    }\n\n\n    private void processDelay(final long delay) {\n        if (delay > 0) {\n            try {\n                Thread.sleep(delay);\n            } catch (final InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n        }\n    }\n}import org.eclipse.jetty.server.Request;\n",
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\n        this.httpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n    }\n}import org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.HttpConnectionFactory;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n        httpConnector.setPort(port);\n        server.addConnector(httpConnector);\n        server.setHandler(new JadlerHandler());\n        server.start();\n        server.join();\n        return httpConnector.getLocalPort();\n"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": {
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 83,
                                    "content": "}import org.eclipse.jetty.server.Request;"
                                },
                                {
                                    "line_no": 84,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[83,1] error: class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                }
                            ],
                            "error_texts": [
                                "[82,1] error: class, interface, or enum expected\n"
                            ]
                        },
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                }
                            ],
                            "error_texts": [
                                "[83,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "84": {
                            "lines": [
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                }
                            ],
                            "error_texts": [
                                "[84,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "85": {
                            "lines": [
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                }
                            ],
                            "error_texts": [
                                "[85,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "86": {
                            "lines": [
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                }
                            ],
                            "error_texts": [
                                "[86,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "87": {
                            "lines": [
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                }
                            ],
                            "error_texts": [
                                "[87,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "88": {
                            "lines": [
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                }
                            ],
                            "error_texts": [
                                "[88,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "89": {
                            "lines": [
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                }
                            ],
                            "error_texts": [
                                "[89,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "90": {
                            "lines": [
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                }
                            ],
                            "error_texts": [
                                "[90,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "91": {
                            "lines": [
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                }
                            ],
                            "error_texts": [
                                "[91,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "92": {
                            "lines": [
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                }
                            ],
                            "error_texts": [
                                "[92,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "93": {
                            "lines": [
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                }
                            ],
                            "error_texts": [
                                "[93,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "94": {
                            "lines": [
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                },
                                {
                                    "line_no": 95,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[94,8] error: class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: class, interface, or enum expected\n",
            "span_id": 10244671125644422376
        },
        {
            "input": "```diff\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n@@ -22,0 +23,1 @@\n+import org.eclipse.jetty.server.Request;\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -10,0 +11,1 @@\n+import org.eclipse.jetty.server.Server;\n@@ -12,0 +13,1 @@\n+import org.eclipse.jetty.server.HttpConfiguration;\n@@ -14,0 +15,1 @@\n+import org.eclipse.jetty.server.HttpConnectionFactory;\n@@ -15,0 +16,1 @@\n+import org.eclipse.jetty.server.ServerConnector;\n@@ -20,0 +21,1 @@\n+import org.eclipse.jetty.server.handler.AbstractHandler;\n@@ -30,0 +31,1 @@\n+        HttpConfiguration httpConfig = new HttpConfiguration();\n@@ -31,0 +32,1 @@\n+        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n@@ -32,0 +33,1 @@\n+        httpConnector.setPort(port);\n@@ -33,0 +34,1 @@\n+        server.addConnector(httpConnector);\n@@ -34,0 +35,1 @@\n+        server.setHandler(new JadlerHandler());\n@@ -35,0 +36,1 @@\n+        server.start();\n@@ -36,0 +37,1 @@\n+        server.join();\n@@ -79,0 +80,1 @@\n+        return httpConnector.getLocalPort();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: class, interface, or enum expected\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.KeyValues;\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.StubResponse;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Request;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\n\n/**\n * Jetty Handler which handles all http communication by returning an http response according to a stub response\n * obtained from a {@link RequestManager} instance.\n */\nclass JadlerHandler extends AbstractHandler {\n\n    private final RequestManager requestManager;\n\n\n    /**\n     * @param requestManager request manager instance to retrieve stub responses\n     */\n    JadlerHandler(final RequestManager requestManager) {\n        Validate.notNull(requestManager, \"requestManager cannot be null\");\n        this.requestManager = requestManager;\n    }\n\n\n    @Override\n    public void handle(final String target, final Request baseRequest, final HttpServletRequest request,\n                       final HttpServletResponse response) throws IOException, ServletException {\n\n        final net.jadler.Request req = RequestUtils.convert(request);\n        final StubResponse stubResponse = this.requestManager.provideStubResponseFor(req);\n\n        response.setStatus(stubResponse.getStatus());\n        this.insertResponseHeaders(stubResponse.getHeaders(), response);\n\n        baseRequest.setHandled(true);\n\n        this.processDelay(stubResponse.getDelay());\n        this.insertResponseBody(stubResponse.getBody(), response);\n    }\n\n\n    private void insertResponseBody(final byte[] body, final HttpServletResponse response) throws IOException {\n        if (body.length > 0) {\n            final OutputStream os = response.getOutputStream();\n            os.write(body);\n        }\n    }\n\n\n    private void insertResponseHeaders(final KeyValues headers, final HttpServletResponse response) {\n        for (final String key : headers.getKeys()) {\n\n            for (final String value : headers.getValues(key)) {\n                response.addHeader(key, value);\n            }\n        }\n    }\n\n\n    private void processDelay(final long delay) {\n        if (delay > 0) {\n            try {\n                Thread.sleep(delay);\n            } catch (final InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n        }\n    }\n}import org.eclipse.jetty.server.Request;\n",
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\n        this.httpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n    }\n}import org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.HttpConnectionFactory;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n        httpConnector.setPort(port);\n        server.addConnector(httpConnector);\n        server.setHandler(new JadlerHandler());\n        server.start();\n        server.join();\n        return httpConnector.getLocalPort();\n"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": {
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 83,
                                    "content": "}import org.eclipse.jetty.server.Request;"
                                },
                                {
                                    "line_no": 84,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[83,1] error: class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                }
                            ],
                            "error_texts": [
                                "[82,1] error: class, interface, or enum expected\n"
                            ]
                        },
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                }
                            ],
                            "error_texts": [
                                "[83,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "84": {
                            "lines": [
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                }
                            ],
                            "error_texts": [
                                "[84,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "85": {
                            "lines": [
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                }
                            ],
                            "error_texts": [
                                "[85,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "86": {
                            "lines": [
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                }
                            ],
                            "error_texts": [
                                "[86,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "87": {
                            "lines": [
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                }
                            ],
                            "error_texts": [
                                "[87,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "88": {
                            "lines": [
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                }
                            ],
                            "error_texts": [
                                "[88,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "89": {
                            "lines": [
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                }
                            ],
                            "error_texts": [
                                "[89,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "90": {
                            "lines": [
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                }
                            ],
                            "error_texts": [
                                "[90,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "91": {
                            "lines": [
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                }
                            ],
                            "error_texts": [
                                "[91,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "92": {
                            "lines": [
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                }
                            ],
                            "error_texts": [
                                "[92,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "93": {
                            "lines": [
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                }
                            ],
                            "error_texts": [
                                "[93,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "94": {
                            "lines": [
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                },
                                {
                                    "line_no": 95,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[94,8] error: class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: class, interface, or enum expected\n",
            "span_id": 2772875818837308860
        },
        {
            "input": "```diff\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n@@ -22,0 +23,1 @@\n+import org.eclipse.jetty.server.Request;\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -10,0 +11,1 @@\n+import org.eclipse.jetty.server.Server;\n@@ -12,0 +13,1 @@\n+import org.eclipse.jetty.server.HttpConfiguration;\n@@ -14,0 +15,1 @@\n+import org.eclipse.jetty.server.HttpConnectionFactory;\n@@ -15,0 +16,1 @@\n+import org.eclipse.jetty.server.ServerConnector;\n@@ -20,0 +21,1 @@\n+import org.eclipse.jetty.server.handler.AbstractHandler;\n@@ -30,0 +31,1 @@\n+        HttpConfiguration httpConfig = new HttpConfiguration();\n@@ -31,0 +32,1 @@\n+        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n@@ -32,0 +33,1 @@\n+        httpConnector.setPort(port);\n@@ -33,0 +34,1 @@\n+        server.addConnector(httpConnector);\n@@ -34,0 +35,1 @@\n+        server.setHandler(new JadlerHandler());\n@@ -35,0 +36,1 @@\n+        server.start();\n@@ -36,0 +37,1 @@\n+        server.join();\n@@ -79,0 +80,1 @@\n+        return httpConnector.getLocalPort();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: class, interface, or enum expected\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.KeyValues;\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.StubResponse;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Request;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\n\n/**\n * Jetty Handler which handles all http communication by returning an http response according to a stub response\n * obtained from a {@link RequestManager} instance.\n */\nclass JadlerHandler extends AbstractHandler {\n\n    private final RequestManager requestManager;\n\n\n    /**\n     * @param requestManager request manager instance to retrieve stub responses\n     */\n    JadlerHandler(final RequestManager requestManager) {\n        Validate.notNull(requestManager, \"requestManager cannot be null\");\n        this.requestManager = requestManager;\n    }\n\n\n    @Override\n    public void handle(final String target, final Request baseRequest, final HttpServletRequest request,\n                       final HttpServletResponse response) throws IOException, ServletException {\n\n        final net.jadler.Request req = RequestUtils.convert(request);\n        final StubResponse stubResponse = this.requestManager.provideStubResponseFor(req);\n\n        response.setStatus(stubResponse.getStatus());\n        this.insertResponseHeaders(stubResponse.getHeaders(), response);\n\n        baseRequest.setHandled(true);\n\n        this.processDelay(stubResponse.getDelay());\n        this.insertResponseBody(stubResponse.getBody(), response);\n    }\n\n\n    private void insertResponseBody(final byte[] body, final HttpServletResponse response) throws IOException {\n        if (body.length > 0) {\n            final OutputStream os = response.getOutputStream();\n            os.write(body);\n        }\n    }\n\n\n    private void insertResponseHeaders(final KeyValues headers, final HttpServletResponse response) {\n        for (final String key : headers.getKeys()) {\n\n            for (final String value : headers.getValues(key)) {\n                response.addHeader(key, value);\n            }\n        }\n    }\n\n\n    private void processDelay(final long delay) {\n        if (delay > 0) {\n            try {\n                Thread.sleep(delay);\n            } catch (final InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n        }\n    }\n}import org.eclipse.jetty.server.Request;\n",
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\n        this.httpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n    }\n}import org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.HttpConnectionFactory;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n        httpConnector.setPort(port);\n        server.addConnector(httpConnector);\n        server.setHandler(new JadlerHandler());\n        server.start();\n        server.join();\n        return httpConnector.getLocalPort();\n"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": {
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 83,
                                    "content": "}import org.eclipse.jetty.server.Request;"
                                },
                                {
                                    "line_no": 84,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[83,1] error: class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                }
                            ],
                            "error_texts": [
                                "[82,1] error: class, interface, or enum expected\n"
                            ]
                        },
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                }
                            ],
                            "error_texts": [
                                "[83,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "84": {
                            "lines": [
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                }
                            ],
                            "error_texts": [
                                "[84,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "85": {
                            "lines": [
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                }
                            ],
                            "error_texts": [
                                "[85,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "86": {
                            "lines": [
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                }
                            ],
                            "error_texts": [
                                "[86,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "87": {
                            "lines": [
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                }
                            ],
                            "error_texts": [
                                "[87,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "88": {
                            "lines": [
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                }
                            ],
                            "error_texts": [
                                "[88,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "89": {
                            "lines": [
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                }
                            ],
                            "error_texts": [
                                "[89,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "90": {
                            "lines": [
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                }
                            ],
                            "error_texts": [
                                "[90,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "91": {
                            "lines": [
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                }
                            ],
                            "error_texts": [
                                "[91,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "92": {
                            "lines": [
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                }
                            ],
                            "error_texts": [
                                "[92,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "93": {
                            "lines": [
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                }
                            ],
                            "error_texts": [
                                "[93,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "94": {
                            "lines": [
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                },
                                {
                                    "line_no": 95,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[94,8] error: class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: class, interface, or enum expected\n",
            "span_id": 894482583833512275
        },
        {
            "input": "```diff\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n@@ -22,0 +23,1 @@\n+import org.eclipse.jetty.server.Request;\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -10,0 +11,1 @@\n+import org.eclipse.jetty.server.Server;\n@@ -12,0 +13,1 @@\n+import org.eclipse.jetty.server.HttpConfiguration;\n@@ -14,0 +15,1 @@\n+import org.eclipse.jetty.server.HttpConnectionFactory;\n@@ -15,0 +16,1 @@\n+import org.eclipse.jetty.server.ServerConnector;\n@@ -20,0 +21,1 @@\n+import org.eclipse.jetty.server.handler.AbstractHandler;\n@@ -30,0 +31,1 @@\n+        HttpConfiguration httpConfig = new HttpConfiguration();\n@@ -31,0 +32,1 @@\n+        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n@@ -32,0 +33,1 @@\n+        httpConnector.setPort(port);\n@@ -33,0 +34,1 @@\n+        server.addConnector(httpConnector);\n@@ -34,0 +35,1 @@\n+        server.setHandler(new JadlerHandler());\n@@ -35,0 +36,1 @@\n+        server.start();\n@@ -36,0 +37,1 @@\n+        server.join();\n@@ -79,0 +80,1 @@\n+        return httpConnector.getLocalPort();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: class, interface, or enum expected\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.KeyValues;\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.StubResponse;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Request;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\n\n/**\n * Jetty Handler which handles all http communication by returning an http response according to a stub response\n * obtained from a {@link RequestManager} instance.\n */\nclass JadlerHandler extends AbstractHandler {\n\n    private final RequestManager requestManager;\n\n\n    /**\n     * @param requestManager request manager instance to retrieve stub responses\n     */\n    JadlerHandler(final RequestManager requestManager) {\n        Validate.notNull(requestManager, \"requestManager cannot be null\");\n        this.requestManager = requestManager;\n    }\n\n\n    @Override\n    public void handle(final String target, final Request baseRequest, final HttpServletRequest request,\n                       final HttpServletResponse response) throws IOException, ServletException {\n\n        final net.jadler.Request req = RequestUtils.convert(request);\n        final StubResponse stubResponse = this.requestManager.provideStubResponseFor(req);\n\n        response.setStatus(stubResponse.getStatus());\n        this.insertResponseHeaders(stubResponse.getHeaders(), response);\n\n        baseRequest.setHandled(true);\n\n        this.processDelay(stubResponse.getDelay());\n        this.insertResponseBody(stubResponse.getBody(), response);\n    }\n\n\n    private void insertResponseBody(final byte[] body, final HttpServletResponse response) throws IOException {\n        if (body.length > 0) {\n            final OutputStream os = response.getOutputStream();\n            os.write(body);\n        }\n    }\n\n\n    private void insertResponseHeaders(final KeyValues headers, final HttpServletResponse response) {\n        for (final String key : headers.getKeys()) {\n\n            for (final String value : headers.getValues(key)) {\n                response.addHeader(key, value);\n            }\n        }\n    }\n\n\n    private void processDelay(final long delay) {\n        if (delay > 0) {\n            try {\n                Thread.sleep(delay);\n            } catch (final InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n        }\n    }\n}import org.eclipse.jetty.server.Request;\n",
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\n        this.httpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n    }\n}import org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.HttpConnectionFactory;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n        httpConnector.setPort(port);\n        server.addConnector(httpConnector);\n        server.setHandler(new JadlerHandler());\n        server.start();\n        server.join();\n        return httpConnector.getLocalPort();\n"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": {
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 83,
                                    "content": "}import org.eclipse.jetty.server.Request;"
                                },
                                {
                                    "line_no": 84,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[83,1] error: class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                }
                            ],
                            "error_texts": [
                                "[82,1] error: class, interface, or enum expected\n"
                            ]
                        },
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                }
                            ],
                            "error_texts": [
                                "[83,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "84": {
                            "lines": [
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                }
                            ],
                            "error_texts": [
                                "[84,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "85": {
                            "lines": [
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                }
                            ],
                            "error_texts": [
                                "[85,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "86": {
                            "lines": [
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                }
                            ],
                            "error_texts": [
                                "[86,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "87": {
                            "lines": [
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                }
                            ],
                            "error_texts": [
                                "[87,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "88": {
                            "lines": [
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                }
                            ],
                            "error_texts": [
                                "[88,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "89": {
                            "lines": [
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                }
                            ],
                            "error_texts": [
                                "[89,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "90": {
                            "lines": [
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                }
                            ],
                            "error_texts": [
                                "[90,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "91": {
                            "lines": [
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                }
                            ],
                            "error_texts": [
                                "[91,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "92": {
                            "lines": [
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                }
                            ],
                            "error_texts": [
                                "[92,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "93": {
                            "lines": [
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                }
                            ],
                            "error_texts": [
                                "[93,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "94": {
                            "lines": [
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                },
                                {
                                    "line_no": 95,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[94,8] error: class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: class, interface, or enum expected\n",
            "span_id": 13384116044518015350
        },
        {
            "input": "```diff\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java\n@@ -22,0 +23,1 @@\n+import org.eclipse.jetty.server.Request;\n--- jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -10,0 +11,1 @@\n+import org.eclipse.jetty.server.Server;\n@@ -12,0 +13,1 @@\n+import org.eclipse.jetty.server.HttpConfiguration;\n@@ -14,0 +15,1 @@\n+import org.eclipse.jetty.server.HttpConnectionFactory;\n@@ -15,0 +16,1 @@\n+import org.eclipse.jetty.server.ServerConnector;\n@@ -20,0 +21,1 @@\n+import org.eclipse.jetty.server.handler.AbstractHandler;\n@@ -30,0 +31,1 @@\n+        HttpConfiguration httpConfig = new HttpConfiguration();\n@@ -31,0 +32,1 @@\n+        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n@@ -32,0 +33,1 @@\n+        httpConnector.setPort(port);\n@@ -33,0 +34,1 @@\n+        server.addConnector(httpConnector);\n@@ -34,0 +35,1 @@\n+        server.setHandler(new JadlerHandler());\n@@ -35,0 +36,1 @@\n+        server.start();\n@@ -36,0 +37,1 @@\n+        server.join();\n@@ -79,0 +80,1 @@\n+        return httpConnector.getLocalPort();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: class, interface, or enum expected\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.KeyValues;\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.StubResponse;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Request;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\n\n/**\n * Jetty Handler which handles all http communication by returning an http response according to a stub response\n * obtained from a {@link RequestManager} instance.\n */\nclass JadlerHandler extends AbstractHandler {\n\n    private final RequestManager requestManager;\n\n\n    /**\n     * @param requestManager request manager instance to retrieve stub responses\n     */\n    JadlerHandler(final RequestManager requestManager) {\n        Validate.notNull(requestManager, \"requestManager cannot be null\");\n        this.requestManager = requestManager;\n    }\n\n\n    @Override\n    public void handle(final String target, final Request baseRequest, final HttpServletRequest request,\n                       final HttpServletResponse response) throws IOException, ServletException {\n\n        final net.jadler.Request req = RequestUtils.convert(request);\n        final StubResponse stubResponse = this.requestManager.provideStubResponseFor(req);\n\n        response.setStatus(stubResponse.getStatus());\n        this.insertResponseHeaders(stubResponse.getHeaders(), response);\n\n        baseRequest.setHandled(true);\n\n        this.processDelay(stubResponse.getDelay());\n        this.insertResponseBody(stubResponse.getBody(), response);\n    }\n\n\n    private void insertResponseBody(final byte[] body, final HttpServletResponse response) throws IOException {\n        if (body.length > 0) {\n            final OutputStream os = response.getOutputStream();\n            os.write(body);\n        }\n    }\n\n\n    private void insertResponseHeaders(final KeyValues headers, final HttpServletResponse response) {\n        for (final String key : headers.getKeys()) {\n\n            for (final String value : headers.getValues(key)) {\n                response.addHeader(key, value);\n            }\n        }\n    }\n\n\n    private void processDelay(final long delay) {\n        if (delay > 0) {\n            try {\n                Thread.sleep(delay);\n            } catch (final InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n        }\n    }\n}import org.eclipse.jetty.server.Request;\n",
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\n        this.httpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n    }\n\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n    }\n}import org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.HttpConnectionFactory;\nimport org.eclipse.jetty.server.ServerConnector;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));\n        httpConnector.setPort(port);\n        server.addConnector(httpConnector);\n        server.setHandler(new JadlerHandler());\n        server.start();\n        server.join();\n        return httpConnector.getLocalPort();\n"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": {
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 83,
                                    "content": "}import org.eclipse.jetty.server.Request;"
                                },
                                {
                                    "line_no": 84,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[83,1] error: class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                }
                            ],
                            "error_texts": [
                                "[82,1] error: class, interface, or enum expected\n"
                            ]
                        },
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "}import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                }
                            ],
                            "error_texts": [
                                "[83,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "84": {
                            "lines": [
                                {
                                    "line_no": 83,
                                    "content": "import org.eclipse.jetty.server.HttpConfiguration;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                }
                            ],
                            "error_texts": [
                                "[84,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "85": {
                            "lines": [
                                {
                                    "line_no": 84,
                                    "content": "import org.eclipse.jetty.server.HttpConnectionFactory;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                }
                            ],
                            "error_texts": [
                                "[85,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "86": {
                            "lines": [
                                {
                                    "line_no": 85,
                                    "content": "import org.eclipse.jetty.server.ServerConnector;"
                                },
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                }
                            ],
                            "error_texts": [
                                "[86,] error: class, interface, or enum expected\n"
                            ]
                        },
                        "87": {
                            "lines": [
                                {
                                    "line_no": 86,
                                    "content": "import org.eclipse.jetty.server.handler.AbstractHandler;"
                                },
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                }
                            ],
                            "error_texts": [
                                "[87,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "88": {
                            "lines": [
                                {
                                    "line_no": 87,
                                    "content": "        HttpConfiguration httpConfig = new HttpConfiguration();"
                                },
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                }
                            ],
                            "error_texts": [
                                "[88,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "89": {
                            "lines": [
                                {
                                    "line_no": 88,
                                    "content": "        ServerConnector httpConnector = new ServerConnector(server, new HttpConnectionFactory(httpConfig));"
                                },
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                }
                            ],
                            "error_texts": [
                                "[89,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "90": {
                            "lines": [
                                {
                                    "line_no": 89,
                                    "content": "        httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                }
                            ],
                            "error_texts": [
                                "[90,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "91": {
                            "lines": [
                                {
                                    "line_no": 90,
                                    "content": "        server.addConnector(httpConnector);"
                                },
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                }
                            ],
                            "error_texts": [
                                "[91,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "92": {
                            "lines": [
                                {
                                    "line_no": 91,
                                    "content": "        server.setHandler(new JadlerHandler());"
                                },
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                }
                            ],
                            "error_texts": [
                                "[92,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "93": {
                            "lines": [
                                {
                                    "line_no": 92,
                                    "content": "        server.start();"
                                },
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                }
                            ],
                            "error_texts": [
                                "[93,8] error: class, interface, or enum expected\n"
                            ]
                        },
                        "94": {
                            "lines": [
                                {
                                    "line_no": 93,
                                    "content": "        server.join();"
                                },
                                {
                                    "line_no": 94,
                                    "content": "        return httpConnector.getLocalPort();"
                                },
                                {
                                    "line_no": 95,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[94,8] error: class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: class, interface, or enum expected\n",
            "span_id": 14823405266676798796
        }
    ],
    "read_file": [],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": [
        {
            "input": "",
            "output": "Successful reset of repository",
            "error": "",
            "span_id": 10454933676694801441
        },
        {
            "input": "",
            "output": "Successful reset of repository",
            "error": "",
            "span_id": 1026365572249719185
        },
        {
            "input": "",
            "output": "Successful reset of repository",
            "error": "",
            "span_id": 15566069047838722625
        },
        {
            "input": "",
            "output": "Successful reset of repository",
            "error": "",
            "span_id": 15975680848730643602
        },
        {
            "input": "",
            "output": "Successful reset of repository",
            "error": "",
            "span_id": 17434963389428200752
        },
        {
            "input": "",
            "output": "Successful reset of repository",
            "error": "",
            "span_id": 17251389729615910790
        },
        {
            "input": "",
            "output": "Successful reset of repository",
            "error": "",
            "span_id": 17789110544693755087
        }
    ]
}