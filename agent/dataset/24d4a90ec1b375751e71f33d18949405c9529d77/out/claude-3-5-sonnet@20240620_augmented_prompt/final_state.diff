diff --git a/pom.xml b/pom.xml
index d941d9f..8b511ee 100644
--- a/pom.xml
+++ b/pom.xml
@@ -156,6 +156,20 @@ OF THE POSSIBILITY OF SUCH DAMAGE.
   </dependencies>
   <build>
     <plugins>
+      <plugin>
+        <groupId>org.codehaus.mojo</groupId>
+        <artifactId>buildnumber-maven-plugin</artifactId>
+        <version>3.0.0</version>
+        <executions>
+          <execution>
+            <id>jcabi-build-number</id>
+            <goals>
+              <goal>create</goal>
+            </goals>
+            <phase>none</phase>
+          </execution>
+        </executions>
+      </plugin>
       <plugin>
         <artifactId>maven-failsafe-plugin</artifactId>
         <configuration>
diff --git a/src/test/java/com/jcabi/s3/AwsOcketITCase.java b/src/test/java/com/jcabi/s3/AwsOcketITCase.java
index d67286e..44bc2d9 100644
--- a/src/test/java/com/jcabi/s3/AwsOcketITCase.java
+++ b/src/test/java/com/jcabi/s3/AwsOcketITCase.java
@@ -29,7 +29,6 @@
  */
 package com.jcabi.s3;
 
-import com.jcabi.aspects.Tv;
 import org.apache.commons.lang3.RandomStringUtils;
 import org.hamcrest.MatcherAssert;
 import org.hamcrest.Matchers;
@@ -80,7 +79,7 @@ public final class AwsOcketITCase {
         final Bucket bucket = this.rule.bucket();
         final String name = "test-44.txt";
         final Ocket.Text ocket = new Ocket.Text(bucket.ocket(name));
-        final String data = RandomStringUtils.random(Tv.HUNDRED * Tv.THOUSAND);
+        final String data = RandomStringUtils.random(100 * 1000);
         ocket.write(data);
         try {
             MatcherAssert.assertThat(ocket.read(), Matchers.equalTo(data));
diff --git a/src/test/java/com/jcabi/s3/BucketRule.java b/src/test/java/com/jcabi/s3/BucketRule.java
index 49d563c..dd7f67c 100644
--- a/src/test/java/com/jcabi/s3/BucketRule.java
+++ b/src/test/java/com/jcabi/s3/BucketRule.java
@@ -30,7 +30,6 @@
 package com.jcabi.s3;
 
 import com.amazonaws.services.s3.AmazonS3;
-import com.jcabi.aspects.Tv;
 import com.jcabi.log.Logger;
 import com.jcabi.s3.cached.CdRegion;
 import com.jcabi.s3.retry.ReRegion;
@@ -109,7 +108,7 @@ final class BucketRule implements TestRule {
         );
         final String name = String.format(
             "%s.s3.jcabi.com",
-            RandomStringUtils.randomAlphabetic(Tv.FIVE)
+            RandomStringUtils.randomAlphabetic(5)
                 .toLowerCase(Locale.ENGLISH)
         );
         this.subj = region.bucket(name);