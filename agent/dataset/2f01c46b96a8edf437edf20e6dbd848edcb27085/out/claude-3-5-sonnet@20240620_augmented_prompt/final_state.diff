diff --git a/depclean-maven-plugin/src/main/java/se/kth/depclean/wrapper/MavenDependencyManager.java b/depclean-maven-plugin/src/main/java/se/kth/depclean/wrapper/MavenDependencyManager.java
index 162333c..fdc6817 100644
--- a/depclean-maven-plugin/src/main/java/se/kth/depclean/wrapper/MavenDependencyManager.java
+++ b/depclean-maven-plugin/src/main/java/se/kth/depclean/wrapper/MavenDependencyManager.java
@@ -24,7 +24,7 @@
 import org.apache.maven.project.ProjectBuildingRequest;
 import org.apache.maven.shared.dependency.graph.DependencyGraphBuilder;
 import org.apache.maven.shared.dependency.graph.DependencyNode;
-import org.codehaus.plexus.util.xml.Xpp3Dom;
+import org.apache.maven.model.Plugin;
 import se.kth.depclean.core.AbstractDebloater;
 import se.kth.depclean.core.analysis.graph.DependencyGraph;
 import se.kth.depclean.core.analysis.model.ProjectDependencyAnalysis;
@@ -158,11 +158,15 @@ private Model buildModel(MavenProject project) {
   public Set<String> collectUsedClassesFromProcessors() {
     getLog().debug("# collectUsedClassesFromProcessors()");
     return Optional.ofNullable(project.getPlugin("org.bsc.maven:maven-processor-plugin"))
-        .map(plugin -> plugin.getExecutionsAsMap().get("process"))
-        .map(exec -> (Xpp3Dom) exec.getConfiguration())
-        .map(config -> config.getChild("processors"))
-        .map(Xpp3Dom::getChildren)
-        .map(arr -> Arrays.stream(arr).map(Xpp3Dom::getValue).collect(Collectors.toSet()))
+        .map(Plugin::getExecutions)
+        .map(executions -> executions.stream()
+            .filter(execution -> "process".equals(execution.getId()))
+            .findFirst()
+            .map(execution -> execution.getConfiguration())
+            .orElse(null))
+        .map(config -> config.getList("processors"))
+        .map(processors -> processors.stream()
+            .collect(Collectors.toSet()))
         .orElse(of());
   }
 