{
    "validate_diffs": [],
    "compile_maven": [
        {
            "input": "```diff\n--- a/java-api/src/main/java/io/zold/api/Copies.java\n+++ b/java-api/src/main/java/io/zold/api/Copies.java\n@@ -28,7 +28,7 @@\n import java.util.List;\n \n /**\n- * {@link CollectionOf} of {@link Remote}s.\n+ * {@link org.cactoos.list.ListOf} of {@link Remote}s.\n  *\n  * @since 0.1\n  */\n@@ -36,7 +36,7 @@\n  * @param remotes An array of remotes\n  */\n public final class Copies extends\n-    CollectionEnvelope<Remote> {\n+    org.cactoos.list.ListOfEnvelope<Remote> {\n \n     /**\n      * Ctor.\n\n```\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtScore.java\n+++ b/java-api/src/main/java/io/zold/api/RtScore.java\n@@ -26,7 +26,7 @@\n import org.cactoos.scalar.IoCheckedScalar;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.SplitText;\n-import org.cactoos.iterable.LengthOf;\n+import org.cactoos.list.ListOf;\n \n /**\n  * Score of remote transaction.\n@@ -65,7 +65,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long parseScore() throws IOException {\n-        return new LengthOf(\n+        return new ListOf<>(\n             new SplitText(\n                 new UncheckedScalar<>(this.score).value(),\n                 \" \"\n\n```\n```diff\n--- a/java-api/src/main/java/io/zold/api/TaxBeneficiaries.java\n+++ b/java-api/src/main/java/io/zold/api/TaxBeneficiaries.java\n@@ -27,7 +27,7 @@\n import org.cactoos.scalar.IoCheckedScalar;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.SplitText;\n-import org.cactoos.iterable.LengthOf;\n+import org.cactoos.list.ListOf;\n \n /**\n  * Find tax beneficiaries.\n@@ -71,7 +71,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long parseCount() throws IOException {\n-        return new LengthOf(\n+        return new ListOf<>(\n             new SplitText(\n                 new UncheckedScalar<>(this.count).value(),\n                 \" \"\n\n```\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtTransaction.java\n+++ b/java-api/src/main/java/io/zold/api/RtTransaction.java\n@@ -31,7 +31,7 @@\n import org.cactoos.scalar.StickyScalar;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.SplitText;\n-import org.cactoos.iterable.LengthOf;\n+import org.cactoos.list.ListOf;\n import org.cactoos.text.TrimmedText;\n \n /**\n@@ -83,7 +83,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long parseDetailsCount() throws IOException {\n-        return new LengthOf(\n+        return new ListOf<>(\n             new SplitText(\n                 new UncheckedScalar<>(this.details).value(),\n                 \";\"\n\n```\n```diff\n--- a/java-api/src/main/java/io/zold/api/Wallet.java\n+++ b/java-api/src/main/java/io/zold/api/Wallet.java\n@@ -28,10 +28,10 @@\n import org.cactoos.scalar.IoCheckedScalar;\n import org.cactoos.scalar.Scalar;\n import org.cactoos.text.SplitText;\n-import org.cactoos.collection.Filtered;\n import org.cactoos.text.TextOf;\n import org.cactoos.text.JoinedText;\n import java.math.BigInteger;\n+import org.cactoos.list.Filtered;\n \n /**\n  * Zold Wallet.\n\n```\n```diff\n--- a/java-api/src/main/java/io/zold/api/WalletsIn.java\n+++ b/java-api/src/main/java/io/zold/api/WalletsIn.java\n@@ -30,7 +30,7 @@\n import org.cactoos.scalar.IoCheckedScalar;\n import org.cactoos.scalar.SolidScalar;\n import org.cactoos.scalar.UncheckedScalar;\n-import org.cactoos.text.JoinedText;\n+import org.cactoos.text.TextOf;\n \n /**\n  * Wallets in directory.\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
            "span_id": 8449706054361810644
        },
        {
            "input": "```diff\n--- a/java-api/src/main/java/io/zold/api/Copies.java\n+++ b/java-api/src/main/java/io/zold/api/Copies.java\n@@ -28,7 +28,7 @@\n import java.util.List;\n \n /**\n- * {@link org.cactoos.list.ListOf} of {@link Remote}s.\n+ * {@link org.cactoos.collection.CollectionOf} of {@link Remote}s.\n  *\n  * @since 0.1\n  */\n@@ -36,7 +36,7 @@\n  * @param remotes An array of remotes\n  */\n public final class Copies extends\n-    org.cactoos.list.ListOfEnvelope<Remote> {\n+    org.cactoos.collection.CollectionEnvelope<Remote> {\n \n     /**\n      * Ctor.\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
            "span_id": 13417869852649729197
        },
        {
            "input": "```diff\n--- a/java-api/src/main/java/io/zold/api/Copies.java\n+++ b/java-api/src/main/java/io/zold/api/Copies.java\n@@ -28,7 +28,7 @@\n import java.util.List;\n \n /**\n- * {@link org.cactoos.collection.CollectionOf} of {@link Remote}s.\n+ * {@link org.cactoos.list.ListOf} of {@link Remote}s.\n  *\n  * @since 0.1\n  */\n@@ -36,7 +36,7 @@\n  * @param remotes An array of remotes\n  */\n public final class Copies extends\n-    org.cactoos.collection.CollectionEnvelope<Remote> {\n+    org.cactoos.list.ListOfEnvelope<Remote> {\n \n     /**\n      * Ctor.\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
            "span_id": 181881175571875191
        },
        {
            "input": "```diff\n--- a/java-api/src/main/java/io/zold/api/Copies.java\n+++ b/java-api/src/main/java/io/zold/api/Copies.java\n@@ -28,7 +28,7 @@\n import java.util.List;\n \n /**\n- * {@link org.cactoos.list.ListOf} of {@link Remote}s.\n+ * {@link org.cactoos.collection.CollectionOf} of {@link Remote}s.\n  *\n  * @since 0.1\n  */\n@@ -36,7 +36,7 @@\n  * @param remotes An array of remotes\n  */\n public final class Copies extends\n-    org.cactoos.list.ListOfEnvelope<Remote> {\n+    org.cactoos.collection.CollectionEnvelope<Remote> {\n \n     /**\n      * Ctor.\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/Remote.java\n+++ b/java-api/src/main/java/io/zold/api/Remote.java\n@@ -26,7 +26,7 @@\n import org.cactoos.text.FormattedText;\n import org.cactoos.text.TextOf;\n import org.cactoos.text.UncheckedText;\n-import org.cactoos.text.RandomText;\n+import org.cactoos.text.RandomString;\n \n /**\n  * One remote host and port.\n@@ -118,7 +118,7 @@\n      * @return New remote with random host\n      */\n     public Remote randomHost() {\n-        return new Remote(new RandomText(16, \"abcdef0123456789\"), this.port());\n+        return new Remote(new RandomString(16, \"abcdef0123456789\"), this.port());\n     }\n \n     @Override\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtNetwork.java\n+++ b/java-api/src/main/java/io/zold/api/RtNetwork.java\n@@ -25,7 +25,7 @@\n import java.net.URL;\n import org.cactoos.Input;\n import org.cactoos.io.InputOf;\n-import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.TextOf;\n \n@@ -55,7 +55,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public String load() throws IOException {\n-        return new IoCheckedScalar<>(\n+        return new CheckedFunction<>(\n             (URL url) -> new TextOf(\n                 new InputOf(url)\n             ).asString(),\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtScore.java\n+++ b/java-api/src/main/java/io/zold/api/RtScore.java\n@@ -24,7 +24,7 @@\n import java.io.IOException;\n import org.cactoos.scalar.Scalar;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n@@ -48,7 +48,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public RtScore(final Input input) throws IOException {\n-        this(new IoCheckedScalar<>(\n+        this(new CheckedFunction<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n@@ -100,7 +100,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadValue(final String param) throws IOException {\n-        return new IoCheckedScalar<>(\n+        return new CheckedFunction<>(\n             (String prm) -> Long.parseLong(\n                 new SplitText(\n                     new UncheckedScalar<>(this.score).value(),\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtTransaction.java\n+++ b/java-api/src/main/java/io/zold/api/RtTransaction.java\n@@ -28,7 +28,7 @@\n import org.cactoos.scalar.Scalar;\n import org.cactoos.scalar.StickyScalar;\n import org.cactoos.scalar.UncheckedScalar;\n-import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n import org.cactoos.text.TrimmedText;\n@@ -53,7 +53,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public RtTransaction(final Input input) throws IOException {\n-        this(new IoCheckedScalar<>(\n+        this(new CheckedFunction<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n@@ -155,7 +155,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadValue(final String param) throws IOException {\n-        return new IoCheckedScalar<>(\n+        return new CheckedFunction<>(\n             (String prm) -> Long.parseLong(\n                 new TrimmedText(\n                     new SplitText(\n@@ -189,7 +189,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private String loadString(final String param) throws IOException {\n-        return new IoCheckedScalar<>(\n+        return new CheckedFunction<>(\n             (String prm) -> new TrimmedText(\n                 new SplitText(\n                     new UncheckedScalar<>(this.transaction).value(),\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/TaxBeneficiaries.java\n+++ b/java-api/src/main/java/io/zold/api/TaxBeneficiaries.java\n@@ -25,7 +25,7 @@\n import java.io.IOException;\n import org.cactoos.Input;\n import org.cactoos.io.InputOf;\n-import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n@@ -49,7 +49,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public TaxBeneficiaries(final Input input) throws IOException {\n-        this(new IoCheckedScalar<>(\n+        this(new CheckedFunction<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/Wallet.java\n+++ b/java-api/src/main/java/io/zold/api/Wallet.java\n@@ -25,7 +25,7 @@\n import org.cactoos.iterable.Mapped;\n import org.cactoos.scalar.Constant;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.scalar.Scalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.text.TextOf;\n@@ -61,7 +61,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public Wallet(final File file) {\n-        this(new IoCheckedScalar<>(\n+        this(new CheckedFunction<>(\n             path -> new TextOf(path).asString(), file\n         ));\n     }\n@@ -74,7 +74,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public Wallet(final Path path) {\n-        this(new IoCheckedScalar<>(\n+        this(new CheckedFunction<>(\n             p -> new TextOf(p).asString(), path\n         ));\n     }\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/WalletsIn.java\n+++ b/java-api/src/main/java/io/zold/api/WalletsIn.java\n@@ -28,7 +28,7 @@\n import org.cactoos.list.Sorted;\n import org.cactoos.scalar.Constant;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.scalar.SolidScalar;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.TextOf;\n@@ -51,7 +51,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public WalletsIn(final File dir) throws IOException {\n-        this(new IoCheckedScalar<>(\n+        this(new CheckedFunction<>(\n             directory -> new TextOf(\n                 new JoinedText(\n                     \"\\n\",\n@@ -81,7 +81,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private static String wallet(final String line) throws IOException {\n-        return new IoCheckedScalar<>(\n+        return new CheckedFunction<>(\n             (String data) -> new SplitText(data, \" \").iterator().next(),\n             line\n         ).value();\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
            "span_id": 2196312900729968807
        },
        {
            "input": "```diff\n--- a/java-api/src/main/java/io/zold/api/Copies.java\n+++ b/java-api/src/main/java/io/zold/api/Copies.java\n@@ -28,7 +28,7 @@\n import java.util.List;\n \n /**\n- * {@link org.cactoos.collection.CollectionOf} of {@link Remote}s.\n+ * {@link org.cactoos.list.ListOf} of {@link Remote}s.\n  *\n  * @since 0.1\n  */\n@@ -36,7 +36,7 @@\n  * @param remotes An array of remotes\n  */\n public final class Copies extends\n-    org.cactoos.collection.CollectionEnvelope<Remote> {\n+    org.cactoos.list.ListOfEnvelope<Remote> {\n \n     /**\n      * Ctor.\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/Remote.java\n+++ b/java-api/src/main/java/io/zold/api/Remote.java\n@@ -26,7 +26,7 @@\n import org.cactoos.text.FormattedText;\n import org.cactoos.text.TextOf;\n import org.cactoos.text.UncheckedText;\n-import org.cactoos.text.RandomString;\n+import org.cactoos.text.RandomText;\n \n /**\n  * One remote host and port.\n@@ -118,7 +118,7 @@\n      * @return New remote with random host\n      */\n     public Remote randomHost() {\n-        return new Remote(new RandomString(16, \"abcdef0123456789\"), this.port());\n+        return new Remote(new RandomText(16, \"abcdef0123456789\"), this.port());\n     }\n \n     @Override\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtNetwork.java\n+++ b/java-api/src/main/java/io/zold/api/RtNetwork.java\n@@ -25,7 +25,7 @@\n import java.net.URL;\n import org.cactoos.Input;\n import org.cactoos.io.InputOf;\n-import org.cactoos.scalar.CheckedFunction;\n+import org.cactoos.scalar.IoCheckedScalar;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.TextOf;\n \n@@ -55,7 +55,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public String load() throws IOException {\n-        return new CheckedFunction<>(\n+        return new IoCheckedScalar<>(\n             (URL url) -> new TextOf(\n                 new InputOf(url)\n             ).asString(),\n@@ -71,7 +71,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private URL composeUrl(final String path) throws IOException {\n-        return new URL(\n+        return new UncheckedScalar<>(new CheckedFunction<>(\n             () -> new URL(\n                 String.format(\n                     \"%s://%s:%d/%s\",\n@@ -80,6 +80,6 @@\n                     this.port.value(),\n                     path\n                 )\n-            )\n+            ),\n+            \"Invalid URL\"\n         ).value();\n     }\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtScore.java\n+++ b/java-api/src/main/java/io/zold/api/RtScore.java\n@@ -24,7 +24,7 @@\n import java.io.IOException;\n import org.cactoos.scalar.Scalar;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.CheckedFunction;\n+import org.cactoos.scalar.IoCheckedScalar;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n@@ -48,7 +48,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public RtScore(final Input input) throws IOException {\n-        this(new CheckedFunction<>(\n+        this(new IoCheckedScalar<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n@@ -100,7 +100,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadValue(final String param) throws IOException {\n-        return new CheckedFunction<>(\n+        return new IoCheckedScalar<>(\n             (String prm) -> Long.parseLong(\n                 new SplitText(\n                     new UncheckedScalar<>(this.score).value(),\n@@ -108,6 +108,6 @@\n                     \" \"\n                 ).iterator().next()\n             ),\n-            param\n+            param,\n+            \"Invalid long value\"\n         ).value();\n     }\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtTransaction.java\n+++ b/java-api/src/main/java/io/zold/api/RtTransaction.java\n@@ -28,7 +28,7 @@\n import org.cactoos.scalar.Scalar;\n import org.cactoos.scalar.StickyScalar;\n import org.cactoos.scalar.UncheckedScalar;\n-import org.cactoos.scalar.CheckedFunction;\n+import org.cactoos.scalar.IoCheckedScalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n import org.cactoos.text.TrimmedText;\n@@ -53,7 +53,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public RtTransaction(final Input input) throws IOException {\n-        this(new CheckedFunction<>(\n+        this(new IoCheckedScalar<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n@@ -155,7 +155,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadValue(final String param) throws IOException {\n-        return new CheckedFunction<>(\n+        return new IoCheckedScalar<>(\n             (String prm) -> Long.parseLong(\n                 new TrimmedText(\n                     new SplitText(\n@@ -164,6 +164,6 @@\n                     \"=\"\n                 ).iterator().next()\n             ),\n-            param\n+            param,\n+            \"Invalid long value\"\n         ).value();\n     }\n@@ -189,13 +189,13 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private String loadString(final String param) throws IOException {\n-        return new CheckedFunction<>(\n+        return new IoCheckedScalar<>(\n             (String prm) -> new TrimmedText(\n                 new SplitText(\n                     new UncheckedScalar<>(this.transaction).value(),\n                     prm + \"=\"\n                 ).iterator().next()\n             ).asString(),\n-            param\n+            param,\n+            \"Invalid String value\"\n         ).value();\n     }\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/TaxBeneficiaries.java\n+++ b/java-api/src/main/java/io/zold/api/TaxBeneficiaries.java\n@@ -25,7 +25,7 @@\n import java.io.IOException;\n import org.cactoos.Input;\n import org.cactoos.io.InputOf;\n-import org.cactoos.scalar.CheckedFunction;\n+import org.cactoos.scalar.IoCheckedScalar;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n@@ -49,7 +49,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public TaxBeneficiaries(final Input input) throws IOException {\n-        this(new CheckedFunction<>(\n+        this(new IoCheckedScalar<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/Wallet.java\n+++ b/java-api/src/main/java/io/zold/api/Wallet.java\n@@ -25,7 +25,7 @@\n import org.cactoos.iterable.Mapped;\n import org.cactoos.scalar.Constant;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.CheckedFunction;\n+import org.cactoos.scalar.IoCheckedScalar;\n import org.cactoos.scalar.Scalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.text.TextOf;\n@@ -61,7 +61,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public Wallet(final File file) {\n-        this(new CheckedFunction<>(\n+        this(new IoCheckedScalar<>(\n             path -> new TextOf(path).asString(), file\n         ));\n     }\n@@ -74,7 +74,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public Wallet(final Path path) {\n-        this(new CheckedFunction<>(\n+        this(new IoCheckedScalar<>(\n             p -> new TextOf(p).asString(), path\n         ));\n     }\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/WalletsIn.java\n+++ b/java-api/src/main/java/io/zold/api/WalletsIn.java\n@@ -28,7 +28,7 @@\n import org.cactoos.list.Sorted;\n import org.cactoos.scalar.Constant;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.CheckedFunction;\n+import org.cactoos.scalar.IoCheckedScalar;\n import org.cactoos.scalar.SolidScalar;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.TextOf;\n@@ -51,7 +51,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public WalletsIn(final File dir) throws IOException {\n-        this(new CheckedFunction<>(\n+        this(new IoCheckedScalar<>(\n             directory -> new TextOf(\n                 new JoinedText(\n                     \"\\n\",\n@@ -81,7 +81,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private static String wallet(final String line) throws IOException {\n-        return new CheckedFunction<>(\n+        return new IoCheckedScalar<>(\n             (String data) -> new SplitText(data, \" \").iterator().next(),\n             line\n         ).value();\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
            "span_id": 6694478812051171451
        },
        {
            "input": "```diff\n--- a/java-api/src/main/java/io/zold/api/Copies.java\n+++ b/java-api/src/main/java/io/zold/api/Copies.java\n@@ -28,7 +28,7 @@\n import java.util.List;\n \n /**\n- * {@link org.cactoos.list.ListOf} of {@link Remote}s.\n+ * {@link org.cactoos.collection.CollectionOf} of {@link Remote}s.\n  *\n  * @since 0.1\n  */\n@@ -36,7 +36,7 @@\n  * @param remotes An array of remotes\n  */\n public final class Copies extends\n-    org.cactoos.list.ListOfEnvelope<Remote> {\n+    org.cactoos.collection.CollectionEnvelope<Remote> {\n \n     /**\n      * Ctor.\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/Remote.java\n+++ b/java-api/src/main/java/io/zold/api/Remote.java\n@@ -26,7 +26,7 @@\n import org.cactoos.text.FormattedText;\n import org.cactoos.text.TextOf;\n import org.cactoos.text.UncheckedText;\n-import org.cactoos.text.RandomText;\n+import org.cactoos.text.RandomString;\n \n /**\n  * One remote host and port.\n@@ -118,7 +118,7 @@\n      * @return New remote with random host\n      */\n     public Remote randomHost() {\n-        return new Remote(new RandomText(16, \"abcdef0123456789\"), this.port());\n+        return new Remote(new RandomString(16, \"abcdef0123456789\"), this.port());\n     }\n \n     @Override\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtNetwork.java\n+++ b/java-api/src/main/java/io/zold/api/RtNetwork.java\n@@ -25,8 +25,8 @@\n import java.net.URL;\n import org.cactoos.Input;\n import org.cactoos.io.InputOf;\n-import org.cactoos.scalar.IoCheckedScalar;\n import org.cactoos.scalar.UncheckedScalar;\n+import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.text.TextOf;\n \n /**\n@@ -55,7 +55,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public String load() throws IOException {\n-        return new IoCheckedScalar<>(\n+        return new CheckedFunction<>(\n             (URL url) -> new TextOf(\n                 new InputOf(url)\n             ).asString(),\n@@ -71,7 +71,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private URL composeUrl(final String path) throws IOException {\n-        return new UncheckedScalar<>(new CheckedFunction<>(\n+        return new UncheckedScalar<>(\n             () -> new URL(\n                 String.format(\n                     \"%s://%s:%d/%s\",\n@@ -80,6 +80,6 @@\n                     this.port.value(),\n                     path\n                 )\n-            ),\n-            \"Invalid URL\"\n+            )\n         ).value();\n     }\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtScore.java\n+++ b/java-api/src/main/java/io/zold/api/RtScore.java\n@@ -24,7 +24,7 @@\n import java.io.IOException;\n import org.cactoos.scalar.Scalar;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n@@ -48,7 +48,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public RtScore(final Input input) throws IOException {\n-        this(new IoCheckedScalar<>(\n+        this(new CheckedFunction<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n@@ -100,14 +100,13 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadValue(final String param) throws IOException {\n-        return new IoCheckedScalar<>(\n+        return new CheckedFunction<>(\n             (String prm) -> Long.parseLong(\n                 new SplitText(\n                     new UncheckedScalar<>(this.score).value(),\n                     \" \"\n                 ).iterator().next()\n             ),\n-            param,\n-            \"Invalid long value\"\n+            param\n         ).value();\n     }\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtTransaction.java\n+++ b/java-api/src/main/java/io/zold/api/RtTransaction.java\n@@ -28,7 +28,7 @@\n import org.cactoos.scalar.Scalar;\n import org.cactoos.scalar.StickyScalar;\n import org.cactoos.scalar.UncheckedScalar;\n-import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n import org.cactoos.text.TrimmedText;\n@@ -53,7 +53,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public RtTransaction(final Input input) throws IOException {\n-        this(new IoCheckedScalar<>(\n+        this(new CheckedFunction<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n@@ -155,7 +155,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadValue(final String param) throws IOException {\n-        return new IoCheckedScalar<>(\n+        return new CheckedFunction<>(\n             (String prm) -> Long.parseLong(\n                 new TrimmedText(\n                     new SplitText(\n@@ -164,6 +164,6 @@\n                     \"=\"\n                 ).iterator().next()\n             ),\n-            param,\n-            \"Invalid long value\"\n+            param\n         ).value();\n     }\n@@ -189,13 +189,13 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private String loadString(final String param) throws IOException {\n-        return new IoCheckedScalar<>(\n+        return new CheckedFunction<>(\n             (String prm) -> new TrimmedText(\n                 new SplitText(\n                     new UncheckedScalar<>(this.transaction).value(),\n                     prm + \"=\"\n                 ).iterator().next()\n             ).asString(),\n-            param,\n-            \"Invalid String value\"\n+            param\n         ).value();\n     }\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/TaxBeneficiaries.java\n+++ b/java-api/src/main/java/io/zold/api/TaxBeneficiaries.java\n@@ -25,7 +25,7 @@\n import java.io.IOException;\n import org.cactoos.Input;\n import org.cactoos.io.InputOf;\n-import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n@@ -49,7 +49,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public TaxBeneficiaries(final Input input) throws IOException {\n-        this(new IoCheckedScalar<>(\n+        this(new CheckedFunction<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/Wallet.java\n+++ b/java-api/src/main/java/io/zold/api/Wallet.java\n@@ -25,7 +25,7 @@\n import org.cactoos.iterable.Mapped;\n import org.cactoos.scalar.Constant;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.scalar.Scalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.text.TextOf;\n@@ -61,7 +61,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public Wallet(final File file) {\n-        this(new IoCheckedScalar<>(\n+        this(new CheckedFunction<>(\n             path -> new TextOf(path).asString(), file\n         ));\n     }\n@@ -74,7 +74,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public Wallet(final Path path) {\n-        this(new IoCheckedScalar<>(\n+        this(new CheckedFunction<>(\n             p -> new TextOf(p).asString(), path\n         ));\n     }\n@@ -116,7 +116,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadLong(final String key) throws IOException {\n-        return new IoCheckedScalar<>(\n+        return new CheckedFunction<>(\n             (String k) -> Long.parseLong(\n                 new TrimmedText(\n                     new SplitText(\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/WalletsIn.java\n+++ b/java-api/src/main/java/io/zold/api/WalletsIn.java\n@@ -28,7 +28,7 @@\n import org.cactoos.list.Sorted;\n import org.cactoos.scalar.Constant;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.scalar.SolidScalar;\n import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.TextOf;\n@@ -51,7 +51,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public WalletsIn(final File dir) throws IOException {\n-        this(new IoCheckedScalar<>(\n+        this(new CheckedFunction<>(\n             directory -> new TextOf(\n                 new JoinedText(\n                     \"\\n\",\n@@ -81,7 +81,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private static String wallet(final String line) throws IOException {\n-        return new IoCheckedScalar<>(\n+        return new CheckedFunction<>(\n             (String data) -> new SplitText(data, \" \").iterator().next(),\n             line\n         ).value();\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
            "span_id": 11030582962202018035
        },
        {
            "input": "```diff\n--- a/java-api/src/main/java/io/zold/api/Copies.java\n+++ b/java-api/src/main/java/io/zold/api/Copies.java\n@@ -28,7 +28,7 @@\n import java.util.List;\n \n /**\n- * {@link org.cactoos.collection.CollectionOf} of {@link Remote}s.\n+ * {@link org.cactoos.list.ListOf} of {@link Remote}s.\n  *\n  * @since 0.1\n  */\n@@ -36,7 +36,7 @@\n  * @param remotes An array of remotes\n  */\n public final class Copies extends\n-    org.cactoos.collection.CollectionEnvelope<Remote> {\n+    org.cactoos.list.ListOfEnvelope<Remote> {\n \n     /**\n      * Ctor.\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/Remote.java\n+++ b/java-api/src/main/java/io/zold/api/Remote.java\n@@ -26,7 +26,7 @@\n import org.cactoos.text.FormattedText;\n import org.cactoos.text.TextOf;\n import org.cactoos.text.UncheckedText;\n-import org.cactoos.text.RandomString;\n+import org.cactoos.text.RandomText;\n \n /**\n  * One remote host and port.\n@@ -118,7 +118,7 @@\n      * @return New remote with random host\n      */\n     public Remote randomHost() {\n-        return new Remote(new RandomString(16, \"abcdef0123456789\"), this.port());\n+        return new Remote(new RandomText(16, \"abcdef0123456789\"), this.port());\n     }\n \n     @Override\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtNetwork.java\n+++ b/java-api/src/main/java/io/zold/api/RtNetwork.java\n@@ -25,7 +25,7 @@\n import java.net.URL;\n import org.cactoos.Input;\n import org.cactoos.io.InputOf;\n-import org.cactoos.scalar.UncheckedScalar;\n+import org.cactoos.scalar.Unchecked;\n import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.text.TextOf;\n \n@@ -55,11 +55,11 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public String load() throws IOException {\n-        return new CheckedFunction<>(\n+        return new Unchecked<>(new CheckedFunction<>(\n             (URL url) -> new TextOf(\n                 new InputOf(url)\n             ).asString(),\n-            this.url\n+            this.url\n         )).value();\n     }\n \n@@ -71,7 +71,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private URL composeUrl(final String path) throws IOException {\n-        return new UncheckedScalar<>(\n+        return new Unchecked<>(\n             () -> new URL(\n                 String.format(\n                     \"%s://%s:%d/%s\",\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtScore.java\n+++ b/java-api/src/main/java/io/zold/api/RtScore.java\n@@ -25,7 +25,7 @@\n import org.cactoos.scalar.Scalar;\n import org.cactoos.scalar.StickyScalar;\n import org.cactoos.scalar.CheckedFunction;\n-import org.cactoos.scalar.UncheckedScalar;\n+import org.cactoos.scalar.Unchecked;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n \n@@ -48,7 +48,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public RtScore(final Input input) throws IOException {\n-        this(new CheckedFunction<>(\n+        this(new Unchecked<>(new CheckedFunction<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n@@ -100,10 +100,10 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadValue(final String param) throws IOException {\n-        return new CheckedFunction<>(\n+        return new Unchecked<>(new CheckedFunction<>(\n             (String prm) -> Long.parseLong(\n                 new SplitText(\n-                    new UncheckedScalar<>(this.score).value(),\n+                    new Unchecked<>(this.score).value(),\n                     \" \"\n                 ).iterator().next()\n             ),\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtTransaction.java\n+++ b/java-api/src/main/java/io/zold/api/RtTransaction.java\n@@ -27,7 +27,7 @@\n import java.util.regex.Pattern;\n import org.cactoos.scalar.Scalar;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.UncheckedScalar;\n+import org.cactoos.scalar.Unchecked;\n import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n@@ -53,7 +53,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public RtTransaction(final Input input) throws IOException {\n-        this(new CheckedFunction<>(\n+        this(new Unchecked<>(new CheckedFunction<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n@@ -155,21 +155,21 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadValue(final String param) throws IOException {\n-        return new CheckedFunction<>(\n+        return new Unchecked<>(new CheckedFunction<>(\n             (String prm) -> Long.parseLong(\n                 new TrimmedText(\n                     new SplitText(\n-                        new UncheckedScalar<>(this.transaction).value(),\n+                        new Unchecked<>(this.transaction).value(),\n                         prm + \"=\"\n                     ).iterator().next()\n                 )\n             ),\n-            param\n+            param,\n+            \"Invalid long value\"\n         ).value();\n     }\n \n     /**\n      * Load string value from transaction string.\n-     *\n      * @param param Parameter name\n      * @return Value of the parameter\n      * @throws IOException If an I/O error occurs.\n@@ -178,10 +178,10 @@\n         return new Unchecked<>(new CheckedFunction<>(\n             (String prm) -> new TrimmedText(\n                 new SplitText(\n-                    new UncheckedScalar<>(this.transaction).value(),\n+                    new Unchecked<>(this.transaction).value(),\n                     prm + \"=\"\n                 ).iterator().next()\n             ).asString(),\n-            param\n+            param,\n+            \"Invalid String value\"\n         ).value();\n     }\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/TaxBeneficiaries.java\n+++ b/java-api/src/main/java/io/zold/api/TaxBeneficiaries.java\n@@ -26,7 +26,7 @@\n import org.cactoos.Input;\n import org.cactoos.io.InputOf;\n import org.cactoos.scalar.CheckedFunction;\n-import org.cactoos.scalar.UncheckedScalar;\n+import org.cactoos.scalar.Unchecked;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n \n@@ -49,7 +49,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public TaxBeneficiaries(final Input input) throws IOException {\n-        this(new CheckedFunction<>(\n+        this(new Unchecked<>(new CheckedFunction<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n@@ -71,7 +71,7 @@\n      private long parseCount() throws IOException {\n         return new ListOf<>(\n             new SplitText(\n-                new UncheckedScalar<>(this.count).value(),\n+                new Unchecked<>(this.count).value(),\n                 \" \"\n             )\n         ).size() - 1;\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/Wallet.java\n+++ b/java-api/src/main/java/io/zold/api/Wallet.java\n@@ -61,7 +61,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public Wallet(final File file) {\n-        this(new CheckedFunction<>(\n+        this(new Unchecked<>(new CheckedFunction<>(\n             path -> new TextOf(path).asString(), file\n         ));\n     }\n@@ -74,7 +74,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public Wallet(final Path path) {\n-        this(new CheckedFunction<>(\n+        this(new Unchecked<>(new CheckedFunction<>(\n             p -> new TextOf(p).asString(), path\n         ));\n     }\n@@ -116,11 +116,11 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadLong(final String key) throws IOException {\n-        return new CheckedFunction<>(\n+        return new Unchecked<>(new CheckedFunction<>(\n             (String k) -> Long.parseLong(\n                 new TrimmedText(\n                     new SplitText(\n-                        new UncheckedScalar<>(this.content).value(),\n+                        new Unchecked<>(this.content).value(),\n                         k + \":\"\n                     ).iterator().next()\n                 )\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/WalletsIn.java\n+++ b/java-api/src/main/java/io/zold/api/WalletsIn.java\n@@ -30,7 +30,7 @@\n import org.cactoos.scalar.StickyScalar;\n import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.scalar.SolidScalar;\n-import org.cactoos.scalar.UncheckedScalar;\n+import org.cactoos.scalar.Unchecked;\n import org.cactoos.text.TextOf;\n \n /**\n@@ -51,7 +51,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public WalletsIn(final File dir) throws IOException {\n-        this(new CheckedFunction<>(\n+        this(new Unchecked<>(new CheckedFunction<>(\n             directory -> new TextOf(\n                 new JoinedText(\n                     \"\\n\",\n@@ -81,7 +81,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private static String wallet(final String line) throws IOException {\n-        return new CheckedFunction<>(\n+        return new Unchecked<>(new CheckedFunction<>(\n             (String data) -> new SplitText(data, \" \").iterator().next(),\n             line\n         ).value();\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
            "span_id": 17678587748971411653
        },
        {
            "input": "```diff\n--- a/java-api/src/main/java/io/zold/api/Copies.java\n+++ b/java-api/src/main/java/io/zold/api/Copies.java\n@@ -28,7 +28,7 @@\n import java.util.List;\n \n /**\n- * {@link org.cactoos.list.ListOf} of {@link Remote}s.\n+ * {@link org.cactoos.collection.CollectionOf} of {@link Remote}s.\n  *\n  * @since 0.1\n  */\n@@ -36,7 +36,7 @@\n  * @param remotes An array of remotes\n  */\n public final class Copies extends\n-    org.cactoos.list.ListOfEnvelope<Remote> {\n+    org.cactoos.collection.CollectionEnvelope<Remote> {\n \n     /**\n      * Ctor.\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/Remote.java\n+++ b/java-api/src/main/java/io/zold/api/Remote.java\n@@ -26,7 +26,7 @@\n import org.cactoos.text.FormattedText;\n import org.cactoos.text.TextOf;\n import org.cactoos.text.UncheckedText;\n-import org.cactoos.text.RandomText;\n+import org.cactoos.text.RandomString;\n \n /**\n  * One remote host and port.\n@@ -118,7 +118,7 @@\n      * @return New remote with random host\n      */\n     public Remote randomHost() {\n-        return new Remote(new RandomText(16, \"abcdef0123456789\"), this.port());\n+        return new Remote(new RandomString(16, \"abcdef0123456789\"), this.port());\n     }\n \n     @Override\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtNetwork.java\n+++ b/java-api/src/main/java/io/zold/api/RtNetwork.java\n@@ -25,8 +25,8 @@\n import java.net.URL;\n import org.cactoos.Input;\n import org.cactoos.io.InputOf;\n-import org.cactoos.scalar.Unchecked;\n-import org.cactoos.scalar.CheckedFunction;\n+import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.TextOf;\n \n /**\n@@ -55,11 +55,11 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public String load() throws IOException {\n-        return new Unchecked<>(new CheckedFunction<>(\n+        return new IoCheckedScalar<>(\n             (URL url) -> new TextOf(\n                 new InputOf(url)\n             ).asString(),\n-            this.url\n-        )).value();\n+            this.url\n+        ).value();\n     }\n \n     /**\n@@ -71,7 +71,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private URL composeUrl(final String path) throws IOException {\n-        return new Unchecked<>(\n+        return new UncheckedScalar<>(\n             () -> new URL(\n                 String.format(\n                     \"%s://%s:%d/%s\",\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtScore.java\n+++ b/java-api/src/main/java/io/zold/api/RtScore.java\n@@ -24,8 +24,8 @@\n import java.io.IOException;\n import org.cactoos.scalar.Scalar;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.CheckedFunction;\n-import org.cactoos.scalar.Unchecked;\n+import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n \n@@ -48,7 +48,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public RtScore(final Input input) throws IOException {\n-        this(new Unchecked<>(new CheckedFunction<>(\n+        this(new IoCheckedScalar<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n@@ -100,11 +100,11 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadValue(final String param) throws IOException {\n-        return new Unchecked<>(new CheckedFunction<>(\n+        return new IoCheckedScalar<>(\n             (String prm) -> Long.parseLong(\n                 new SplitText(\n-                    new Unchecked<>(this.score).value(),\n+                    new UncheckedScalar<>(this.score).value(),\n                     \" \"\n                 ).iterator().next()\n-            ),\n-            param\n+            ), param\n         ).value();\n     }\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/RtTransaction.java\n+++ b/java-api/src/main/java/io/zold/api/RtTransaction.java\n@@ -27,8 +27,8 @@\n import java.util.regex.Pattern;\n import org.cactoos.scalar.Scalar;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.Unchecked;\n-import org.cactoos.scalar.CheckedFunction;\n+import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n import org.cactoos.text.TrimmedText;\n@@ -53,7 +53,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public RtTransaction(final Input input) throws IOException {\n-        this(new Unchecked<>(new CheckedFunction<>(\n+        this(new IoCheckedScalar<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n@@ -155,11 +155,11 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadValue(final String param) throws IOException {\n-        return new Unchecked<>(new CheckedFunction<>(\n+        return new IoCheckedScalar<>(\n             (String prm) -> Long.parseLong(\n                 new TrimmedText(\n                     new SplitText(\n-                        new Unchecked<>(this.transaction).value(),\n+                        new UncheckedScalar<>(this.transaction).value(),\n                         prm + \"=\"\n                     ).iterator().next()\n                 )\n@@ -175,11 +175,11 @@\n      * @return Value of the parameter\n      * @throws IOException If an I/O error occurs.\n      */\n-    private String loadString(final String param) throws IOException {\n-        return new Unchecked<>(new CheckedFunction<>(\n+    private String loadString(final String param) throws IOException {        \n+        return new IoCheckedScalar<>(\n             (String prm) -> new TrimmedText(\n                 new SplitText(\n-                    new Unchecked<>(this.transaction).value(),\n+                    new UncheckedScalar<>(this.transaction).value(),\n                     prm + \"=\"\n                 ).iterator().next()\n             ).asString(),\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/TaxBeneficiaries.java\n+++ b/java-api/src/main/java/io/zold/api/TaxBeneficiaries.java\n@@ -25,8 +25,8 @@\n import java.io.IOException;\n import org.cactoos.Input;\n import org.cactoos.io.InputOf;\n-import org.cactoos.scalar.CheckedFunction;\n-import org.cactoos.scalar.Unchecked;\n+import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.list.ListOf;\n \n@@ -49,7 +49,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public TaxBeneficiaries(final Input input) throws IOException {\n-        this(new Unchecked<>(new CheckedFunction<>(\n+        this(new IoCheckedScalar<>(\n             in -> new TextOf(in).asString(),\n             input\n         ));\n@@ -71,7 +71,7 @@\n      private long parseCount() throws IOException {\n         return new ListOf<>(\n             new SplitText(\n-                new Unchecked<>(this.count).value(),\n+                new UncheckedScalar<>(this.count).value(),\n                 \" \"\n             )\n         ).size() - 1;\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/Wallet.java\n+++ b/java-api/src/main/java/io/zold/api/Wallet.java\n@@ -25,7 +25,7 @@\n import org.cactoos.iterable.Mapped;\n import org.cactoos.scalar.Constant;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.CheckedFunction;\n+import org.cactoos.scalar.IoCheckedScalar;\n import org.cactoos.scalar.Scalar;\n import org.cactoos.text.SplitText;\n import org.cactoos.text.TextOf;\n@@ -61,7 +61,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public Wallet(final File file) {\n-        this(new Unchecked<>(new CheckedFunction<>(\n+        this(new IoCheckedScalar<>(\n             path -> new TextOf(path).asString(), file\n         ));\n     }\n@@ -74,7 +74,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public Wallet(final Path path) {\n-        this(new Unchecked<>(new CheckedFunction<>(\n+        this(new IoCheckedScalar<>(\n             p -> new TextOf(p).asString(), path\n         ));\n     }\n@@ -116,11 +116,11 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private long loadLong(final String key) throws IOException {\n-        return new Unchecked<>(new CheckedFunction<>(\n+        return new IoCheckedScalar<>(\n             (String k) -> Long.parseLong(\n                 new TrimmedText(\n                     new SplitText(\n-                        new Unchecked<>(this.content).value(),\n+                        new UncheckedScalar<>(this.content).value(),\n                         k + \":\"\n                     ).iterator().next()\n                 )\n\n```diff\n--- a/java-api/src/main/java/io/zold/api/WalletsIn.java\n+++ b/java-api/src/main/java/io/zold/api/WalletsIn.java\n@@ -28,8 +28,8 @@\n import org.cactoos.list.Sorted;\n import org.cactoos.scalar.Constant;\n import org.cactoos.scalar.StickyScalar;\n-import org.cactoos.scalar.CheckedFunction;\n import org.cactoos.scalar.SolidScalar;\n-import org.cactoos.scalar.Unchecked;\n+import org.cactoos.scalar.IoCheckedScalar;\n+import org.cactoos.scalar.UncheckedScalar;\n import org.cactoos.text.TextOf;\n \n /**\n@@ -51,7 +51,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     public WalletsIn(final File dir) throws IOException {\n-        this(new Unchecked<>(new CheckedFunction<>(\n+        this(new IoCheckedScalar<>(\n             directory -> new TextOf(\n                 new JoinedText(\n                     \"\\n\",\n@@ -81,7 +81,7 @@\n      * @throws IOException If an I/O error occurs.\n      */\n     private static String wallet(final String line) throws IOException {\n-        return new Unchecked<>(new CheckedFunction<>(\n+        return new IoCheckedScalar<>(\n             (String data) -> new SplitText(data, \" \").iterator().next(),\n             line\n         ).value();\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: [Errno 2] No such file or directory: '/tmp/tmp36rif04x/java-api/src/main/java/io/zold/api/Copies.java'",
            "span_id": 8637727830752902985
        }
    ],
    "read_file": [],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}