{
    "validate_diffs": [
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -4,8 +4,6 @@ import org.openqa.selenium.By;\n import org.openqa.selenium.NoSuchElementException;\n import org.openqa.selenium.WebElement;\n \n-import com.gargoylesoftware.htmlunit.ScriptResult;\n-\n import org.jenkinsci.test.acceptance.po.PageObject;\n \n /**\n@@ -32,8 +30,7 @@ public class ChartUtil {\n                     \"delete(window.Array.prototype.toJSON) %n\"\n                             + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                     elementId));\n-            ScriptResult scriptResult = new ScriptResult(result);\n-            return scriptResult.getJavaScriptResult().toString();\n+            return result != null ? result.toString() : null;\n         }\n         return null;\n     }\n@@ -57,8 +54,7 @@ public class ChartUtil {\n                                 + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                         toolAttribute));\n \n-                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n-                if (scriptResult != null) {\n+                if (result != null) {\n                     return scriptResult.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            return result != null ? result.toString() : null;\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                if (result != null) {\\n                    return scriptResult.toString();\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 16216670174507809638
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -55,7 +55,7 @@ public class ChartUtil {\n                         toolAttribute));\n \n                 if (result != null) {\n-                    return scriptResult.toString();\n+                    return result.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n             }\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport com.gargoylesoftware.htmlunit.ScriptResult;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            ScriptResult scriptResult = new ScriptResult(result);\\n            return scriptResult.getJavaScriptResult().toString();\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\\n                if (scriptResult != null) {\\n                    return result.toString();\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 18056208134477861746
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -4,8 +4,6 @@ import org.openqa.selenium.By;\n import org.openqa.selenium.NoSuchElementException;\n import org.openqa.selenium.WebElement;\n \n-import com.gargoylesoftware.htmlunit.ScriptResult;\n-\n import org.jenkinsci.test.acceptance.po.PageObject;\n \n /**\n@@ -32,8 +30,7 @@ public class ChartUtil {\n                     \"delete(window.Array.prototype.toJSON) %n\"\n                             + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                     elementId));\n-            ScriptResult scriptResult = new ScriptResult(result);\n-            return scriptResult.getJavaScriptResult().toString();\n+            return result != null ? result.toString() : null;\n         }\n         return null;\n     }\n@@ -57,8 +54,7 @@ public class ChartUtil {\n                                 + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                         toolAttribute));\n \n-                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n-                if (scriptResult != null) {\n+                if (result != null) {\n                     return result.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            return result != null ? result.toString() : null;\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                if (result != null) {\\n                    return result.toString();\\n                    return scriptResult.toString();\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 5596619759756165048
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -54,7 +54,6 @@ public class ChartUtil {\n \n                 if (result != null) {\n                     return result.toString();\n-                    return scriptResult.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n             }\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport com.gargoylesoftware.htmlunit.ScriptResult;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            ScriptResult scriptResult = new ScriptResult(result);\\n            return scriptResult.getJavaScriptResult().toString();\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\\n                if (scriptResult != null) {\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 3607910802246579237
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -4,8 +4,6 @@ import org.openqa.selenium.By;\n import org.openqa.selenium.NoSuchElementException;\n import org.openqa.selenium.WebElement;\n \n-import com.gargoylesoftware.htmlunit.ScriptResult;\n-\n import org.jenkinsci.test.acceptance.po.PageObject;\n \n /**\n@@ -32,8 +30,7 @@ public class ChartUtil {\n                     \"delete(window.Array.prototype.toJSON) %n\"\n                             + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                     elementId));\n-            ScriptResult scriptResult = new ScriptResult(result);\n-            return scriptResult.getJavaScriptResult().toString();\n+            return result != null ? result.toString() : null;\n         }\n         return null;\n     }\n@@ -57,8 +54,7 @@ public class ChartUtil {\n                                 + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                         toolAttribute));\n \n-                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n-                if (scriptResult != null) {\n+                if (result != null) {\n                     return result.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            return result != null ? result.toString() : null;\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                if (result != null) {\\n                    return result.toString();\\n                    return scriptResult.toString();\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 10655419267037420365
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -54,7 +54,6 @@ public class ChartUtil {\n \n                 if (result != null) {\n                     return result.toString();\n-                    return scriptResult.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n             }\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport com.gargoylesoftware.htmlunit.ScriptResult;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            ScriptResult scriptResult = new ScriptResult(result);\\n            return scriptResult.getJavaScriptResult().toString();\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\\n                if (scriptResult != null) {\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 1469020784277221053
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -4,8 +4,6 @@ import org.openqa.selenium.By;\n import org.openqa.selenium.NoSuchElementException;\n import org.openqa.selenium.WebElement;\n \n-import com.gargoylesoftware.htmlunit.ScriptResult;\n-\n import org.jenkinsci.test.acceptance.po.PageObject;\n \n /**\n@@ -32,8 +30,7 @@ public class ChartUtil {\n                     \"delete(window.Array.prototype.toJSON) %n\"\n                             + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                     elementId));\n-            ScriptResult scriptResult = new ScriptResult(result);\n-            return scriptResult.getJavaScriptResult().toString();\n+            return result != null ? result.toString() : null;\n         }\n         return null;\n     }\n@@ -57,8 +54,8 @@ public class ChartUtil {\n                                 + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                         toolAttribute));\n \n-                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n-                if (scriptResult != null) {\n+                if (result != null) {\n+                    return result.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n             }\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            return result != null ? result.toString() : null;\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                if (result != null) {\\n                    return result.toString();\\n                    return scriptResult.toString();\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 13404830290343656378
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -54,7 +54,6 @@ public class ChartUtil {\n \n                 if (result != null) {\n                     return result.toString();\n-                    return scriptResult.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n             }\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport com.gargoylesoftware.htmlunit.ScriptResult;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            ScriptResult scriptResult = new ScriptResult(result);\\n            return scriptResult.getJavaScriptResult().toString();\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\\n                if (scriptResult != null) {\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 9573144613961672443
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -4,8 +4,6 @@ import org.openqa.selenium.By;\n import org.openqa.selenium.NoSuchElementException;\n import org.openqa.selenium.WebElement;\n \n-import com.gargoylesoftware.htmlunit.ScriptResult;\n-\n import org.jenkinsci.test.acceptance.po.PageObject;\n \n /**\n@@ -32,8 +30,7 @@ public class ChartUtil {\n                     \"delete(window.Array.prototype.toJSON) %n\"\n                             + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                     elementId));\n-            ScriptResult scriptResult = new ScriptResult(result);\n-            return scriptResult.getJavaScriptResult().toString();\n+            return result != null ? result.toString() : null;\n         }\n         return null;\n     }\n@@ -57,8 +54,8 @@ public class ChartUtil {\n                                 + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                         toolAttribute));\n \n-                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n-                if (scriptResult != null) {\n+                if (result != null) {\n+                    return result.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n             }\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            return result != null ? result.toString() : null;\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                if (result != null) {\\n                    return result.toString();\\n                    return scriptResult.toString();\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 10431156212339160443
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -54,7 +54,6 @@ public class ChartUtil {\n \n                 if (result != null) {\n                     return result.toString();\n-                    return scriptResult.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n             }\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport com.gargoylesoftware.htmlunit.ScriptResult;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            ScriptResult scriptResult = new ScriptResult(result);\\n            return scriptResult.getJavaScriptResult().toString();\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\\n                if (scriptResult != null) {\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 5531940799167984400
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -4,8 +4,6 @@ import org.openqa.selenium.By;\n import org.openqa.selenium.NoSuchElementException;\n import org.openqa.selenium.WebElement;\n \n-import com.gargoylesoftware.htmlunit.ScriptResult;\n-\n import org.jenkinsci.test.acceptance.po.PageObject;\n \n /**\n@@ -32,8 +30,7 @@ public class ChartUtil {\n                     \"delete(window.Array.prototype.toJSON) %n\"\n                             + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                     elementId));\n-            ScriptResult scriptResult = new ScriptResult(result);\n-            return scriptResult.getJavaScriptResult().toString();\n+            return result != null ? result.toString() : null;\n         }\n         return null;\n     }\n@@ -57,8 +54,8 @@ public class ChartUtil {\n                                 + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                         toolAttribute));\n \n-                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n-                if (scriptResult != null) {\n+                if (result != null) {\n+                    return result.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n             }\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            return result != null ? result.toString() : null;\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                if (result != null) {\\n                    return result.toString();\\n                    return scriptResult.toString();\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 9977397708102299337
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -54,7 +54,6 @@ public class ChartUtil {\n \n                 if (result != null) {\n                     return result.toString();\n-                    return scriptResult.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n             }\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport com.gargoylesoftware.htmlunit.ScriptResult;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            ScriptResult scriptResult = new ScriptResult(result);\\n            return scriptResult.getJavaScriptResult().toString();\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\\n                if (scriptResult != null) {\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 13423177715542413140
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -4,8 +4,6 @@ import org.openqa.selenium.By;\n import org.openqa.selenium.NoSuchElementException;\n import org.openqa.selenium.WebElement;\n \n-import com.gargoylesoftware.htmlunit.ScriptResult;\n-\n import org.jenkinsci.test.acceptance.po.PageObject;\n \n /**\n@@ -32,8 +30,7 @@ public class ChartUtil {\n                     \"delete(window.Array.prototype.toJSON) %n\"\n                             + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                     elementId));\n-            ScriptResult scriptResult = new ScriptResult(result);\n-            return scriptResult.getJavaScriptResult().toString();\n+            return result != null ? result.toString() : null;\n         }\n         return null;\n     }\n@@ -57,8 +54,8 @@ public class ChartUtil {\n                                 + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                         toolAttribute));\n \n-                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n-                if (scriptResult != null) {\n+                if (result != null) {\n+                    return result.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n             }\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            return result != null ? result.toString() : null;\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                if (result != null) {\\n                    return result.toString();\\n                    return scriptResult.toString();\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 5647377887723511075
        },
        {
            "input": "```diff\n--- ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -54,7 +54,6 @@ public class ChartUtil {\n \n                 if (result != null) {\n                     return result.toString();\n-                    return scriptResult.toString();\n                 }\n                 pageObject.elasticSleep(1000);\n             }\n```",
            "output": "{'ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java': 'package io.jenkins.plugins.coverage.util;\\n\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.NoSuchElementException;\\nimport org.openqa.selenium.WebElement;\\n\\nimport com.gargoylesoftware.htmlunit.ScriptResult;\\n\\nimport org.jenkinsci.test.acceptance.po.PageObject;\\n\\n/**\\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\\n */\\n@SuppressWarnings(\"hideutilityclassconstructor\")\\n// TODO: Move this code to ATH so we can reuse it from other plugins\\npublic class ChartUtil {\\n    private static final int MAX_ATTEMPTS = 5;\\n\\n    /**\\n     * Returns a chart\\'s data by its id.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\\n            Object result = pageObject.executeScript(String.format(\\n                    \"delete(window.Array.prototype.toJSON) %n\"\\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\\\"%s\\\\\")).getOption())\",\\n                    elementId));\\n            ScriptResult scriptResult = new ScriptResult(result);\\n            return scriptResult.getJavaScriptResult().toString();\\n        }\\n        return null;\\n    }\\n\\n    /**\\n     * Returns data of only chart with given tool attribute value on page.\\n     *\\n     * @param pageObject\\n     *         which contains only one chart with given tool attribute value\\n     * @param toolAttribute\\n     *         value in div tag of chart\\n     *\\n     * @return data as json\\n     */\\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\\n            final String toolAttribute) {\\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\\n                Object result = pageObject.executeScript(String.format(\\n                        \"delete(window.Array.prototype.toJSON) %n\"\\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\\\"div [tool=\\'%s\\']\\\\\")).getOption())\",\\n                        toolAttribute));\\n\\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\\n                if (scriptResult != null) {\\n                }\\n                pageObject.elasticSleep(1000);\\n            }\\n        }\\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID \\'%s\\'\\'\" + toolAttribute);\\n    }\\n\\n    /**\\n     * Returns if chart is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param elementId\\n     *         of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\\n        try {\\n            WebElement chart = pageObject.find(By.id(elementId));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Returns if a chart with given tool attribute in div tag is displayed.\\n     *\\n     * @param pageObject\\n     *         which contains chart\\n     * @param toolAttribute\\n     *         of div tag of chart\\n     *\\n     * @return if chart is displayed\\n     */\\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\\n        try {\\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool=\\'\" + toolAttribute + \"\\']\"));\\n            return chart != null && chart.isDisplayed();\\n        }\\n        catch (NoSuchElementException exception) {\\n            return false;\\n        }\\n\\n    }\\n\\n}\\n'}",
            "error": "",
            "span_id": 5541495684621069858
        }
    ],
    "compile_maven": [],
    "read_file": [
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 1845719570320411228
        }
    ],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}