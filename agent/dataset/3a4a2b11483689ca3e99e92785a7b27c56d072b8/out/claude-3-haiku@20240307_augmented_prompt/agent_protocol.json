{
    "validate_diffs": [
        {
            "input": "```diff\ndiff --git a/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java b/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\nindex 4d4d4d4..d4d4d4d 100644\n--- a/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ b/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -4,7 +4,7 @@ import hudson.model.Run;\n import hudson.util.ChartUtil.NumberOnlyBuildLabel;\n import hudson.util.DataSetBuilder;\n import hudson.util.Graph;\n-import com.gargoylesoftware.htmlunit.ScriptResult;\n+import org.jenkinsci.test.acceptance.po.ScriptResult;\n import io.jenkins.plugins.coverage.CoverageAction;\n import io.jenkins.plugins.coverage.CoverageResult;\n import io.jenkins.plugins.coverage.targets.CoverageElement;\n@@ -32,11 +32,11 @@ public class ChartUtil {\n     public static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\n         DataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\n \n-        ScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\n+        ScriptResult scriptResult = run.getJavaScriptResult(\"document.getElementById('coverage-chart').getContext('2d')\");\n         if (scriptResult != null) {\n             Object context = scriptResult.getOutput();\n             CoverageAction coverageAction = run.getAction(CoverageAction.class);\n-            if (coverageAction != null && context instanceof CanvasRenderingContext2D) {\n+            if (coverageAction != null && context != null) {\n                 CoverageResult coverageResult = coverageAction.getResult();\n                 for (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\n                     CoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```",
            "output": "Diff Error: UnifiedDiffNoMatch: hunk failed to apply!\n\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java!\nMake extra sure the indentation is correct.\n\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain these 11 exact lines in a row:\n```\n    public static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\n        DataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\n\n        ScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\n        if (scriptResult != null) {\n            Object context = scriptResult.getOutput();\n            CoverageAction coverageAction = run.getAction(CoverageAction.class);\n            if (coverageAction != null && context instanceof CanvasRenderingContext2D) {\n                CoverageResult coverageResult = coverageAction.getResult();\n                for (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\n                    CoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```\n",
            "error": "UnifiedDiffNoMatch: hunk failed to apply!\n\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java!\nMake extra sure the indentation is correct.\n\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain these 11 exact lines in a row:\n```\n    public static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\n        DataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\n\n        ScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\n        if (scriptResult != null) {\n            Object context = scriptResult.getOutput();\n            CoverageAction coverageAction = run.getAction(CoverageAction.class);\n            if (coverageAction != null && context instanceof CanvasRenderingContext2D) {\n                CoverageResult coverageResult = coverageAction.getResult();\n                for (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\n                    CoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```\n",
            "span_id": 4065639966416828076
        },
        {
            "input": "```diff\ndiff --git a/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java b/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\nindex 4d4d4d4..d4d4d4d 100644\n--- a/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ b/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -4,7 +4,7 @@ import hudson.model.Run;\n import hudson.util.ChartUtil.NumberOnlyBuildLabel;\n import hudson.util.DataSetBuilder;\n import hudson.util.Graph;\n-import com.gargoylesoftware.htmlunit.ScriptResult;\n+import org.jenkinsci.test.acceptance.po.ScriptResult;\n import io.jenkins.plugins.coverage.CoverageAction;\n import io.jenkins.plugins.coverage.CoverageResult;\n import io.jenkins.plugins.coverage.targets.CoverageElement;\n@@ -32,11 +32,11 @@ public class ChartUtil {\n     public static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\n         DataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\n \n-        ScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\n+        ScriptResult scriptResult = run.getJavaScriptResult(\"document.getElementById('coverage-chart').getContext('2d')\");\n         if (scriptResult != null) {\n             Object context = scriptResult.getOutput();\n             CoverageAction coverageAction = run.getAction(CoverageAction.class);\n-            if (coverageAction != null && context instanceof CanvasRenderingContext2D) {\n+            if (coverageAction != null && context != null) {\n                 CoverageResult coverageResult = coverageAction.getResult();\n                 for (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\n                     CoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```",
            "output": "Diff Error: UnifiedDiffNoMatch: hunk failed to apply!\n\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java!\nMake extra sure the indentation is correct.\n\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain these 11 exact lines in a row:\n```\n    public static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\n        DataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\n\n        ScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\n        if (scriptResult != null) {\n            Object context = scriptResult.getOutput();\n            CoverageAction coverageAction = run.getAction(CoverageAction.class);\n            if (coverageAction != null && context instanceof CanvasRenderingContext2D) {\n                CoverageResult coverageResult = coverageAction.getResult();\n                for (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\n                    CoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```\n",
            "error": "UnifiedDiffNoMatch: hunk failed to apply!\n\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java!\nMake extra sure the indentation is correct.\n\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain these 11 exact lines in a row:\n```\n    public static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\n        DataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\n\n        ScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\n        if (scriptResult != null) {\n            Object context = scriptResult.getOutput();\n            CoverageAction coverageAction = run.getAction(CoverageAction.class);\n            if (coverageAction != null && context instanceof CanvasRenderingContext2D) {\n                CoverageResult coverageResult = coverageAction.getResult();\n                for (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\n                    CoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```\n",
            "span_id": 8900136601264137986
        }
    ],
    "compile_maven": [
        {
            "input": "```diff\ndiff --git a/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java b/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\nindex 4d4d4d4..d4d4d4d 100644\n--- a/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ b/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -4,7 +4,7 @@ import hudson.model.Run;\n import hudson.util.ChartUtil.NumberOnlyBuildLabel;\n import hudson.util.DataSetBuilder;\n import hudson.util.Graph;\n-import com.gargoylesoftware.htmlunit.ScriptResult;\n+import org.jenkinsci.test.acceptance.po.ScriptResult;\n import io.jenkins.plugins.coverage.CoverageAction;\n import io.jenkins.plugins.coverage.CoverageResult;\n import io.jenkins.plugins.coverage.targets.CoverageElement;\n@@ -32,11 +32,11 @@ public class ChartUtil {\n     public static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\n         DataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\n \n-        ScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\n+        ScriptResult scriptResult = run.getJavaScriptResult(\"document.getElementById('coverage-chart').getContext('2d')\");\n         if (scriptResult != null) {\n             Object context = scriptResult.getOutput();\n             CoverageAction coverageAction = run.getAction(CoverageAction.class);\n-            if (coverageAction != null && context instanceof CanvasRenderingContext2D) {\n+            if (coverageAction != null && context != null) {\n                 CoverageResult coverageResult = coverageAction.getResult();\n                 for (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\n                     CoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```\n\nThe issue is caused by the updated dependency `org.jenkins-ci:acceptance-test-harness` which introduced breaking changes in the `com.gargoylesoftware.htmlunit.ScriptResult` class. To fix this, we need to replace the usage of `com.gargoylesoftware.htmlunit.ScriptResult` with the updated `org.jenkinsci.test.acceptance.po.ScriptResult` class.\n\nThe diff above updates the `ChartUtil.java` file to use the new `ScriptResult` class from the updated dependency.",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java!\nMake extra sure the indentation is correct.\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain these 11 exact lines in a row:\n```\npublic static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\nDataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\nScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\nif (scriptResult != null) {\nObject context = scriptResult.getOutput();\nCoverageAction coverageAction = run.getAction(CoverageAction.class);\nif (coverageAction != null && context instanceof CanvasRenderingContext2D) {\nCoverageResult coverageResult = coverageAction.getResult();\nfor (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\nCoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java!\nMake extra sure the indentation is correct.\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain these 11 exact lines in a row:\n```\npublic static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\nDataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\nScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\nif (scriptResult != null) {\nObject context = scriptResult.getOutput();\nCoverageAction coverageAction = run.getAction(CoverageAction.class);\nif (coverageAction != null && context instanceof CanvasRenderingContext2D) {\nCoverageResult coverageResult = coverageAction.getResult();\nfor (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\nCoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```",
            "span_id": 10285451476280876445
        },
        {
            "input": "```diff\ndiff --git a/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java b/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\nindex 4d4d4d4..d4d4d4d 100644\n--- a/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ b/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -4,7 +4,7 @@ import hudson.model.Run;\n import hudson.util.ChartUtil.NumberOnlyBuildLabel;\n import hudson.util.DataSetBuilder;\n import hudson.util.Graph;\n-import com.gargoylesoftware.htmlunit.ScriptResult;\n+import org.jenkinsci.test.acceptance.po.ScriptResult;\n import io.jenkins.plugins.coverage.CoverageAction;\n import io.jenkins.plugins.coverage.CoverageResult;\n import io.jenkins.plugins.coverage.targets.CoverageElement;\n@@ -32,11 +32,11 @@ public class ChartUtil {\n     public static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\n         DataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\n \n-        ScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\n+        ScriptResult scriptResult = run.getJavaScriptResult(\"document.getElementById('coverage-chart').getContext('2d')\");\n         if (scriptResult != null) {\n             Object context = scriptResult.getOutput();\n             CoverageAction coverageAction = run.getAction(CoverageAction.class);\n-            if (coverageAction != null && context instanceof CanvasRenderingContext2D) {\n+            if (coverageAction != null && context != null) {\n                 CoverageResult coverageResult = coverageAction.getResult();\n                 for (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\n                     CoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java!\nMake extra sure the indentation is correct.\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain these 11 exact lines in a row:\n```\npublic static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\nDataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\nScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\nif (scriptResult != null) {\nObject context = scriptResult.getOutput();\nCoverageAction coverageAction = run.getAction(CoverageAction.class);\nif (coverageAction != null && context instanceof CanvasRenderingContext2D) {\nCoverageResult coverageResult = coverageAction.getResult();\nfor (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\nCoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java!\nMake extra sure the indentation is correct.\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain these 11 exact lines in a row:\n```\npublic static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\nDataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\nScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\nif (scriptResult != null) {\nObject context = scriptResult.getOutput();\nCoverageAction coverageAction = run.getAction(CoverageAction.class);\nif (coverageAction != null && context instanceof CanvasRenderingContext2D) {\nCoverageResult coverageResult = coverageAction.getResult();\nfor (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\nCoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```",
            "span_id": 2013067032929908119
        },
        {
            "input": "```diff\ndiff --git a/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java b/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\nindex 4d4d4d4..d4d4d4d 100644\n--- a/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n+++ b/ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java\n@@ -4,7 +4,7 @@ import hudson.model.Run;\n import hudson.util.ChartUtil.NumberOnlyBuildLabel;\n import hudson.util.DataSetBuilder;\n import hudson.util.Graph;\n-import com.gargoylesoftware.htmlunit.ScriptResult;\n+import org.jenkinsci.test.acceptance.po.ScriptResult;\n import io.jenkins.plugins.coverage.CoverageAction;\n import io.jenkins.plugins.coverage.CoverageResult;\n import io.jenkins.plugins.coverage.targets.CoverageElement;\n@@ -32,11 +32,11 @@ public class ChartUtil {\n     public static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\n         DataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\n \n-        ScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\n+        ScriptResult scriptResult = run.getJavaScriptResult(\"document.getElementById('coverage-chart').getContext('2d')\");\n         if (scriptResult != null) {\n             Object context = scriptResult.getOutput();\n             CoverageAction coverageAction = run.getAction(CoverageAction.class);\n-            if (coverageAction != null && context instanceof CanvasRenderingContext2D) {\n+            if (coverageAction != null && context != null) {\n                 CoverageResult coverageResult = coverageAction.getResult();\n                 for (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\n                     CoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java!\nMake extra sure the indentation is correct.\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain these 11 exact lines in a row:\n```\npublic static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\nDataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\nScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\nif (scriptResult != null) {\nObject context = scriptResult.getOutput();\nCoverageAction coverageAction = run.getAction(CoverageAction.class);\nif (coverageAction != null && context instanceof CanvasRenderingContext2D) {\nCoverageResult coverageResult = coverageAction.getResult();\nfor (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\nCoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java!\nMake extra sure the indentation is correct.\nui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java does not contain these 11 exact lines in a row:\n```\npublic static Graph generateCoverageChart(Run<?, ?> run, String title, CoverageElement element) {\nDataSetBuilder<String, NumberOnlyBuildLabel> dataSetBuilder = new DataSetBuilder<>();\nScriptResult<Object> scriptResult = run.getJavaScript(\"document.getElementById('coverage-chart').getContext('2d')\");\nif (scriptResult != null) {\nObject context = scriptResult.getOutput();\nCoverageAction coverageAction = run.getAction(CoverageAction.class);\nif (coverageAction != null && context instanceof CanvasRenderingContext2D) {\nCoverageResult coverageResult = coverageAction.getResult();\nfor (Run<?, ?> build : coverageResult.getOwner().getBuilds()) {\nCoverageAction buildCoverageAction = build.getAction(CoverageAction.class);\n```",
            "span_id": 17563588713679057550
        }
    ],
    "read_file": [
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 10733875833413277943
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 5689027225483153821
        }
    ],
    "get_directory_tree": [
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util",
            "output": "[\n    {\n        \"name\": \"ChartUtil.java\",\n        \"type\": \"file\"\n    }\n]",
            "error": "",
            "span_id": 11155472323107744899
        }
    ],
    "get_language_server_suggestions": [],
    "reset_repo": [
        {
            "input": "",
            "output": "Successful reset of repository",
            "error": "",
            "span_id": 8687008948043053422
        },
        {
            "input": "",
            "output": "Successful reset of repository",
            "error": "",
            "span_id": 13242784701666954282
        }
    ]
}