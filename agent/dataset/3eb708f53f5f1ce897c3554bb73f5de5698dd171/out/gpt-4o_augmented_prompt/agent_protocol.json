{
    "validate_diffs": [],
    "compile_maven": [
        {
            "input": "```diff\n--- java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Language.java\n+++ java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Language.java\n@@ -1,0 +1 @@\n+import com.google.api.services.translate.v3.model.SupportedLanguage;\n@@ -11,0 +12 @@\n-import com.google.api.services.translate.model.LanguagesResource;\n@@ -21,2 +22,2 @@\n-  static final Function<LanguagesResource, Language> FROM_PB_FUNCTION =\n-      new Function<LanguagesResource, Language>() {\n+  static final Function<SupportedLanguage, Language> FROM_PB_FUNCTION =\n+      new Function<SupportedLanguage, Language>() {\n@@ -25,2 +26,2 @@\n        @Override\n-        public Language apply(LanguagesResource languagePb) {\n+        public Language apply(SupportedLanguage languagePb) {\n@@ -72,2 +73,2 @@\n   }\n \n-  static Language fromPb(LanguagesResource languagePb) {\n+  static Language fromPb(SupportedLanguage languagePb) {\n```\n```diff\n--- java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Detection.java\n+++ java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Detection.java\n@@ -1,0 +1 @@\n+import com.google.api.services.translate.v3.model.DetectedLanguage;\n@@ -11,0 +12 @@\n-import com.google.api.services.translate.model.DetectionsResourceItems;\n@@ -55,2 +56,2 @@\n   }\n \n-  static Detection fromPb(DetectionsResourceItems detectionPb) {\n+  static Detection fromPb(DetectedLanguage detectionPb) {\n```\n```diff\n--- java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java\n+++ java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java\n@@ -1,0 +1 @@\n+import com.google.api.services.translate.v3.model.Translation;\n@@ -11,0 +12 @@\n-import com.google.api.services.translate.model.TranslationsResource;\n@@ -21,2 +22,2 @@\n-  static final Function<TranslationsResource, Translation> FROM_PB_FUNCTION =\n-      new Function<TranslationsResource, Translation>() {\n+  static final Function<Translation, Translation> FROM_PB_FUNCTION =\n+      new Function<Translation, Translation>() {\n@@ -25,2 +26,2 @@\n        @Override\n-        public Translation apply(TranslationsResource translationPb) {\n+        public Translation apply(Translation translationPb) {\n@@ -72,2 +73,2 @@\n   }\n \n-  static Translation fromPb(TranslationsResource translationPb) {\n+  static Translation fromPb(Translation translationPb) {\n```\n```diff\n--- java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/spi/v2/TranslateRpc.java\n+++ java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/spi/v2/TranslateRpc.java\n@@ -1,0 +1 @@\n+import com.google.api.services.translate.v3.model.DetectedLanguage;\n@@ -2,0 +3 @@\n+import com.google.api.services.translate.v3.model.SupportedLanguage;\n@@ -3,0 +5 @@\n+import com.google.api.services.translate.v3.model.Translation;\n@@ -11,0 +14 @@\n-import com.google.api.services.translate.model.DetectionsResourceItems;\n@@ -12,0 +16 @@\n-import com.google.api.services.translate.model.LanguagesResource;\n@@ -13,0 +18 @@\n-import com.google.api.services.translate.model.TranslationsResource;\n@@ -27,3 +32,3 @@\n   List<LanguagesResource> listSupportedLanguages(Map<Option, ?> optionMap);\n \n   List<List<DetectionsResourceItems>> detect(List<String> texts);\n \n   List<TranslationsResource> translate(List<String> texts, Map<Option, ?> optionMap);\n+  List<SupportedLanguage> listSupportedLanguages(Map<Option, ?> optionMap);\n+  List<List<DetectedLanguage>> detect(List<String> texts);\n+  List<Translation> translate(List<String> texts, Map<Option, ?> optionMap);\n```\n```diff\n--- java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/spi/v2/HttpTranslateRpc.java\n+++ java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/spi/v2/HttpTranslateRpc.java\n@@ -1,0 +1 @@\n+import com.google.api.services.translate.v3.Translate;\n@@ -2,0 +3 @@\n+import com.google.api.services.translate.v3.model.DetectedLanguage;\n@@ -3,0 +5 @@\n+import com.google.api.services.translate.v3.model.SupportedLanguage;\n@@ -4,0 +7 @@\n+import com.google.api.services.translate.v3.model.Translation;\n@@ -11,0 +15 @@\n-import com.google.api.services.translate.model.DetectionsResourceItems;\n@@ -12,0 +17 @@\n-import com.google.api.services.translate.model.LanguagesResource;\n@@ -13,0 +19 @@\n-import com.google.api.services.translate.model.TranslationsResource;\n@@ -42,2 +48,2 @@\n        new Translate.Builder(transport, new JacksonFactory(), initializer)\n@@ -50,2 +56,2 @@\n  public List<List<DetectionsResourceItems>> detect(List<String> texts) {\n@@ -52,2 +58,2 @@\n      List<List<DetectionsResourceItems>> detections =\n          translate.detections().list(texts).setKey(options.getApiKey()).execute().getDetections();\n      return detections != null ? detections : ImmutableList.<List<DetectionsResourceItems>>of();\n@@ -56,2 +62,2 @@\n  public List<LanguagesResource> listSupportedLanguages(Map<Option, ?> optionMap) {\n@@ -58,2 +64,2 @@\n      List<LanguagesResource> languages =\n          translate\n              .languages()\n              .list()\n              .setKey(options.getApiKey())\n              .setTarget(\n                  firstNonNull(\n                      Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage()))\n              .execute()\n              .getLanguages();\n      return languages != null ? languages : ImmutableList.<LanguagesResource>of();\n@@ -64,2 +70,2 @@\n  public List<TranslationsResource> translate(List<String> texts, Map<Option, ?> optionMap) {\n@@ -66,2 +72,2 @@\n      String targetLanguage =\n          firstNonNull(Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage());\n      final String sourceLanguage = Option.SOURCE_LANGUAGE.getString(optionMap);\n      List<TranslationsResource> translations =\n          translate\n              .translations()\n              .list(texts, targetLanguage)\n              .setSource(sourceLanguage)\n              .setKey(options.getApiKey())\n              .setModel(Option.MODEL.getString(optionMap))\n              .setFormat(Option.FORMAT.getString(optionMap))\n              .execute()\n              .getTranslations();\n      return Lists.transform(\n          translations != null ? translations : ImmutableList.<TranslationsResource>of(),\n          new Function<TranslationsResource, TranslationsResource>() {\n            @Override\n            public TranslationsResource apply(TranslationsResource translationsResource) {\n              if (translationsResource.getDetectedSourceLanguage() == null) {\n                translationsResource.setDetectedSourceLanguage(sourceLanguage);\n              }\n              return translationsResource;\n            }\n          });\n@@ -70,2 +76,2 @@\n  public List<List<DetectedLanguage>> detect(List<String> texts) {\n      try {\n          List<List<DetectedLanguage>> detections =\n              translate.detections().list(texts).setKey(options.getApiKey()).execute().getDetections();\n          return detections != null ? detections : ImmutableList.<List<DetectedLanguage>>of();\n      } catch (IOException ex) {\n          throw translate(ex);\n      }\n  }\n\n  @Override\n  public List<SupportedLanguage> listSupportedLanguages(Map<Option, ?> optionMap) {\n      try {\n          List<SupportedLanguage> languages =\n              translate\n                  .languages()\n                  .list()\n                  .setKey(options.getApiKey())\n                  .setTarget(\n                      firstNonNull(\n                          Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage()))\n                  .execute()\n                  .getLanguages();\n          return languages != null ? languages : ImmutableList.<SupportedLanguage>of();\n      } catch (IOException ex) {\n          throw translate(ex);\n      }\n  }\n\n  @Override\n  public List<Translation> translate(List<String> texts, Map<Option, ?> optionMap) {\n      try {\n          String targetLanguage =\n              firstNonNull(Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage());\n          final String sourceLanguage = Option.SOURCE_LANGUAGE.getString(optionMap);\n          List<Translation> translations =\n              translate\n                  .translations()\n                  .list(texts, targetLanguage)\n                  .setSource(sourceLanguage)\n                  .setKey(options.getApiKey())\n                  .setModel(Option.MODEL.getString(optionMap))\n                  .setFormat(Option.FORMAT.getString(optionMap))\n                  .execute()\n                  .getTranslations();\n          return Lists.transform(\n              translations != null ? translations : ImmutableList.<Translation>of(),\n              new Function<Translation, Translation>() {\n                @Override\n                public Translation apply(Translation translationsResource) {\n                  if (translationsResource.getDetectedSourceLanguage() == null) {\n                    translationsResource.setDetectedSourceLanguage(sourceLanguage);\n                  }\n                  return translationsResource;\n                }\n              });\n      } catch (IOException ex) {\n          throw translate(ex);\n      }\n  }\n```\n```diff\n--- java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/TranslateImpl.java\n+++ java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/TranslateImpl.java\n@@ -1,0 +1 @@\n+import com.google.api.services.translate.v3.model.DetectedLanguage;\n@@ -2,0 +3 @@\n+import com.google.api.services.translate.v3.model.SupportedLanguage;\n@@ -3,0 +5 @@\n+import com.google.api.services.translate.v3.model.Translation;\n@@ -11,0 +14 @@\n-import com.google.api.services.translate.model.DetectionsResourceItems;\n@@ -12,0 +16 @@\n-import com.google.api.services.translate.model.LanguagesResource;\n@@ -13,0 +18 @@\n-import com.google.api.services.translate.model.TranslationsResource;\n@@ -21,3 +27,3 @@\n  private static final Function<List<DetectionsResourceItems>, Detection>\n      DETECTION_FROM_PB_FUNCTION =\n          new Function<List<DetectionsResourceItems>, Detection>() {\n@@ -25,3 +31,3 @@\n            @Override\n            public Detection apply(List<DetectionsResourceItems> detectionPb) {\n              return Detection.fromPb(detectionPb.get(0));\n@@ -33,3 +39,3 @@\n  public List<Language> listSupportedLanguages(final LanguageListOption... options) {\n      try {\n          return Lists.transform(\n              runWithRetries(\n                  new Callable<List<LanguagesResource>>() {\n                      @Override\n                      public List<LanguagesResource> call() {\n                          return translateRpc.listSupportedLanguages(optionMap(options));\n                      }\n                  },\n                  getOptions().getRetrySettings(),\n                  EXCEPTION_HANDLER,\n                  getOptions().getClock()),\n              Language.FROM_PB_FUNCTION);\n      } catch (RetryHelperException e) {\n          throw TranslateException.translateAndThrow(e);\n      }\n  }\n\n  @Override\n  public List<Detection> detect(final List<String> texts) {\n      try {\n          List<List<DetectionsResourceItems>> detectionsPb =\n              runWithRetries(\n                  new Callable<List<List<DetectionsResourceItems>>>() {\n                      @Override\n                      public List<List<DetectionsResourceItems>> call() {\n                          return translateRpc.detect(texts);\n                      }\n                  },\n                  getOptions().getRetrySettings(),\n                  EXCEPTION_HANDLER,\n                  getOptions().getClock());\n          Iterator<List<DetectionsResourceItems>> detectionIterator = detectionsPb.iterator();\n          Iterator<String> textIterator = texts.iterator();\n          while (detectionIterator.hasNext() && textIterator.hasNext()) {\n              List<DetectionsResourceItems> detectionPb = detectionIterator.next();\n              String text = textIterator.next();\n              checkState(\n                  detectionPb != null && !detectionPb.isEmpty(), \"No detection found for text: %s\", text);\n              checkState(detectionPb.size() == 1, \"Multiple detections found for text: %s\", text);\n          }\n          return Lists.transform(detectionsPb, DETECTION_FROM_PB_FUNCTION);\n      } catch (RetryHelperException e) {\n          throw TranslateException.translateAndThrow(e);\n      }\n  }\n\n  @Override\n  public List<Detection> detect(String... texts) {\n      return detect(Arrays.asList(texts));\n  }\n\n  @Override\n  public Detection detect(String text) {\n      return detect(Collections.singletonList(text)).get(0);\n  }\n\n  @Override\n  public List<Translation> translate(final List<String> texts, final TranslateOption... options) {\n      try {\n          return Lists.transform(\n              runWithRetries(\n                  new Callable<List<TranslationsResource>>() {\n                      @Override\n                      public List<TranslationsResource> call() {\n                          return translateRpc.translate(texts, optionMap(options));\n                      }\n                  },\n                  getOptions().getRetrySettings(),\n                  EXCEPTION_HANDLER,\n                  getOptions().getClock()),\n              Translation.FROM_PB_FUNCTION);\n      } catch (RetryHelperException e) {\n          throw TranslateException.translateAndThrow(e);\n      }\n  }\n\n  @Override\n  public Translation translate(String text, TranslateOption... options) {\n      return translate(Collections.singletonList(text), options).get(0);\n  }\n\n  private Map<TranslateRpc.Option, ?> optionMap(Option... options) {\n      Map<TranslateRpc.Option, Object> optionMap = Maps.newEnumMap(TranslateRpc.Option.class);\n      for (Option option : options) {\n          Object prev = optionMap.put(option.getRpcOption(), option.getValue());\n          checkArgument(prev == null, \"Duplicate option %s\", option);\n      }\n      return optionMap;\n  }\n}\n+  private static final Function<List<DetectedLanguage>, Detection>\n+      DETECTION_FROM_PB_FUNCTION =\n+          new Function<List<DetectedLanguage>, Detection>() {\n+            @Override\n+            public Detection apply(List<DetectedLanguage> detectionPb) {\n+              return Detection.fromPb(detectionPb.get(0));\n+            }\n+          };\n\n+  @Override\n+  public List<Language> listSupportedLanguages(final LanguageListOption... options) {\n+    try {\n+      return Lists.transform(\n+          runWithRetries(\n+              new Callable<List<SupportedLanguage>>() {\n+                @Override\n+                public List<SupportedLanguage> call() {\n+                  return translateRpc.listSupportedLanguages(optionMap(options));\n+                }\n+              },\n+              getOptions().getRetrySettings(),\n+              EXCEPTION_HANDLER,\n+              getOptions().getClock()),\n+          Language.FROM_PB_FUNCTION);\n+    } catch (RetryHelperException e) {\n+      throw TranslateException.translateAndThrow(e);\n+    }\n+  }\n\n+  @Override\n+  public List<Detection> detect(final List<String> texts) {\n+    try {\n+      List<List<DetectedLanguage>> detectionsPb =\n+          runWithRetries(\n+              new Callable<List<List<DetectedLanguage>>>() {\n+                @Override\n+                public List<List<DetectedLanguage>> call() {\n+                  return translateRpc.detect(texts);\n+                }\n+              },\n+              getOptions().getRetrySettings(),\n+              EXCEPTION_HANDLER,\n+              getOptions().getClock());\n+      Iterator<List<DetectedLanguage>> detectionIterator = detectionsPb.iterator();\n+      Iterator<String> textIterator = texts.iterator();\n+      while (detectionIterator.hasNext() && textIterator.hasNext()) {\n+        List<DetectedLanguage> detectionPb = detectionIterator.next();\n+        String text = textIterator.next();\n+        checkState(\n+            detectionPb != null && !detectionPb.isEmpty(), \"No detection found for text: %s\", text);\n+        checkState(detectionPb.size() == 1, \"Multiple detections found for text: %s\", text);\n+      }\n+      return Lists.transform(detectionsPb, DETECTION_FROM_PB_FUNCTION);\n+    } catch (RetryHelperException e) {\n+      throw TranslateException.translateAndThrow(e);\n+    }\n+  }\n\n+  @Override\n+  public List<Detection> detect(String... texts) {\n+    return detect(Arrays.asList(texts));\n+  }\n\n+  @Override\n+  public Detection detect(String text) {\n+    return detect(Collections.singletonList(text)).get(0);\n+  }\n\n+  @Override\n+  public List<Translation> translate(final List<String> texts, final TranslateOption... options) {\n+    try {\n+      return Lists.transform(\n+          runWithRetries(\n+              new Callable<List<Translation>>() {\n+                @Override\n+                public List<Translation> call() {\n+                  return translateRpc.translate(texts, optionMap(options));\n+                }\n+              },\n+              getOptions().getRetrySettings(),\n+              EXCEPTION_HANDLER,\n+              getOptions().getClock()),\n+          Translation.FROM_PB_FUNCTION);\n+    } catch (RetryHelperException e) {\n+      throw TranslateException.translateAndThrow(e);\n+    }\n+  }\n\n+  @Override\n+  public Translation translate(String text, TranslateOption... options) {\n+    return translate(Collections.singletonList(text), options).get(0);\n+  }\n\n+  private Map<TranslateRpc.Option, ?> optionMap(Option... options) {\n+    Map<TranslateRpc.Option, Object> optionMap = Maps.newEnumMap(TranslateRpc.Option.class);\n+    for (Option option : options) {\n+      Object prev = optionMap.put(option.getRpcOption(), option.getValue());\n+      checkArgument(prev == null, \"Duplicate option %s\", option);\n+    }\n+    return optionMap;\n+  }\n+}\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Language.java": "/*\n * Copyright 2016 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.cloud.translate;\n\nimport com.google.common.base.Function;\nimport com.google.common.base.MoreObjects;\nimport java.io.Serializable;\nimport java.util.Objects;\n\n/**\n * Information about a language supported by Google Translation. Objects of this class contain the\n * language's code and the language name.\n *\n * @see <a href=\"https://cloud.google.com/translate/v2/discovering-supported-languages-with-rest\">\n *     Discovering Supported Languages</a>\n * @see <a href=\"https://cloud.google.com/translate/docs/languages\">Supported Languages</a>\n */\npublic class Language implements Serializable {\n\n  private static final long serialVersionUID = 5205240279371907020L;\n  static final Function<SupportedLanguage, Language> FROM_PB_FUNCTION =\n      new Function<SupportedLanguage, Language>() {\n        @Override\n        public Language apply(SupportedLanguage languagePb) {\n          return Language.fromPb(languagePb);\n        }\n      };\n\n  private final String code;\n  private final String name;\n\n  private Language(String code, String name) {\n    this.code = code;\n    this.name = name;\n  }\n\n  /** Returns the code of the language. */\n  public String getCode() {\n    return code;\n  }\n\n  /** Returns the name of the language. */\n  public String getName() {\n    return name;\n  }\n\n  @Override\n  public String toString() {\n    return MoreObjects.toStringHelper(this).add(\"code\", code).add(\"name\", name).toString();\n  }\n\n  @Override\n  public final int hashCode() {\n    return Objects.hash(code, name);\n  }\n\n  @Override\n  public final boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n    if (obj == null || !obj.getClass().equals(Language.class)) {\n      return false;\n    }\n    Language other = (Language) obj;\n    return Objects.equals(code, other.code) && Objects.equals(name, other.name);\n  }\n\n  static Language fromPb(SupportedLanguage languagePb) {\n    return new Language(languagePb.getLanguage(), languagePb.getName());\n  }\n}\nimport com.google.api.services.translate.v3.model.SupportedLanguage;\n",
                    "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Detection.java": "/*\n * Copyright 2016 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.cloud.translate;\n\nimport com.google.common.base.MoreObjects;\nimport java.io.Serializable;\nimport java.util.Objects;\n\n/**\n * Information about a language detection. Objects of this class contain the detected language and\n * possibly a confidence level.\n *\n * @see <a href=\"https://cloud.google.com/translate/v2/detecting-language-with-rest\">Detecting\n *     Language </a>\n */\npublic class Detection implements Serializable {\n\n  private static final long serialVersionUID = 5767106557994900916L;\n\n  private final String language;\n  private final Float confidence;\n\n  private Detection(String language, Float confidence) {\n    this.language = language;\n    this.confidence = confidence;\n  }\n\n  /**\n   * Returns the code of the detected language.\n   *\n   * @see <a href=\"https://cloud.google.com/translate/v2/translate-reference#supported_languages\">\n   *     Supported Languages</a>\n   */\n  public String getLanguage() {\n    return language;\n  }\n\n  /**\n   * Returns an optional confidence value in the interval [0,1]. The closer this value is to 1, the\n   * higher the confidence level for the language detection. Note that this value is not always\n   * available.\n   */\n  public float getConfidence() {\n    return confidence;\n  }\n\n  @Override\n  public String toString() {\n    return MoreObjects.toStringHelper(this)\n        .add(\"language\", language)\n        .add(\"confidence\", confidence)\n        .toString();\n  }\n\n  @Override\n  public final int hashCode() {\n    return Objects.hash(language, confidence);\n  }\n\n  @Override\n  public final boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n    if (obj == null || !obj.getClass().equals(Detection.class)) {\n      return false;\n    }\n    Detection other = (Detection) obj;\n    return Objects.equals(language, other.language) && Objects.equals(confidence, other.confidence);\n  }\n\n  static Detection fromPb(DetectedLanguage detectionPb) {\n    return new Detection(detectionPb.getLanguage(), detectionPb.getConfidence());\n  }\n}\nimport com.google.api.services.translate.v3.model.DetectedLanguage;\n",
                    "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java": "/*\n * Copyright 2016 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.cloud.translate;\n\nimport com.google.common.base.Function;\nimport com.google.common.base.MoreObjects;\nimport java.io.Serializable;\nimport java.util.List;\nimport java.util.Objects;\n\n/**\n * Information about a translation. Objects of this class contain the translated text and the source\n * language's code. The source language's code can be optionally specified by the user or\n * automatically detected by the Google Translation service.\n *\n * @see <a href=\"https://cloud.google.com/translate/v2/translating-text-with-rest\">Translating\n *     Text</a>\n */\npublic class Translation implements Serializable {\n\n  private static final long serialVersionUID = 2556017420486245581L;\n  static final Function<Translation, Translation> FROM_PB_FUNCTION =\n      new Function<Translation, Translation>() {\n        @Override\n        public Translation apply(Translation translationPb) {\n          return Translation.fromPb(translationPb);\n        }\n      };\n\n  private final String translatedText;\n  private final String sourceLanguage;\n  private final String model;\n\n  private Translation(String translatedText, String sourceLanguage, String model) {\n    this.translatedText = translatedText;\n    this.sourceLanguage = sourceLanguage;\n    this.model = model;\n  }\n\n  /** Returns the translated text. */\n  public String getTranslatedText() {\n    return translatedText;\n  }\n\n  /**\n   * Returns the language code of the source text. If no source language was provided this value is\n   * the source language as detected by the Google Translation service.\n   */\n  public String getSourceLanguage() {\n    return sourceLanguage;\n  }\n\n  /**\n   * Returns the translation model used to translate the text. This value is only available if a\n   * result from {@link Translate.TranslateOption#model(String)} was passed to {@link\n   * Translate#translate(List, Translate.TranslateOption...)}.\n   *\n   * <p>Please note that you must be whitelisted to use the {@link\n   * Translate.TranslateOption#model(String)} option, otherwise translation will fail.\n   */\n  public String getModel() {\n    return model;\n  }\n\n  @Override\n  public String toString() {\n    return MoreObjects.toStringHelper(this)\n        .add(\"translatedText\", translatedText)\n        .add(\"sourceLanguage\", sourceLanguage)\n        .toString();\n  }\n\n  @Override\n  public final int hashCode() {\n    return Objects.hash(translatedText, sourceLanguage);\n  }\n\n  @Override\n  public final boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n    if (obj == null || !obj.getClass().equals(Translation.class)) {\n      return false;\n    }\n    Translation other = (Translation) obj;\n    return Objects.equals(translatedText, other.translatedText)\n        && Objects.equals(sourceLanguage, other.sourceLanguage);\n  }\n\n  static Translation fromPb(Translation translationPb) {\n    return new Translation(\n        translationPb.getTranslatedText(),\n        translationPb.getDetectedSourceLanguage(),\n        translationPb.getModel());\n  }\n}\nimport com.google.api.services.translate.v3.model.Translation;\n",
                    "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/spi/v2/TranslateRpc.java": "/*\n * Copyright 2016 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.cloud.translate.spi.v2;\n\nimport com.google.cloud.ServiceRpc;\nimport java.util.List;\nimport java.util.Map;\n\npublic interface TranslateRpc extends ServiceRpc {\n\n  enum Option {\n    SOURCE_LANGUAGE(\"source\"),\n    TARGET_LANGUAGE(\"target\"),\n    MODEL(\"model\"),\n    FORMAT(\"format\");\n\n    private final String value;\n\n    Option(String value) {\n      this.value = value;\n    }\n\n    public String value() {\n      return value;\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    <T> T get(Map<Option, ?> options) {\n      return (T) options.get(this);\n    }\n\n    String getString(Map<Option, ?> options) {\n      return get(options);\n    }\n  }\n\n  /**\n   * Returns a list of the languages supported by Google Translation.\n   *\n   * @param optionMap options to listing language translations\n   */\n  List<LanguagesResource> listSupportedLanguages(Map<Option, ?> optionMap);\n\n  /**\n   * Detects the language of the provided texts.\n   *\n   * @param texts the texts to translate\n   * @return a list of lists of detections, one list of detections for each provided text, in order\n   */\n  List<List<DetectionsResourceItems>> detect(List<String> texts);\n\n  /**\n   * Translates the provided texts.\n   *\n   * @param texts the texts to translate\n   * @param optionMap options to text translation\n   * @return a list of resources containing translation information, in the same order of the\n   *     provided texts\n   */\n  List<TranslationsResource> translate(List<String> texts, Map<Option, ?> optionMap);\n  List<SupportedLanguage> listSupportedLanguages(Map<Option, ?> optionMap);\n  List<List<DetectedLanguage>> detect(List<String> texts);\n  List<Translation> translate(List<String> texts, Map<Option, ?> optionMap);\n}\nimport com.google.api.services.translate.v3.model.DetectedLanguage;\nimport com.google.api.services.translate.v3.model.SupportedLanguage;\nimport com.google.api.services.translate.v3.model.Translation;\n",
                    "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/spi/v2/HttpTranslateRpc.java": "/*\n * Copyright 2016 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.cloud.translate.spi.v2;\n\nimport static com.google.common.base.MoreObjects.firstNonNull;\n\nimport com.google.api.client.http.GenericUrl;\nimport com.google.api.client.http.HttpRequestInitializer;\nimport com.google.api.client.http.HttpTransport;\nimport com.google.api.client.json.jackson2.JacksonFactory;\nimport com.google.api.services.translate.Translate;\nimport com.google.cloud.http.HttpTransportOptions;\nimport com.google.cloud.translate.TranslateException;\nimport com.google.cloud.translate.TranslateOptions;\nimport com.google.common.base.Function;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.Lists;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.Map;\n\npublic class HttpTranslateRpc implements TranslateRpc {\n\n  private final TranslateOptions options;\n  private final Translate translate;\n\n  public HttpTranslateRpc(TranslateOptions options) {\n    HttpTransportOptions transportOptions = (HttpTransportOptions) options.getTransportOptions();\n    HttpTransport transport = transportOptions.getHttpTransportFactory().create();\n    HttpRequestInitializer initializer = transportOptions.getHttpRequestInitializer(options);\n    this.options = options;\n    translate =\n        new Translate.Builder(transport, new JacksonFactory(), initializer)\n            .setRootUrl(options.getHost())\n            .setApplicationName(options.getApplicationName())\n            .build();\n  }\n\n  private static TranslateException translate(IOException exception) {\n    return new TranslateException(exception);\n  }\n\n  private GenericUrl buildTargetUrl(String path) {\n    GenericUrl genericUrl = new GenericUrl(translate.getBaseUrl() + \"v2/\" + path);\n    if (options.getApiKey() != null) {\n      genericUrl.put(\"key\", options.getApiKey());\n    }\n    return genericUrl;\n  }\n\n  @Override\n  public List<List<DetectionsResourceItems>> detect(List<String> texts) {\n    try {\n      List<List<DetectionsResourceItems>> detections =\n          translate.detections().list(texts).setKey(options.getApiKey()).execute().getDetections();\n      return detections != null ? detections : ImmutableList.<List<DetectionsResourceItems>>of();\n    } catch (IOException ex) {\n      throw translate(ex);\n    }\n  }\n\n  @Override\n  public List<LanguagesResource> listSupportedLanguages(Map<Option, ?> optionMap) {\n    try {\n      List<LanguagesResource> languages =\n          translate\n              .languages()\n              .list()\n              .setKey(options.getApiKey())\n              .setTarget(\n                  firstNonNull(\n                      Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage()))\n              .execute()\n              .getLanguages();\n      return languages != null ? languages : ImmutableList.<LanguagesResource>of();\n    } catch (IOException ex) {\n      throw translate(ex);\n    }\n  }\n\n  @Override\n  public List<TranslationsResource> translate(List<String> texts, Map<Option, ?> optionMap) {\n    try {\n      String targetLanguage =\n          firstNonNull(Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage());\n      final String sourceLanguage = Option.SOURCE_LANGUAGE.getString(optionMap);\n      List<TranslationsResource> translations =\n          translate\n              .translations()\n              .list(texts, targetLanguage)\n              .setSource(sourceLanguage)\n              .setKey(options.getApiKey())\n              .setModel(Option.MODEL.getString(optionMap))\n              .setFormat(Option.FORMAT.getString(optionMap))\n              .execute()\n              .getTranslations();\n      return Lists.transform(\n          translations != null ? translations : ImmutableList.<TranslationsResource>of(),\n          new Function<TranslationsResource, TranslationsResource>() {\n            @Override\n            public TranslationsResource apply(TranslationsResource translationsResource) {\n              if (translationsResource.getDetectedSourceLanguage() == null) {\n                translationsResource.setDetectedSourceLanguage(sourceLanguage);\n              }\n              return translationsResource;\n            }\n          });\n    } catch (IOException ex) {\n      throw translate(ex);\n    }\n  }\n}\nimport com.google.api.services.translate.v3.Translate;\nimport com.google.api.services.translate.v3.model.DetectedLanguage;\nimport com.google.api.services.translate.v3.model.SupportedLanguage;\nimport com.google.api.services.translate.v3.model.Translation;\n",
                    "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/TranslateImpl.java": "/*\n * Copyright 2016 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.cloud.translate;\n\nimport static com.google.cloud.RetryHelper.runWithRetries;\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Preconditions.checkState;\n\nimport com.google.cloud.BaseService;\nimport com.google.cloud.RetryHelper.RetryHelperException;\nimport com.google.cloud.translate.spi.v2.TranslateRpc;\nimport com.google.common.base.Function;\nimport com.google.common.collect.Lists;\nimport com.google.common.collect.Maps;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.concurrent.Callable;\n\nfinal class TranslateImpl extends BaseService<TranslateOptions> implements Translate {\n\n  private final TranslateRpc translateRpc;\n\n  private static final Function<List<DetectionsResourceItems>, Detection>\n      DETECTION_FROM_PB_FUNCTION =\n          new Function<List<DetectionsResourceItems>, Detection>() {\n            @Override\n            public Detection apply(List<DetectionsResourceItems> detectionPb) {\n              return Detection.fromPb(detectionPb.get(0));\n            }\n          };\n\n  TranslateImpl(TranslateOptions options) {\n    super(options);\n    translateRpc = options.getTranslateRpcV2();\n  }\n\n  @Override\n  public List<Language> listSupportedLanguages(final LanguageListOption... options) {\n    try {\n      return Lists.transform(\n          runWithRetries(\n              new Callable<List<LanguagesResource>>() {\n                @Override\n                public List<LanguagesResource> call() {\n                  return translateRpc.listSupportedLanguages(optionMap(options));\n                }\n              },\n              getOptions().getRetrySettings(),\n              EXCEPTION_HANDLER,\n              getOptions().getClock()),\n          Language.FROM_PB_FUNCTION);\n    } catch (RetryHelperException e) {\n      throw TranslateException.translateAndThrow(e);\n    }\n  }\n\n  @Override\n  public List<Detection> detect(final List<String> texts) {\n    try {\n      List<List<DetectionsResourceItems>> detectionsPb =\n          runWithRetries(\n              new Callable<List<List<DetectionsResourceItems>>>() {\n                @Override\n                public List<List<DetectionsResourceItems>> call() {\n                  return translateRpc.detect(texts);\n                }\n              },\n              getOptions().getRetrySettings(),\n              EXCEPTION_HANDLER,\n              getOptions().getClock());\n      Iterator<List<DetectionsResourceItems>> detectionIterator = detectionsPb.iterator();\n      Iterator<String> textIterator = texts.iterator();\n      while (detectionIterator.hasNext() && textIterator.hasNext()) {\n        List<DetectionsResourceItems> detectionPb = detectionIterator.next();\n        String text = textIterator.next();\n        checkState(\n            detectionPb != null && !detectionPb.isEmpty(), \"No detection found for text: %s\", text);\n        checkState(detectionPb.size() == 1, \"Multiple detections found for text: %s\", text);\n      }\n      return Lists.transform(detectionsPb, DETECTION_FROM_PB_FUNCTION);\n    } catch (RetryHelperException e) {\n      throw TranslateException.translateAndThrow(e);\n    }\n  }\n\n  @Override\n  public List<Detection> detect(String... texts) {\n    return detect(Arrays.asList(texts));\n  }\n\n  @Override\n  public Detection detect(String text) {\n    return detect(Collections.singletonList(text)).get(0);\n  }\n\n  @Override\n  public List<Translation> translate(final List<String> texts, final TranslateOption... options) {\n    try {\n      return Lists.transform(\n          runWithRetries(\n              new Callable<List<TranslationsResource>>() {\n                @Override\n                public List<TranslationsResource> call() {\n                  return translateRpc.translate(texts, optionMap(options));\n                }\n              },\n              getOptions().getRetrySettings(),\n              EXCEPTION_HANDLER,\n              getOptions().getClock()),\n          Translation.FROM_PB_FUNCTION);\n    } catch (RetryHelperException e) {\n      throw TranslateException.translateAndThrow(e);\n    }\n  }\n\n  @Override\n  public Translation translate(String text, TranslateOption... options) {\n    return translate(Collections.singletonList(text), options).get(0);\n  }\n\n  private Map<TranslateRpc.Option, ?> optionMap(Option... options) {\n    Map<TranslateRpc.Option, Object> optionMap = Maps.newEnumMap(TranslateRpc.Option.class);\n    for (Option option : options) {\n      Object prev = optionMap.put(option.getRpcOption(), option.getValue());\n      checkArgument(prev == null, \"Duplicate option %s\", option);\n    }\n    return optionMap;\n  }\nprivate static final Function<List<DetectedLanguage>, Detection>\n      DETECTION_FROM_PB_FUNCTION =\nnew Function<List<DetectedLanguage>, Detection>() {\n@Override\npublic Detection apply(List<DetectedLanguage> detectionPb) {\n              return Detection.fromPb(detectionPb.get(0));\n}\n};\n\n@Override\n  public List<Language> listSupportedLanguages(final LanguageListOption... options) {\ntry {\n      return Lists.transform(\n          runWithRetries(\nnew Callable<List<SupportedLanguage>>() {\n@Override\npublic List<SupportedLanguage> call() {\n                  return translateRpc.listSupportedLanguages(optionMap(options));\n}\n},\n              getOptions().getRetrySettings(),\n              EXCEPTION_HANDLER,\n              getOptions().getClock()),\n          Language.FROM_PB_FUNCTION);\n    } catch (RetryHelperException e) {\n      throw TranslateException.translateAndThrow(e);\n}\n}\n\n@Override\n  public List<Detection> detect(final List<String> texts) {\ntry {\nList<List<DetectedLanguage>> detectionsPb =\n          runWithRetries(\nnew Callable<List<List<DetectedLanguage>>>() {\n@Override\npublic List<List<DetectedLanguage>> call() {\n                  return translateRpc.detect(texts);\n}\n},\n              getOptions().getRetrySettings(),\n              EXCEPTION_HANDLER,\n              getOptions().getClock());\nIterator<List<DetectedLanguage>> detectionIterator = detectionsPb.iterator();\n      Iterator<String> textIterator = texts.iterator();\n      while (detectionIterator.hasNext() && textIterator.hasNext()) {\nList<DetectedLanguage> detectionPb = detectionIterator.next();\n        String text = textIterator.next();\n        checkState(\n            detectionPb != null && !detectionPb.isEmpty(), \"No detection found for text: %s\", text);\n        checkState(detectionPb.size() == 1, \"Multiple detections found for text: %s\", text);\n}\n      return Lists.transform(detectionsPb, DETECTION_FROM_PB_FUNCTION);\n    } catch (RetryHelperException e) {\n      throw TranslateException.translateAndThrow(e);\n}\n}\n\n@Override\n  public List<Detection> detect(String... texts) {\n    return detect(Arrays.asList(texts));\n}\n\n@Override\n  public Detection detect(String text) {\n    return detect(Collections.singletonList(text)).get(0);\n}\n\n@Override\n  public List<Translation> translate(final List<String> texts, final TranslateOption... options) {\ntry {\n      return Lists.transform(\n          runWithRetries(\nnew Callable<List<Translation>>() {\n@Override\npublic List<Translation> call() {\n                  return translateRpc.translate(texts, optionMap(options));\n}\n},\n              getOptions().getRetrySettings(),\n              EXCEPTION_HANDLER,\n              getOptions().getClock()),\n          Translation.FROM_PB_FUNCTION);\n    } catch (RetryHelperException e) {\n      throw TranslateException.translateAndThrow(e);\n}\n}\n\n@Override\n  public Translation translate(String text, TranslateOption... options) {\n    return translate(Collections.singletonList(text), options).get(0);\n}\n\n  private Map<TranslateRpc.Option, ?> optionMap(Option... options) {\n    Map<TranslateRpc.Option, Object> optionMap = Maps.newEnumMap(TranslateRpc.Option.class);\n    for (Option option : options) {\n      Object prev = optionMap.put(option.getRpcOption(), option.getValue());\n      checkArgument(prev == null, \"Duplicate option %s\", option);\n}\n    return optionMap;\n}\n}\n}\nimport com.google.api.services.translate.v3.model.DetectedLanguage;\nimport com.google.api.services.translate.v3.model.SupportedLanguage;\nimport com.google.api.services.translate.v3.model.Translation;"
                },
                "compile_error_details": {
                    "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Detection.java": {
                        "90": {
                            "lines": [
                                {
                                    "line_no": 89,
                                    "content": "}"
                                },
                                {
                                    "line_no": 90,
                                    "content": "import com.google.api.services.translate.v3.model.DetectedLanguage;"
                                },
                                {
                                    "line_no": 91,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[90,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/spi/v2/TranslateRpc.java": {
                        "79": {
                            "lines": [
                                {
                                    "line_no": 78,
                                    "content": "}"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import com.google.api.services.translate.v3.model.DetectedLanguage;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import com.google.api.services.translate.v3.model.SupportedLanguage;"
                                }
                            ],
                            "error_texts": [
                                "[79,1] class, interface, or enum expected\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "import com.google.api.services.translate.v3.model.DetectedLanguage;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import com.google.api.services.translate.v3.model.SupportedLanguage;"
                                },
                                {
                                    "line_no": 81,
                                    "content": "import com.google.api.services.translate.v3.model.Translation;"
                                }
                            ],
                            "error_texts": [
                                "[80,1] class, interface, or enum expected\n"
                            ]
                        },
                        "81": {
                            "lines": [
                                {
                                    "line_no": 80,
                                    "content": "import com.google.api.services.translate.v3.model.SupportedLanguage;"
                                },
                                {
                                    "line_no": 81,
                                    "content": "import com.google.api.services.translate.v3.model.Translation;"
                                },
                                {
                                    "line_no": 82,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[81,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/TranslateImpl.java": {
                        "248": {
                            "lines": [
                                {
                                    "line_no": 247,
                                    "content": "}"
                                },
                                {
                                    "line_no": 248,
                                    "content": "}"
                                },
                                {
                                    "line_no": 249,
                                    "content": "import com.google.api.services.translate.v3.model.DetectedLanguage;"
                                }
                            ],
                            "error_texts": [
                                "[248,1] class, interface, or enum expected\n"
                            ]
                        },
                        "250": {
                            "lines": [
                                {
                                    "line_no": 249,
                                    "content": "import com.google.api.services.translate.v3.model.DetectedLanguage;"
                                },
                                {
                                    "line_no": 250,
                                    "content": "import com.google.api.services.translate.v3.model.SupportedLanguage;"
                                },
                                {
                                    "line_no": 251,
                                    "content": "import com.google.api.services.translate.v3.model.Translation;"
                                }
                            ],
                            "error_texts": [
                                "[250,1] class, interface, or enum expected\n"
                            ]
                        },
                        "251": {
                            "lines": [
                                {
                                    "line_no": 250,
                                    "content": "import com.google.api.services.translate.v3.model.SupportedLanguage;"
                                },
                                {
                                    "line_no": 251,
                                    "content": "import com.google.api.services.translate.v3.model.Translation;"
                                }
                            ],
                            "error_texts": [
                                "[251,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/spi/v2/HttpTranslateRpc.java": {
                        "127": {
                            "lines": [
                                {
                                    "line_no": 126,
                                    "content": "}"
                                },
                                {
                                    "line_no": 127,
                                    "content": "import com.google.api.services.translate.v3.Translate;"
                                },
                                {
                                    "line_no": 128,
                                    "content": "import com.google.api.services.translate.v3.model.DetectedLanguage;"
                                }
                            ],
                            "error_texts": [
                                "[127,1] class, interface, or enum expected\n"
                            ]
                        },
                        "128": {
                            "lines": [
                                {
                                    "line_no": 127,
                                    "content": "import com.google.api.services.translate.v3.Translate;"
                                },
                                {
                                    "line_no": 128,
                                    "content": "import com.google.api.services.translate.v3.model.DetectedLanguage;"
                                },
                                {
                                    "line_no": 129,
                                    "content": "import com.google.api.services.translate.v3.model.SupportedLanguage;"
                                }
                            ],
                            "error_texts": [
                                "[128,1] class, interface, or enum expected\n"
                            ]
                        },
                        "129": {
                            "lines": [
                                {
                                    "line_no": 128,
                                    "content": "import com.google.api.services.translate.v3.model.DetectedLanguage;"
                                },
                                {
                                    "line_no": 129,
                                    "content": "import com.google.api.services.translate.v3.model.SupportedLanguage;"
                                },
                                {
                                    "line_no": 130,
                                    "content": "import com.google.api.services.translate.v3.model.Translation;"
                                }
                            ],
                            "error_texts": [
                                "[129,1] class, interface, or enum expected\n"
                            ]
                        },
                        "130": {
                            "lines": [
                                {
                                    "line_no": 129,
                                    "content": "import com.google.api.services.translate.v3.model.SupportedLanguage;"
                                },
                                {
                                    "line_no": 130,
                                    "content": "import com.google.api.services.translate.v3.model.Translation;"
                                },
                                {
                                    "line_no": 131,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[130,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java": {
                        "112": {
                            "lines": [
                                {
                                    "line_no": 111,
                                    "content": "}"
                                },
                                {
                                    "line_no": 112,
                                    "content": "import com.google.api.services.translate.v3.model.Translation;"
                                },
                                {
                                    "line_no": 113,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[112,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Language.java": {
                        "87": {
                            "lines": [
                                {
                                    "line_no": 86,
                                    "content": "}"
                                },
                                {
                                    "line_no": 87,
                                    "content": "import com.google.api.services.translate.v3.model.SupportedLanguage;"
                                },
                                {
                                    "line_no": 88,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[87,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 1537565912757756591
        }
    ],
    "read_file": [
        {
            "input": "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Language.java",
            "output": "/*\n * Copyright 2016 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.cloud.translate;\n\nimport com.google.api.services.translate.model.LanguagesResource;\nimport com.google.common.base.Function;\nimport com.google.common.base.MoreObjects;\nimport java.io.Serializable;\nimport java.util.Objects;\n\n/**\n * Information about a language supported by Google Translation. Objects of this class contain the\n * language's code and the language name.\n *\n * @see <a href=\"https://cloud.google.com/translate/v2/discovering-supported-languages-with-rest\">\n *     Discovering Supported Languages</a>\n * @see <a href=\"https://cloud.google.com/translate/docs/languages\">Supported Languages</a>\n */\npublic class Language implements Serializable {\n\n  private static final long serialVersionUID = 5205240279371907020L;\n  static final Function<LanguagesResource, Language> FROM_PB_FUNCTION =\n      new Function<LanguagesResource, Language>() {\n        @Override\n        public Language apply(LanguagesResource languagePb) {\n          return Language.fromPb(languagePb);\n        }\n      };\n\n  private final String code;\n  private final String name;\n\n  private Language(String code, String name) {\n    this.code = code;\n    this.name = name;\n  }\n\n  /** Returns the code of the language. */\n  public String getCode() {\n    return code;\n  }\n\n  /** Returns the name of the language. */\n  public String getName() {\n    return name;\n  }\n\n  @Override\n  public String toString() {\n    return MoreObjects.toStringHelper(this).add(\"code\", code).add(\"name\", name).toString();\n  }\n\n  @Override\n  public final int hashCode() {\n    return Objects.hash(code, name);\n  }\n\n  @Override\n  public final boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n    if (obj == null || !obj.getClass().equals(Language.class)) {\n      return false;\n    }\n    Language other = (Language) obj;\n    return Objects.equals(code, other.code) && Objects.equals(name, other.name);\n  }\n\n  static Language fromPb(LanguagesResource languagePb) {\n    return new Language(languagePb.getLanguage(), languagePb.getName());\n  }\n}\n",
            "error": "",
            "span_id": 16390229194780938775
        },
        {
            "input": "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Detection.java",
            "output": "/*\n * Copyright 2016 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.cloud.translate;\n\nimport com.google.api.services.translate.model.DetectionsResourceItems;\nimport com.google.common.base.MoreObjects;\nimport java.io.Serializable;\nimport java.util.Objects;\n\n/**\n * Information about a language detection. Objects of this class contain the detected language and\n * possibly a confidence level.\n *\n * @see <a href=\"https://cloud.google.com/translate/v2/detecting-language-with-rest\">Detecting\n *     Language </a>\n */\npublic class Detection implements Serializable {\n\n  private static final long serialVersionUID = 5767106557994900916L;\n\n  private final String language;\n  private final Float confidence;\n\n  private Detection(String language, Float confidence) {\n    this.language = language;\n    this.confidence = confidence;\n  }\n\n  /**\n   * Returns the code of the detected language.\n   *\n   * @see <a href=\"https://cloud.google.com/translate/v2/translate-reference#supported_languages\">\n   *     Supported Languages</a>\n   */\n  public String getLanguage() {\n    return language;\n  }\n\n  /**\n   * Returns an optional confidence value in the interval [0,1]. The closer this value is to 1, the\n   * higher the confidence level for the language detection. Note that this value is not always\n   * available.\n   */\n  public float getConfidence() {\n    return confidence;\n  }\n\n  @Override\n  public String toString() {\n    return MoreObjects.toStringHelper(this)\n        .add(\"language\", language)\n        .add(\"confidence\", confidence)\n        .toString();\n  }\n\n  @Override\n  public final int hashCode() {\n    return Objects.hash(language, confidence);\n  }\n\n  @Override\n  public final boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n    if (obj == null || !obj.getClass().equals(Detection.class)) {\n      return false;\n    }\n    Detection other = (Detection) obj;\n    return Objects.equals(language, other.language) && Objects.equals(confidence, other.confidence);\n  }\n\n  static Detection fromPb(DetectionsResourceItems detectionPb) {\n    return new Detection(detectionPb.getLanguage(), detectionPb.getConfidence());\n  }\n}\n",
            "error": "",
            "span_id": 9390203095822326598
        },
        {
            "input": "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/spi/v2/HttpTranslateRpc.java",
            "output": "/*\n * Copyright 2016 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.cloud.translate.spi.v2;\n\nimport static com.google.common.base.MoreObjects.firstNonNull;\n\nimport com.google.api.client.http.GenericUrl;\nimport com.google.api.client.http.HttpRequestInitializer;\nimport com.google.api.client.http.HttpTransport;\nimport com.google.api.client.json.jackson2.JacksonFactory;\nimport com.google.api.services.translate.Translate;\nimport com.google.api.services.translate.model.DetectionsResourceItems;\nimport com.google.api.services.translate.model.LanguagesResource;\nimport com.google.api.services.translate.model.TranslationsResource;\nimport com.google.cloud.http.HttpTransportOptions;\nimport com.google.cloud.translate.TranslateException;\nimport com.google.cloud.translate.TranslateOptions;\nimport com.google.common.base.Function;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.Lists;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.Map;\n\npublic class HttpTranslateRpc implements TranslateRpc {\n\n  private final TranslateOptions options;\n  private final Translate translate;\n\n  public HttpTranslateRpc(TranslateOptions options) {\n    HttpTransportOptions transportOptions = (HttpTransportOptions) options.getTransportOptions();\n    HttpTransport transport = transportOptions.getHttpTransportFactory().create();\n    HttpRequestInitializer initializer = transportOptions.getHttpRequestInitializer(options);\n    this.options = options;\n    translate =\n        new Translate.Builder(transport, new JacksonFactory(), initializer)\n            .setRootUrl(options.getHost())\n            .setApplicationName(options.getApplicationName())\n            .build();\n  }\n\n  private static TranslateException translate(IOException exception) {\n    return new TranslateException(exception);\n  }\n\n  private GenericUrl buildTargetUrl(String path) {\n    GenericUrl genericUrl = new GenericUrl(translate.getBaseUrl() + \"v2/\" + path);\n    if (options.getApiKey() != null) {\n      genericUrl.put(\"key\", options.getApiKey());\n    }\n    return genericUrl;\n  }\n\n  @Override\n  public List<List<DetectionsResourceItems>> detect(List<String> texts) {\n    try {\n      List<List<DetectionsResourceItems>> detections =\n          translate.detections().list(texts).setKey(options.getApiKey()).execute().getDetections();\n      return detections != null ? detections : ImmutableList.<List<DetectionsResourceItems>>of();\n    } catch (IOException ex) {\n      throw translate(ex);\n    }\n  }\n\n  @Override\n  public List<LanguagesResource> listSupportedLanguages(Map<Option, ?> optionMap) {\n    try {\n      List<LanguagesResource> languages =\n          translate\n              .languages()\n              .list()\n              .setKey(options.getApiKey())\n              .setTarget(\n                  firstNonNull(\n                      Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage()))\n              .execute()\n              .getLanguages();\n      return languages != null ? languages : ImmutableList.<LanguagesResource>of();\n    } catch (IOException ex) {\n      throw translate(ex);\n    }\n  }\n\n  @Override\n  public List<TranslationsResource> translate(List<String> texts, Map<Option, ?> optionMap) {\n    try {\n      String targetLanguage =\n          firstNonNull(Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage());\n      final String sourceLanguage = Option.SOURCE_LANGUAGE.getString(optionMap);\n      List<TranslationsResource> translations =\n          translate\n              .translations()\n              .list(texts, targetLanguage)\n              .setSource(sourceLanguage)\n              .setKey(options.getApiKey())\n              .setModel(Option.MODEL.getString(optionMap))\n              .setFormat(Option.FORMAT.getString(optionMap))\n              .execute()\n              .getTranslations();\n      return Lists.transform(\n          translations != null ? translations : ImmutableList.<TranslationsResource>of(),\n          new Function<TranslationsResource, TranslationsResource>() {\n            @Override\n            public TranslationsResource apply(TranslationsResource translationsResource) {\n              if (translationsResource.getDetectedSourceLanguage() == null) {\n                translationsResource.setDetectedSourceLanguage(sourceLanguage);\n              }\n              return translationsResource;\n            }\n          });\n    } catch (IOException ex) {\n      throw translate(ex);\n    }\n  }\n}\n",
            "error": "",
            "span_id": 11341621929451105703
        },
        {
            "input": "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/spi/v2/TranslateRpc.java",
            "output": "/*\n * Copyright 2016 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.cloud.translate.spi.v2;\n\nimport com.google.api.services.translate.model.DetectionsResourceItems;\nimport com.google.api.services.translate.model.LanguagesResource;\nimport com.google.api.services.translate.model.TranslationsResource;\nimport com.google.cloud.ServiceRpc;\nimport java.util.List;\nimport java.util.Map;\n\npublic interface TranslateRpc extends ServiceRpc {\n\n  enum Option {\n    SOURCE_LANGUAGE(\"source\"),\n    TARGET_LANGUAGE(\"target\"),\n    MODEL(\"model\"),\n    FORMAT(\"format\");\n\n    private final String value;\n\n    Option(String value) {\n      this.value = value;\n    }\n\n    public String value() {\n      return value;\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    <T> T get(Map<Option, ?> options) {\n      return (T) options.get(this);\n    }\n\n    String getString(Map<Option, ?> options) {\n      return get(options);\n    }\n  }\n\n  /**\n   * Returns a list of the languages supported by Google Translation.\n   *\n   * @param optionMap options to listing language translations\n   */\n  List<LanguagesResource> listSupportedLanguages(Map<Option, ?> optionMap);\n\n  /**\n   * Detects the language of the provided texts.\n   *\n   * @param texts the texts to translate\n   * @return a list of lists of detections, one list of detections for each provided text, in order\n   */\n  List<List<DetectionsResourceItems>> detect(List<String> texts);\n\n  /**\n   * Translates the provided texts.\n   *\n   * @param texts the texts to translate\n   * @param optionMap options to text translation\n   * @return a list of resources containing translation information, in the same order of the\n   *     provided texts\n   */\n  List<TranslationsResource> translate(List<String> texts, Map<Option, ?> optionMap);\n}\n",
            "error": "",
            "span_id": 14912851605807684486
        },
        {
            "input": "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java",
            "output": "/*\n * Copyright 2016 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.cloud.translate;\n\nimport com.google.api.services.translate.model.TranslationsResource;\nimport com.google.common.base.Function;\nimport com.google.common.base.MoreObjects;\nimport java.io.Serializable;\nimport java.util.List;\nimport java.util.Objects;\n\n/**\n * Information about a translation. Objects of this class contain the translated text and the source\n * language's code. The source language's code can be optionally specified by the user or\n * automatically detected by the Google Translation service.\n *\n * @see <a href=\"https://cloud.google.com/translate/v2/translating-text-with-rest\">Translating\n *     Text</a>\n */\npublic class Translation implements Serializable {\n\n  private static final long serialVersionUID = 2556017420486245581L;\n  static final Function<TranslationsResource, Translation> FROM_PB_FUNCTION =\n      new Function<TranslationsResource, Translation>() {\n        @Override\n        public Translation apply(TranslationsResource translationPb) {\n          return Translation.fromPb(translationPb);\n        }\n      };\n\n  private final String translatedText;\n  private final String sourceLanguage;\n  private final String model;\n\n  private Translation(String translatedText, String sourceLanguage, String model) {\n    this.translatedText = translatedText;\n    this.sourceLanguage = sourceLanguage;\n    this.model = model;\n  }\n\n  /** Returns the translated text. */\n  public String getTranslatedText() {\n    return translatedText;\n  }\n\n  /**\n   * Returns the language code of the source text. If no source language was provided this value is\n   * the source language as detected by the Google Translation service.\n   */\n  public String getSourceLanguage() {\n    return sourceLanguage;\n  }\n\n  /**\n   * Returns the translation model used to translate the text. This value is only available if a\n   * result from {@link Translate.TranslateOption#model(String)} was passed to {@link\n   * Translate#translate(List, Translate.TranslateOption...)}.\n   *\n   * <p>Please note that you must be whitelisted to use the {@link\n   * Translate.TranslateOption#model(String)} option, otherwise translation will fail.\n   */\n  public String getModel() {\n    return model;\n  }\n\n  @Override\n  public String toString() {\n    return MoreObjects.toStringHelper(this)\n        .add(\"translatedText\", translatedText)\n        .add(\"sourceLanguage\", sourceLanguage)\n        .toString();\n  }\n\n  @Override\n  public final int hashCode() {\n    return Objects.hash(translatedText, sourceLanguage);\n  }\n\n  @Override\n  public final boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n    if (obj == null || !obj.getClass().equals(Translation.class)) {\n      return false;\n    }\n    Translation other = (Translation) obj;\n    return Objects.equals(translatedText, other.translatedText)\n        && Objects.equals(sourceLanguage, other.sourceLanguage);\n  }\n\n  static Translation fromPb(TranslationsResource translationPb) {\n    return new Translation(\n        translationPb.getTranslatedText(),\n        translationPb.getDetectedSourceLanguage(),\n        translationPb.getModel());\n  }\n}\n",
            "error": "",
            "span_id": 12346001810536833022
        },
        {
            "input": "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/TranslateImpl.java",
            "output": "/*\n * Copyright 2016 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.cloud.translate;\n\nimport static com.google.cloud.RetryHelper.runWithRetries;\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Preconditions.checkState;\n\nimport com.google.api.services.translate.model.DetectionsResourceItems;\nimport com.google.api.services.translate.model.LanguagesResource;\nimport com.google.api.services.translate.model.TranslationsResource;\nimport com.google.cloud.BaseService;\nimport com.google.cloud.RetryHelper.RetryHelperException;\nimport com.google.cloud.translate.spi.v2.TranslateRpc;\nimport com.google.common.base.Function;\nimport com.google.common.collect.Lists;\nimport com.google.common.collect.Maps;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.concurrent.Callable;\n\nfinal class TranslateImpl extends BaseService<TranslateOptions> implements Translate {\n\n  private final TranslateRpc translateRpc;\n\n  private static final Function<List<DetectionsResourceItems>, Detection>\n      DETECTION_FROM_PB_FUNCTION =\n          new Function<List<DetectionsResourceItems>, Detection>() {\n            @Override\n            public Detection apply(List<DetectionsResourceItems> detectionPb) {\n              return Detection.fromPb(detectionPb.get(0));\n            }\n          };\n\n  TranslateImpl(TranslateOptions options) {\n    super(options);\n    translateRpc = options.getTranslateRpcV2();\n  }\n\n  @Override\n  public List<Language> listSupportedLanguages(final LanguageListOption... options) {\n    try {\n      return Lists.transform(\n          runWithRetries(\n              new Callable<List<LanguagesResource>>() {\n                @Override\n                public List<LanguagesResource> call() {\n                  return translateRpc.listSupportedLanguages(optionMap(options));\n                }\n              },\n              getOptions().getRetrySettings(),\n              EXCEPTION_HANDLER,\n              getOptions().getClock()),\n          Language.FROM_PB_FUNCTION);\n    } catch (RetryHelperException e) {\n      throw TranslateException.translateAndThrow(e);\n    }\n  }\n\n  @Override\n  public List<Detection> detect(final List<String> texts) {\n    try {\n      List<List<DetectionsResourceItems>> detectionsPb =\n          runWithRetries(\n              new Callable<List<List<DetectionsResourceItems>>>() {\n                @Override\n                public List<List<DetectionsResourceItems>> call() {\n                  return translateRpc.detect(texts);\n                }\n              },\n              getOptions().getRetrySettings(),\n              EXCEPTION_HANDLER,\n              getOptions().getClock());\n      Iterator<List<DetectionsResourceItems>> detectionIterator = detectionsPb.iterator();\n      Iterator<String> textIterator = texts.iterator();\n      while (detectionIterator.hasNext() && textIterator.hasNext()) {\n        List<DetectionsResourceItems> detectionPb = detectionIterator.next();\n        String text = textIterator.next();\n        checkState(\n            detectionPb != null && !detectionPb.isEmpty(), \"No detection found for text: %s\", text);\n        checkState(detectionPb.size() == 1, \"Multiple detections found for text: %s\", text);\n      }\n      return Lists.transform(detectionsPb, DETECTION_FROM_PB_FUNCTION);\n    } catch (RetryHelperException e) {\n      throw TranslateException.translateAndThrow(e);\n    }\n  }\n\n  @Override\n  public List<Detection> detect(String... texts) {\n    return detect(Arrays.asList(texts));\n  }\n\n  @Override\n  public Detection detect(String text) {\n    return detect(Collections.singletonList(text)).get(0);\n  }\n\n  @Override\n  public List<Translation> translate(final List<String> texts, final TranslateOption... options) {\n    try {\n      return Lists.transform(\n          runWithRetries(\n              new Callable<List<TranslationsResource>>() {\n                @Override\n                public List<TranslationsResource> call() {\n                  return translateRpc.translate(texts, optionMap(options));\n                }\n              },\n              getOptions().getRetrySettings(),\n              EXCEPTION_HANDLER,\n              getOptions().getClock()),\n          Translation.FROM_PB_FUNCTION);\n    } catch (RetryHelperException e) {\n      throw TranslateException.translateAndThrow(e);\n    }\n  }\n\n  @Override\n  public Translation translate(String text, TranslateOption... options) {\n    return translate(Collections.singletonList(text), options).get(0);\n  }\n\n  private Map<TranslateRpc.Option, ?> optionMap(Option... options) {\n    Map<TranslateRpc.Option, Object> optionMap = Maps.newEnumMap(TranslateRpc.Option.class);\n    for (Option option : options) {\n      Object prev = optionMap.put(option.getRpcOption(), option.getValue());\n      checkArgument(prev == null, \"Duplicate option %s\", option);\n    }\n    return optionMap;\n  }\n}\n",
            "error": "",
            "span_id": 17654935916634044780
        }
    ],
    "get_directory_tree": [
        {
            "input": "java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate",
            "output": "[\n    {\n        \"name\": \"Option.java\",\n        \"type\": \"file\"\n    },\n    {\n        \"name\": \"v3beta1\",\n        \"type\": \"directory\",\n        \"contents\": [\n            {\n                \"name\": \"gapic_metadata.json\",\n                \"type\": \"file\"\n            },\n            {\n                \"name\": \"package-info.java\",\n                \"type\": \"file\"\n            },\n            {\n                \"name\": \"stub\",\n                \"type\": \"directory\",\n                \"contents\": [\n                    {\n                        \"name\": \"HttpJsonTranslationServiceCallableFactory.java\",\n                        \"type\": \"file\"\n                    },\n                    {\n                        \"name\": \"GrpcTranslationServiceCallableFactory.java\",\n                        \"type\": \"file\"\n                    },\n                    {\n                        \"name\": \"HttpJsonTranslationServiceStub.java\",\n                        \"type\": \"file\"\n                    },\n                    {\n                        \"name\": \"TranslationServiceStub.java\",\n                        \"type\": \"file\"\n                    },\n                    {\n                        \"name\": \"TranslationServiceStubSettings.java\",\n                        \"type\": \"file\"\n                    },\n                    {\n                        \"name\": \"GrpcTranslationServiceStub.java\",\n                        \"type\": \"file\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"TranslationServiceClient.java\",\n                \"type\": \"file\"\n            },\n            {\n                \"name\": \"TranslationServiceSettings.java\",\n                \"type\": \"file\"\n            }\n        ]\n    },\n    {\n        \"name\": \"TranslateFactory.java\",\n        \"type\": \"file\"\n    },\n    {\n        \"name\": \"package-info.java\",\n        \"type\": \"file\"\n    },\n    {\n        \"name\": \"Language.java\",\n        \"type\": \"file\"\n    },\n    {\n        \"name\": \"Detection.java\",\n        \"type\": \"file\"\n    },\n    {\n        \"name\": \"spi\",\n        \"type\": \"directory\",\n        \"contents\": [\n            {\n                \"name\": \"TranslateRpcFactory.java\",\n                \"type\": \"file\"\n            },\n            {\n                \"name\": \"v2\",\n                \"type\": \"directory\",\n                \"contents\": [\n                    {\n                        \"name\": \"HttpTranslateRpc.java\",\n                        \"type\": \"file\"\n                    },\n                    {\n                        \"name\": \"TranslateRpc.java\",\n                        \"type\": \"file\"\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"name\": \"TranslateOptions.java\",\n        \"type\": \"file\"\n    },\n    {\n        \"name\": \"v3\",\n        \"type\": \"directory\",\n        \"contents\": [\n            {\n                \"name\": \"gapic_metadata.json\",\n                \"type\": \"file\"\n            },\n            {\n                \"name\": \"package-info.java\",\n                \"type\": \"file\"\n            },\n            {\n                \"name\": \"stub\",\n                \"type\": \"directory\",\n                \"contents\": [\n                    {\n                        \"name\": \"HttpJsonTranslationServiceCallableFactory.java\",\n                        \"type\": \"file\"\n                    },\n                    {\n                        \"name\": \"GrpcTranslationServiceCallableFactory.java\",\n                        \"type\": \"file\"\n                    },\n                    {\n                        \"name\": \"HttpJsonTranslationServiceStub.java\",\n                        \"type\": \"file\"\n                    },\n                    {\n                        \"name\": \"TranslationServiceStub.java\",\n                        \"type\": \"file\"\n                    },\n                    {\n                        \"name\": \"TranslationServiceStubSettings.java\",\n                        \"type\": \"file\"\n                    },\n                    {\n                        \"name\": \"GrpcTranslationServiceStub.java\",\n                        \"type\": \"file\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"TranslationServiceClient.java\",\n                \"type\": \"file\"\n            },\n            {\n                \"name\": \"TranslationServiceSettings.java\",\n                \"type\": \"file\"\n            }\n        ]\n    },\n    {\n        \"name\": \"testing\",\n        \"type\": \"directory\",\n        \"contents\": [\n            {\n                \"name\": \"RemoteTranslateHelper.java\",\n                \"type\": \"file\"\n            },\n            {\n                \"name\": \"package-info.java\",\n                \"type\": \"file\"\n            }\n        ]\n    },\n    {\n        \"name\": \"Translate.java\",\n        \"type\": \"file\"\n    },\n    {\n        \"name\": \"Translation.java\",\n        \"type\": \"file\"\n    },\n    {\n        \"name\": \"TranslateImpl.java\",\n        \"type\": \"file\"\n    },\n    {\n        \"name\": \"TranslateException.java\",\n        \"type\": \"file\"\n    }\n]",
            "error": "",
            "span_id": 11679288463449197110
        }
    ],
    "get_language_server_suggestions": [],
    "reset_repo": []
}