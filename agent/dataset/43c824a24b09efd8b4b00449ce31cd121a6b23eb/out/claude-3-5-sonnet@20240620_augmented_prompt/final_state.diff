diff --git a/src/main/java/de/gwdg/metadataqa/marc/MarcFactory.java b/src/main/java/de/gwdg/metadataqa/marc/MarcFactory.java
index 8ad8251e..6cbd0160 100644
--- a/src/main/java/de/gwdg/metadataqa/marc/MarcFactory.java
+++ b/src/main/java/de/gwdg/metadataqa/marc/MarcFactory.java
@@ -1,6 +1,6 @@
 package de.gwdg.metadataqa.marc;
 
-import de.gwdg.metadataqa.api.json.JsonBranch;
+import de.gwdg.metadataqa.api.model.JsonBranch;
 import de.gwdg.metadataqa.api.model.pathcache.JsonPathCache;
 import de.gwdg.metadataqa.api.model.XmlFieldInstance;
 import de.gwdg.metadataqa.api.schema.MarcJsonSchema;
@@ -64,7 +64,9 @@ public class MarcFactory {
 
   public static BibliographicRecord create(JsonPathCache cache, MarcVersion version) {
     var marcRecord = new Marc21Record();
-    for (JsonBranch branch : schema.getPaths()) {
+    for (Object branch : schema.getPaths()) {
+-    for (Object branch : schema.getPaths()) {
++    for (Object branch : schema.getPaths()) {
       if (branch.getParent() != null)
         continue;
       switch (branch.getLabel()) {
@@ -277,40 +279,8 @@ public class MarcFactory {
     return field;
   }
 
-  private static DataField extractPicaDataField(org.marc4j.marc.DataField dataField,
-                                                PicaFieldDefinition definition,
-                                                MarcVersion marcVersion) {
-    DataField field = null;
-    if (definition == null) {
-      field = new DataField(dataField.getTag(),
-        Character.toString(dataField.getIndicator1()),
-        Character.toString(dataField.getIndicator2()),
-        marcVersion
-      );
-    } else {
-      field = new DataField(
-        definition,
-        Character.toString(dataField.getIndicator1()),
-        Character.toString(dataField.getIndicator2())
-      );
-    }
-    for (Subfield subfield : dataField.getSubfields()) {
-      var code = Character.toString(subfield.getCode());
-      SubfieldDefinition subfieldDefinition = definition == null ? null : definition.getSubfield(code);
-      MarcSubfield marcSubfield = null;
-      if (subfieldDefinition == null) {
-        marcSubfield = new MarcSubfield(null, code, subfield.getData());
-      } else {
-        marcSubfield = new MarcSubfield(subfieldDefinition, code, subfield.getData());
-      }
-      marcSubfield.setField(field);
-      field.getSubfields().add(marcSubfield);
-    }
-    field.indexSubfields();
-    return field;
-  }
-
-  private static List<String> extractList(JsonPathCache cache, JsonBranch branch) {
+-  private static List<String> extractList(JsonPathCache cache, JsonBranch branch) {
++  private static List<String> extractList(JsonPathCache cache, Object branch) {
     List<XmlFieldInstance> instances = cache.get(branch.getJsonPath());
     List<String> values = new ArrayList<>();
     if (instances != null)
@@ -319,7 +289,9 @@ public class MarcFactory {
     return values;
   }
 
-  private static String extractFirst(JsonPathCache cache, JsonBranch branch) {
+-  private static String extractFirst(JsonPathCache cache, JsonBranch branch) {
++  private static String extractFirst(JsonPathCache cache, Object branch) {
+  private static String extractFirst(JsonPathCache cache, Object branch) {
     List<String> list = extractList(cache, branch);
     if (!list.isEmpty())
       return list.get(0);