================================ System Message ================================

Act as an expert Java software developer.
The program has issues after a version upgrade of a dependency.
Try using minimal changes to the code to fix the issues. 
Do not explain your actions or ask questions, just provide diffs that always adhere to the rules.
When you think you are done, reply with the diff that fixes the issues, after that a final verification step will happen and the conversation will be ended if it was successful. If not you get the error back.

# File editing rules:
Return edits similar to unified diffs that `diff -U0` would produce.
The diff has to be in a markdown code block, like this: ```diff ```.

Make sure you include the first 2 lines with the file paths.
Don't include timestamps with the file paths.

Start each hunk of changes with a `@@ ... @@` line.
Don't include line numbers like `diff -U0` does.
The user's patch tool doesn't need them.

The user's patch tool needs CORRECT patches that apply cleanly against the current contents of the file!
Think carefully and make sure you include and mark all lines that need to be removed or changed as `-` lines.
Make sure you mark all new or modified lines with `+`.
Don't leave out any lines or the diff patch won't apply correctly.
Dont add in new comments or change existing comments.
Make sure the diff is minimal and only includes the changes needed to fix the issue plus at least one context line so the tool can apply the diff correctly.

Indentation matters in the diffs!

Start a new hunk for each section of the file that needs changes.
Dont include unnescessary context, but include at least one line of it.
If no context is included, the tool will try to apply the changes at the end of the line.

Only output hunks that specify changes with `+` or `-` lines.
Skip any hunks that are entirely unchanging ` ` lines.

Output hunks in whatever order makes the most sense.
Hunks don't need to be in any particular order.

When editing a function, method, loop, etc use a hunk to replace the *entire* code block.
Delete the entire existing version with `-` lines and then add a new, updated version with `+` lines.
This will help you generate correct code and correct diffs.

To make a new file, show a diff from `--- /dev/null` to `+++ path/to/new/file.ext`.


================================ Human Message =================================


Updated Dependency Details: jakarta.annotation:jakarta.annotation-api 1.3.5 -> 2.0.0

Initial Error: [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile (default-compile) on project cdi-test-api: Compilation failure: Compilation failure:
[ERROR] cdi-test-api/src/main/java/de/hilling/junit/cdi/annotations/GlobalTestImplementation.java:[6,24] package javax.annotation does not exist
[ERROR] cdi-test-api/src/main/java/de/hilling/junit/cdi/annotations/GlobalTestImplementation.java:[27,2] cannot find symbol
[ERROR]   symbol: class Priority
[ERROR] -> [Help 1]

Revapi/japicmp API Changes, which describe changes in the APIs used by this project: {"japicmpResult": {}, "elementLines": {}, "revapiResult": {}, "allPotentialBreakingElements": [], "elementPatterns": {}, "project": "cdi-test"}


================================== Ai Message ==================================
Tool Calls:
  read_file (call_fxih0zFuo3m8XU0Na1fi236c)
 Call ID: call_fxih0zFuo3m8XU0Na1fi236c
  Args:
    file_path: cdi-test-api/src/main/java/de/hilling/junit/cdi/annotations/GlobalTestImplementation.java

================================= Tool Message =================================
Name: read_file

package de.hilling.junit.cdi.annotations;

import de.hilling.junit.cdi.scope.TestScoped;
import org.immutables.value.Value;

import javax.annotation.Priority;
import javax.enterprise.inject.Alternative;
import javax.enterprise.inject.Stereotype;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Use this annotation to mark Alternatives that should globally replace
 * production implementations.
 * <p>
 *     These services cannot be disabled or enabled on a per test basis
 *     because the container is only started once.
 * </p>
 */
@Alternative
@TestScoped
@Stereotype
@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Priority(100)
@Value.Immutable
public @interface GlobalTestImplementation {
}


================================== Ai Message ==================================
Tool Calls:
  read_file (call_0s232FiJcLhUOiGjMEWncO72)
 Call ID: call_0s232FiJcLhUOiGjMEWncO72
  Args:
    file_path: cdi-test-api/pom.xml

================================= Tool Message =================================
Name: read_file

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>cdi-test</artifactId>
        <groupId>de.hilling.junit.cdi</groupId>
        <version>3.2.2-SNAPSHOT</version>
    </parent>

    <artifactId>cdi-test-api</artifactId>

    <dependencies>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
        </dependency>
    </dependencies>
</project>


================================== Ai Message ==================================
Tool Calls:
  read_file (call_AAKd2axvtQksQZBGHlxX8T6k)
 Call ID: call_AAKd2axvtQksQZBGHlxX8T6k
  Args:
    file_path: cdi-test-api/src/main/java/de/hilling/junit/cdi/annotations/GlobalTestImplementation.java
  read_file (call_we9b3gtOBUty4qaugY2q6Nzr)
 Call ID: call_we9b3gtOBUty4qaugY2q6Nzr
  Args:
    file_path: cdi-test-api/pom.xml

================================= Tool Message =================================
Name: read_file

package de.hilling.junit.cdi.annotations;

import de.hilling.junit.cdi.scope.TestScoped;
import org.immutables.value.Value;

import javax.annotation.Priority;
import javax.enterprise.inject.Alternative;
import javax.enterprise.inject.Stereotype;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Use this annotation to mark Alternatives that should globally replace
 * production implementations.
 * <p>
 *     These services cannot be disabled or enabled on a per test basis
 *     because the container is only started once.
 * </p>
 */
@Alternative
@TestScoped
@Stereotype
@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Priority(100)
@Value.Immutable
public @interface GlobalTestImplementation {
}


================================= Tool Message =================================
Name: read_file

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>cdi-test</artifactId>
        <groupId>de.hilling.junit.cdi</groupId>
        <version>3.2.2-SNAPSHOT</version>
    </parent>

    <artifactId>cdi-test-api</artifactId>

    <dependencies>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
        </dependency>
    </dependencies>
</project>


================================== Ai Message ==================================
Tool Calls:
  read_file (call_ocRmtv2bON38PbypHcRRZ16u)
 Call ID: call_ocRmtv2bON38PbypHcRRZ16u
  Args:
    file_path: cdi-test-api/src/main/java/de/hilling/junit/cdi/annotations/GlobalTestImplementation.java

================================= Tool Message =================================
Name: read_file

package de.hilling.junit.cdi.annotations;

import de.hilling.junit.cdi.scope.TestScoped;
import org.immutables.value.Value;

import javax.annotation.Priority;
import javax.enterprise.inject.Alternative;
import javax.enterprise.inject.Stereotype;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Use this annotation to mark Alternatives that should globally replace
 * production implementations.
 * <p>
 *     These services cannot be disabled or enabled on a per test basis
 *     because the container is only started once.
 * </p>
 */
@Alternative
@TestScoped
@Stereotype
@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Priority(100)
@Value.Immutable
public @interface GlobalTestImplementation {
}


================================== Ai Message ==================================
Tool Calls:
  read_file (call_ZouZk5gsJ6RHnMwS2FpT2jmL)
 Call ID: call_ZouZk5gsJ6RHnMwS2FpT2jmL
  Args:
    file_path: cdi-test-api/pom.xml

================================= Tool Message =================================
Name: read_file

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>cdi-test</artifactId>
        <groupId>de.hilling.junit.cdi</groupId>
        <version>3.2.2-SNAPSHOT</version>
    </parent>

    <artifactId>cdi-test-api</artifactId>

    <dependencies>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
        </dependency>
    </dependencies>
</project>


================================== Ai Message ==================================
Tool Calls:
  read_file (call_OQeSgnnbjxCIcjHFnObBsTaY)
 Call ID: call_OQeSgnnbjxCIcjHFnObBsTaY
  Args:
    file_path: cdi-test-api/src/main/java/de/hilling/junit/cdi/annotations/GlobalTestImplementation.java

================================= Tool Message =================================
Name: read_file

package de.hilling.junit.cdi.annotations;

import de.hilling.junit.cdi.scope.TestScoped;
import org.immutables.value.Value;

import javax.annotation.Priority;
import javax.enterprise.inject.Alternative;
import javax.enterprise.inject.Stereotype;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Use this annotation to mark Alternatives that should globally replace
 * production implementations.
 * <p>
 *     These services cannot be disabled or enabled on a per test basis
 *     because the container is only started once.
 * </p>
 */
@Alternative
@TestScoped
@Stereotype
@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Priority(100)
@Value.Immutable
public @interface GlobalTestImplementation {
}


================================== Ai Message ==================================
Tool Calls:
  read_file (call_YDwf3sGGoWJpCt180CSfspwZ)
 Call ID: call_YDwf3sGGoWJpCt180CSfspwZ
  Args:
    file_path: cdi-test-api/src/main/java/de/hilling/junit/cdi/annotations/GlobalTestImplementation.java
  read_file (call_E9BCisH2IHJSZ6uzZ0p4DgQe)
 Call ID: call_E9BCisH2IHJSZ6uzZ0p4DgQe
  Args:
    file_path: cdi-test-api/pom.xml

================================= Tool Message =================================
Name: read_file

package de.hilling.junit.cdi.annotations;

import de.hilling.junit.cdi.scope.TestScoped;
import org.immutables.value.Value;

import javax.annotation.Priority;
import javax.enterprise.inject.Alternative;
import javax.enterprise.inject.Stereotype;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Use this annotation to mark Alternatives that should globally replace
 * production implementations.
 * <p>
 *     These services cannot be disabled or enabled on a per test basis
 *     because the container is only started once.
 * </p>
 */
@Alternative
@TestScoped
@Stereotype
@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Priority(100)
@Value.Immutable
public @interface GlobalTestImplementation {
}


================================= Tool Message =================================
Name: read_file

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>cdi-test</artifactId>
        <groupId>de.hilling.junit.cdi</groupId>
        <version>3.2.2-SNAPSHOT</version>
    </parent>

    <artifactId>cdi-test-api</artifactId>

    <dependencies>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
        </dependency>
    </dependencies>
</project>


================================== Ai Message ==================================
Tool Calls:
  read_file (call_067VwcNUJG8uyl8qGWopexpW)
 Call ID: call_067VwcNUJG8uyl8qGWopexpW
  Args:
    file_path: cdi-test-api/src/main/java/de/hilling/junit/cdi/annotations/GlobalTestImplementation.java

================================= Tool Message =================================
Name: read_file

package de.hilling.junit.cdi.annotations;

import de.hilling.junit.cdi.scope.TestScoped;
import org.immutables.value.Value;

import javax.annotation.Priority;
import javax.enterprise.inject.Alternative;
import javax.enterprise.inject.Stereotype;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Use this annotation to mark Alternatives that should globally replace
 * production implementations.
 * <p>
 *     These services cannot be disabled or enabled on a per test basis
 *     because the container is only started once.
 * </p>
 */
@Alternative
@TestScoped
@Stereotype
@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Priority(100)
@Value.Immutable
public @interface GlobalTestImplementation {
}


================================== Ai Message ==================================
Tool Calls:
  read_file (call_9woH6kJ7SkIJgutgZCfrbVwg)
 Call ID: call_9woH6kJ7SkIJgutgZCfrbVwg
  Args:
    file_path: cdi-test-api/pom.xml

================================= Tool Message =================================
Name: read_file

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>cdi-test</artifactId>
        <groupId>de.hilling.junit.cdi</groupId>
        <version>3.2.2-SNAPSHOT</version>
    </parent>

    <artifactId>cdi-test-api</artifactId>

    <dependencies>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
        </dependency>
    </dependencies>
</project>


================================== Ai Message ==================================
Tool Calls:
  read_file (call_2VMWn5JY1qoLXaEKg3ooGrGo)
 Call ID: call_2VMWn5JY1qoLXaEKg3ooGrGo
  Args:
    file_path: cdi-test-api/src/main/java/de/hilling/junit/cdi/annotations/GlobalTestImplementation.java

================================= Tool Message =================================
Name: read_file

package de.hilling.junit.cdi.annotations;

import de.hilling.junit.cdi.scope.TestScoped;
import org.immutables.value.Value;

import javax.annotation.Priority;
import javax.enterprise.inject.Alternative;
import javax.enterprise.inject.Stereotype;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Use this annotation to mark Alternatives that should globally replace
 * production implementations.
 * <p>
 *     These services cannot be disabled or enabled on a per test basis
 *     because the container is only started once.
 * </p>
 */
@Alternative
@TestScoped
@Stereotype
@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Priority(100)
@Value.Immutable
public @interface GlobalTestImplementation {
}


================================== Ai Message ==================================
Tool Calls:
  read_file (call_c9gvcUNTU2i0fXS6PgAnz3Cj)
 Call ID: call_c9gvcUNTU2i0fXS6PgAnz3Cj
  Args:
    file_path: cdi-test-api/pom.xml

================================= Tool Message =================================
Name: read_file

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>cdi-test</artifactId>
        <groupId>de.hilling.junit.cdi</groupId>
        <version>3.2.2-SNAPSHOT</version>
    </parent>

    <artifactId>cdi-test-api</artifactId>

    <dependencies>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
        </dependency>
    </dependencies>
</project>


================================== Ai Message ==================================
Tool Calls:
  read_file (call_bDfWKMHwTUF9w8nSXLyM3Lsd)
 Call ID: call_bDfWKMHwTUF9w8nSXLyM3Lsd
  Args:
    file_path: cdi-test-api/src/main/java/de/hilling/junit/cdi/annotations/GlobalTestImplementation.java

================================= Tool Message =================================
Name: read_file

package de.hilling.junit.cdi.annotations;

import de.hilling.junit.cdi.scope.TestScoped;
import org.immutables.value.Value;

import javax.annotation.Priority;
import javax.enterprise.inject.Alternative;
import javax.enterprise.inject.Stereotype;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Use this annotation to mark Alternatives that should globally replace
 * production implementations.
 * <p>
 *     These services cannot be disabled or enabled on a per test basis
 *     because the container is only started once.
 * </p>
 */
@Alternative
@TestScoped
@Stereotype
@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Priority(100)
@Value.Immutable
public @interface GlobalTestImplementation {
}


================================== Ai Message ==================================
Tool Calls:
  read_file (call_MYPmpJeel2s9xGFlrbQ8V43V)
 Call ID: call_MYPmpJeel2s9xGFlrbQ8V43V
  Args:
    file_path: cdi-test-api/pom.xml

================================= Tool Message =================================
Name: read_file

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>cdi-test</artifactId>
        <groupId>de.hilling.junit.cdi</groupId>
        <version>3.2.2-SNAPSHOT</version>
    </parent>

    <artifactId>cdi-test-api</artifactId>

    <dependencies>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
        </dependency>
    </dependencies>
</project>


================================== Ai Message ==================================
Tool Calls:
  read_file (call_XTw1xzBQ9ETkWhIUO1a8GQfm)
 Call ID: call_XTw1xzBQ9ETkWhIUO1a8GQfm
  Args:
    file_path: cdi-test-api/src/main/java/de/hilling/junit/cdi/annotations/GlobalTestImplementation.java

================================= Tool Message =================================
Name: read_file

package de.hilling.junit.cdi.annotations;

import de.hilling.junit.cdi.scope.TestScoped;
import org.immutables.value.Value;

import javax.annotation.Priority;
import javax.enterprise.inject.Alternative;
import javax.enterprise.inject.Stereotype;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Use this annotation to mark Alternatives that should globally replace
 * production implementations.
 * <p>
 *     These services cannot be disabled or enabled on a per test basis
 *     because the container is only started once.
 * </p>
 */
@Alternative
@TestScoped
@Stereotype
@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Priority(100)
@Value.Immutable
public @interface GlobalTestImplementation {
}


================================== Ai Message ==================================
Tool Calls:
  read_file (call_K6xvfpPsDoQtM3bzjbVr39HM)
 Call ID: call_K6xvfpPsDoQtM3bzjbVr39HM
  Args:
    file_path: cdi-test-api/pom.xml

================================= Tool Message =================================
Name: read_file

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>cdi-test</artifactId>
        <groupId>de.hilling.junit.cdi</groupId>
        <version>3.2.2-SNAPSHOT</version>
    </parent>

    <artifactId>cdi-test-api</artifactId>

    <dependencies>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
        </dependency>
    </dependencies>
</project>
