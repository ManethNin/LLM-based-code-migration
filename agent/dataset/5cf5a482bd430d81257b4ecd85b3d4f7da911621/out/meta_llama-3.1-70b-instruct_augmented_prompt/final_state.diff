diff --git a/src/main/java/com/example/web/AlertMessage.java b/src/main/java/com/example/web/AlertMessage.java
index b2e2a3c..7fc35de 100644
--- a/src/main/java/com/example/web/AlertMessage.java
+++ b/src/main/java/com/example/web/AlertMessage.java
@@ -1,129 +1,13 @@
-package com.example.web;
+package jakarta.mvc;
 
-import java.io.Serializable;
-import java.util.ArrayList;
-import java.util.List;
-import javax.inject.Named;
-import javax.mvc.RedirectScoped;
+import javax.enterprise.context.RequestScoped;
 
-/**
- * Used to transport messages back to the client.
- *
- * @author Hantsy Bai<hantsy@gmail.com>
- */
-@RedirectScoped
-@Named("flashMessage")
-public class AlertMessage implements Serializable {
+@RequestScoped
+public class AlertMessage {
 
-    private static final long serialVersionUID = 1L;
+package jakarta.mvc;
 
-    public enum Type {
-        success, warning, danger, info;
-    }
+import javax.enterprise.context.RequestScoped;
 
-    private Type type = Type.info;
-    private String text;
-    private String code;
-
-    public AlertMessage() {
-    }
-
-    public AlertMessage(Type type, String text) {
-        this.type = type;
-        this.text = text;
-    }
-
-    public AlertMessage(Type type, String code, String message) {
-        this.type = type;
-        this.code = code;
-        this.text = message;
-    }
-
-    public String getText() {
-        return text;
-    }
-
-    public Type getType() {
-        return type;
-    }
-
-    public String getCode() {
-        return code;
-    }
-
-    public void notify(Type type, String text) {
-        this.type = type;
-        this.text = text;
-    }
-
-    public static AlertMessage success(String text) {
-        return new AlertMessage(Type.success, text);
-    }
-
-    public static AlertMessage warning(String text) {
-        return new AlertMessage(Type.warning, text);
-    }
-
-    public static AlertMessage danger(String text) {
-        return new AlertMessage(Type.danger, text);
-    }
-
-    public static AlertMessage info(String text) {
-        return new AlertMessage(Type.info, text);
-    }
-
-    private List<Error> errors = new ArrayList<>();
-
-    public List<Error> getErrors() {
-        return errors;
-    }
-
-    public void setErrors(List<Error> errors) {
-        this.errors = errors;
-    }
-
-    public void addError(String field, String code, String message) {
-        this.errors.add(new Error(field, code, message));
-    }
-
-    public static class Error {
-
-        private String code;
-        private String message;
-        private String field;
-        
-        public Error(){}
-
-        private Error(String field, String code, String message) {
-            this.field = field;
-            this.code = code;
-            this.message = message;
-        }
-
-        public String getCode() {
-            return code;
-        }
-
-        public void setCode(String code) {
-            this.code = code;
-        }
-
-        public String getMessage() {
-            return message;
-        }
-
-        public void setMessage(String message) {
-            this.message = message;
-        }
-
-        public String getField() {
-            return field;
-        }
-
-        public void setField(String field) {
-            this.field = field;
-        }
-
-    }
-
-}
+@RequestScoped
+public class AlertMessage {
\ No newline at end of file