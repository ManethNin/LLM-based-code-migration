diff --git a/tobago-core/src/test/java/org/apache/myfaces/tobago/internal/mock/servlet/MockHttpSession.java b/tobago-core/src/test/java/org/apache/myfaces/tobago/internal/mock/servlet/MockHttpSession.java
index 481addd9e6..4014604bfa 100644
--- a/tobago-core/src/test/java/org/apache/myfaces/tobago/internal/mock/servlet/MockHttpSession.java
+++ b/tobago-core/src/test/java/org/apache/myfaces/tobago/internal/mock/servlet/MockHttpSession.java
@@ -21,6 +21,7 @@
 
 import jakarta.servlet.ServletContext;
 import jakarta.servlet.http.HttpSession;
+-import jakarta.servlet.http.HttpSessionContext;
 import jakarta.servlet.http.HttpSessionContext;
 import java.util.Enumeration;
 import java.util.HashMap;
@@ -31,92 +32,92 @@ public class MockHttpSession implements HttpSession {
 
   private Map<String, Object> attributes = new HashMap<>();
 
-  @Override
+@Override
   public Object getAttribute(final String s) {
     return attributes.get(s);
-  }
+}
 
-  @Override
+@Override
   public Enumeration<String> getAttributeNames() {
     return new Vector(attributes.keySet()).elements();
-  }
+}
 
-  @Override
+@Override
   public long getCreationTime() {
-    return 0;
-  }
+return 0;
+}
 
-  @Override
+@Override
   public String getId() {
     return null;
-  }
+}
 
-  @Override
+@Override
   public long getLastAccessedTime() {
-    return 0;
-  }
+return 0;
+}
 
-  @Override
+@Override
   public int getMaxInactiveInterval() {
-    return 0;
-  }
+return 0;
+}
 
   /** @deprecated */
   @Deprecated
-  @Override
-  public HttpSessionContext getSessionContext() {
-    return null;
-  }
+//  @Override
+//  public HttpSessionContext getSessionContext() {
+//    return null;
+//  }
 
   /** @deprecated */
   @Deprecated
-  @Override
+@Override
   public Object getValue(final String s) {
     return null;
-  }
+}
 
   /** @deprecated */
   @Deprecated
-  @Override
+@Override
   public String[] getValueNames() {
     return new String[0];
-  }
+}
 
-  @Override
+@Override
   public void invalidate() {
-  }
+}
 
-  @Override
+@Override
   public boolean isNew() {
     return false;
-  }
+}
 
   /** @deprecated */
   @Deprecated
-  @Override
+@Override
   public void putValue(final String s, final Object o) {
-  }
+}
 
-  @Override
+@Override
   public void removeAttribute(final String s) {
     attributes.remove(s);
-  }
+}
 
-  @Override
+@Override
   public void removeValue(final String s) {
-  }
+}
 
-  @Override
+@Override
   public void setAttribute(final String s, final Object o) {
     attributes.put(s, o);
-  }
+}
 
-  @Override
+@Override
   public void setMaxInactiveInterval(final int i) {
-  }
+}
 
-  @Override
+@Override
   public ServletContext getServletContext() {
     return null;
-  }
 }
+}
\ No newline at end of file