diff --git a/tobago-core/src/test/java/org/apache/myfaces/tobago/internal/mock/servlet/MockHttpSession.java b/tobago-core/src/test/java/org/apache/myfaces/tobago/internal/mock/servlet/MockHttpSession.java
index 481addd9e6..8b375f1b26 100644
--- a/tobago-core/src/test/java/org/apache/myfaces/tobago/internal/mock/servlet/MockHttpSession.java
+++ b/tobago-core/src/test/java/org/apache/myfaces/tobago/internal/mock/servlet/MockHttpSession.java
@@ -26,6 +26,9 @@
 import java.util.HashMap;
 import java.util.Map;
 import java.util.Vector;
+import jakarta.servlet.http.HttpSession;
+import jakarta.servlet.http.HttpSession;
+import jakarta.servlet.http.HttpSession;
 
 public class MockHttpSession implements HttpSession {
 
@@ -48,75 +51,93 @@ public long getCreationTime() {
 
   @Override
   public String getId() {
-    return null;
+throw new UnsupportedOperationException("Not supported yet.");
   }
 
   @Override
-  public long getLastAccessedTime() {
-    return 0;
+public void setAttribute(String name, Object value) {
+attributes.put(name, value);
   }
+}
 
-  @Override
+@Override
+  public long getLastAccessedTime() {
+return 0;
+}
+
+@Override
   public int getMaxInactiveInterval() {
-    return 0;
-  }
+return 0;
+}
 
   /** @deprecated */
   @Deprecated
-  @Override
+@Override
   public HttpSessionContext getSessionContext() {
-    return null;
-  }
+throw new UnsupportedOperationException("Not supported yet.");
+}
 
   /** @deprecated */
   @Deprecated
-  @Override
+@Override
   public Object getValue(final String s) {
-    return null;
+throw new UnsupportedOperationException("Not supported yet.");
+}
+
+@Override
+public void setAttribute(String name, Object value) {
+attributes.put(name, value);
   }
+}
 
   /** @deprecated */
   @Deprecated
-  @Override
+@Override
   public String[] getValueNames() {
     return new String[0];
-  }
+}
 
-  @Override
+@Override
   public void invalidate() {
-  }
+}
 
-  @Override
+@Override
   public boolean isNew() {
     return false;
-  }
+}
 
   /** @deprecated */
   @Deprecated
-  @Override
+@Override
   public void putValue(final String s, final Object o) {
-  }
+}
 
-  @Override
+@Override
   public void removeAttribute(final String s) {
     attributes.remove(s);
-  }
+}
 
-  @Override
+@Override
   public void removeValue(final String s) {
-  }
+}
 
-  @Override
+@Override
   public void setAttribute(final String s, final Object o) {
     attributes.put(s, o);
-  }
+}
 
-  @Override
+@Override
   public void setMaxInactiveInterval(final int i) {
-  }
+}
 
-  @Override
+@Override
   public ServletContext getServletContext() {
-    return null;
-  }
+throw new UnsupportedOperationException("Not supported yet.");
+}
+
+@Override
+public void setAttribute(String name, Object value) {
+attributes.put(name, value);
+}
 }
+}
\ No newline at end of file