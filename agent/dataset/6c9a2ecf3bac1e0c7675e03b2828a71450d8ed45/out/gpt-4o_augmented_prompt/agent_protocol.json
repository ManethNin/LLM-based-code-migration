{
    "validate_diffs": [],
    "compile_maven": [
        {
            "input": "```diff\napplication/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java\n@@ -4,0 +5 @@\n+import org.mapstruct.Mapping;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": "package io.github.wesleyosantos91.api.v1.mapper;\n\nimport io.github.wesleyosantos91.api.v1.request.PersonRequest;\nimport io.github.wesleyosantos91.api.v1.response.PersonResponse;\nimport io.github.wesleyosantos91.core.domain.PersonDomain;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.factory.Mappers;\n\n@Mapper\npublic interface PersonHttpMapper {\n\n    PersonHttpMapper INSTANCE = Mappers.getMapper(PersonHttpMapper.class);\n    PersonDomain toDomain(PersonRequest request);\n    PersonRequest toRequest(PersonDomain domain);\n\n    PersonDomain toDomain(PersonResponse response);\n    PersonResponse toResponse(PersonDomain domain);\n\n\n    default List<PersonResponse> toListResponse(List<PersonDomain> domains){\n        List<PersonResponse> list = new ArrayList<>();\n        domains.forEach(d-> list.add(toResponse(d)));\n        return list;\n    }\n}\nimport org.mapstruct.Mapping;\n"
                },
                "compile_error_details": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": {
                        "28": {
                            "lines": [
                                {
                                    "line_no": 27,
                                    "content": "}"
                                },
                                {
                                    "line_no": 28,
                                    "content": "import org.mapstruct.Mapping;"
                                },
                                {
                                    "line_no": 29,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[28,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 12384462355005765683
        },
        {
            "input": "```diff\napplication/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java\n@@ -5 +5 @@\n-import org.mapstruct.Mapping;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Couldn't retrieve @Mapper annotation\n",
                "updated_files": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": "package io.github.wesleyosantos91.api.v1.mapper;\n\nimport io.github.wesleyosantos91.api.v1.request.PersonRequest;\nimport io.github.wesleyosantos91.api.v1.response.PersonResponse;\nimport io.github.wesleyosantos91.core.domain.PersonDomain;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.factory.Mappers;\n\n@Mapper\npublic interface PersonHttpMapper {\n\n    PersonHttpMapper INSTANCE = Mappers.getMapper(PersonHttpMapper.class);\n    PersonDomain toDomain(PersonRequest request);\n    PersonRequest toRequest(PersonDomain domain);\n\n    PersonDomain toDomain(PersonResponse response);\n    PersonResponse toResponse(PersonDomain domain);\n\n\n    default List<PersonResponse> toListResponse(List<PersonDomain> domains){\n        List<PersonResponse> list = new ArrayList<>();\n        domains.forEach(d-> list.add(toResponse(d)));\n        return list;\n    }\n}\n"
                },
                "compile_error_details": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": {
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": ""
                                },
                                {
                                    "line_no": 11,
                                    "content": "@Mapper"
                                },
                                {
                                    "line_no": 12,
                                    "content": "public interface PersonHttpMapper {"
                                }
                            ],
                            "error_texts": [
                                "[11,1] Couldn't retrieve @Mapper annotation\n"
                            ]
                        }
                    }
                }
            },
            "error": "Couldn't retrieve @Mapper annotation\n",
            "span_id": 3519073229524787558
        },
        {
            "input": "```diff\napplication/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java\n@@ -10,0 +11 @@\n+\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Couldn't retrieve @Mapper annotation\n",
                "updated_files": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": "package io.github.wesleyosantos91.api.v1.mapper;\n\nimport io.github.wesleyosantos91.api.v1.request.PersonRequest;\nimport io.github.wesleyosantos91.api.v1.response.PersonResponse;\nimport io.github.wesleyosantos91.core.domain.PersonDomain;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.factory.Mappers;\n\n@Mapper\npublic interface PersonHttpMapper {\n\n    PersonHttpMapper INSTANCE = Mappers.getMapper(PersonHttpMapper.class);\n    PersonDomain toDomain(PersonRequest request);\n    PersonRequest toRequest(PersonDomain domain);\n\n    PersonDomain toDomain(PersonResponse response);\n    PersonResponse toResponse(PersonDomain domain);\n\n\n    default List<PersonResponse> toListResponse(List<PersonDomain> domains){\n        List<PersonResponse> list = new ArrayList<>();\n        domains.forEach(d-> list.add(toResponse(d)));\n        return list;\n    }\n}\n\n"
                },
                "compile_error_details": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": {
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": ""
                                },
                                {
                                    "line_no": 11,
                                    "content": "@Mapper"
                                },
                                {
                                    "line_no": 12,
                                    "content": "public interface PersonHttpMapper {"
                                }
                            ],
                            "error_texts": [
                                "[11,1] Couldn't retrieve @Mapper annotation\n"
                            ]
                        }
                    }
                }
            },
            "error": "Couldn't retrieve @Mapper annotation\n",
            "span_id": 15415163901184076102
        },
        {
            "input": "```diff\napplication/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java\n@@ -7,0 +8 @@\n+import org.mapstruct.Mapping;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": "package io.github.wesleyosantos91.api.v1.mapper;\n\nimport io.github.wesleyosantos91.api.v1.request.PersonRequest;\nimport io.github.wesleyosantos91.api.v1.response.PersonResponse;\nimport io.github.wesleyosantos91.core.domain.PersonDomain;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.factory.Mappers;\n\n@Mapper\npublic interface PersonHttpMapper {\n\n    PersonHttpMapper INSTANCE = Mappers.getMapper(PersonHttpMapper.class);\n    PersonDomain toDomain(PersonRequest request);\n    PersonRequest toRequest(PersonDomain domain);\n\n    PersonDomain toDomain(PersonResponse response);\n    PersonResponse toResponse(PersonDomain domain);\n\n\n    default List<PersonResponse> toListResponse(List<PersonDomain> domains){\n        List<PersonResponse> list = new ArrayList<>();\n        domains.forEach(d-> list.add(toResponse(d)));\n        return list;\n    }\n}\n\nimport org.mapstruct.Mapping;\n"
                },
                "compile_error_details": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": {
                        "29": {
                            "lines": [
                                {
                                    "line_no": 28,
                                    "content": ""
                                },
                                {
                                    "line_no": 29,
                                    "content": "import org.mapstruct.Mapping;"
                                },
                                {
                                    "line_no": 30,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[29,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 16215504474554927279
        },
        {
            "input": "```diff\napplication/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java\n@@ -8 +8,0 @@\n-import org.mapstruct.Mapping;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Couldn't retrieve @Mapper annotation\n",
                "updated_files": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": "package io.github.wesleyosantos91.api.v1.mapper;\n\nimport io.github.wesleyosantos91.api.v1.request.PersonRequest;\nimport io.github.wesleyosantos91.api.v1.response.PersonResponse;\nimport io.github.wesleyosantos91.core.domain.PersonDomain;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.factory.Mappers;\n\n@Mapper\npublic interface PersonHttpMapper {\n\n    PersonHttpMapper INSTANCE = Mappers.getMapper(PersonHttpMapper.class);\n    PersonDomain toDomain(PersonRequest request);\n    PersonRequest toRequest(PersonDomain domain);\n\n    PersonDomain toDomain(PersonResponse response);\n    PersonResponse toResponse(PersonDomain domain);\n\n\n    default List<PersonResponse> toListResponse(List<PersonDomain> domains){\n        List<PersonResponse> list = new ArrayList<>();\n        domains.forEach(d-> list.add(toResponse(d)));\n        return list;\n    }\n}\n\n"
                },
                "compile_error_details": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": {
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": ""
                                },
                                {
                                    "line_no": 11,
                                    "content": "@Mapper"
                                },
                                {
                                    "line_no": 12,
                                    "content": "public interface PersonHttpMapper {"
                                }
                            ],
                            "error_texts": [
                                "[11,1] Couldn't retrieve @Mapper annotation\n"
                            ]
                        }
                    }
                }
            },
            "error": "Couldn't retrieve @Mapper annotation\n",
            "span_id": 18398096951398490788
        },
        {
            "input": "```diff\napplication/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java\n@@ -6,0 +7 @@\n+import org.mapstruct.MappingConstants;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": "package io.github.wesleyosantos91.api.v1.mapper;\n\nimport io.github.wesleyosantos91.api.v1.request.PersonRequest;\nimport io.github.wesleyosantos91.api.v1.response.PersonResponse;\nimport io.github.wesleyosantos91.core.domain.PersonDomain;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.factory.Mappers;\n\n@Mapper\npublic interface PersonHttpMapper {\n\n    PersonHttpMapper INSTANCE = Mappers.getMapper(PersonHttpMapper.class);\n    PersonDomain toDomain(PersonRequest request);\n    PersonRequest toRequest(PersonDomain domain);\n\n    PersonDomain toDomain(PersonResponse response);\n    PersonResponse toResponse(PersonDomain domain);\n\n\n    default List<PersonResponse> toListResponse(List<PersonDomain> domains){\n        List<PersonResponse> list = new ArrayList<>();\n        domains.forEach(d-> list.add(toResponse(d)));\n        return list;\n    }\n}\n\nimport org.mapstruct.MappingConstants;\n"
                },
                "compile_error_details": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": {
                        "29": {
                            "lines": [
                                {
                                    "line_no": 28,
                                    "content": ""
                                },
                                {
                                    "line_no": 29,
                                    "content": "import org.mapstruct.MappingConstants;"
                                },
                                {
                                    "line_no": 30,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[29,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 16298426625186162058
        },
        {
            "input": "```diff\napplication/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java\n@@ -7 +7,0 @@\n-import org.mapstruct.MappingConstants;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Couldn't retrieve @Mapper annotation\n",
                "updated_files": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": "package io.github.wesleyosantos91.api.v1.mapper;\n\nimport io.github.wesleyosantos91.api.v1.request.PersonRequest;\nimport io.github.wesleyosantos91.api.v1.response.PersonResponse;\nimport io.github.wesleyosantos91.core.domain.PersonDomain;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.factory.Mappers;\n\n@Mapper\npublic interface PersonHttpMapper {\n\n    PersonHttpMapper INSTANCE = Mappers.getMapper(PersonHttpMapper.class);\n    PersonDomain toDomain(PersonRequest request);\n    PersonRequest toRequest(PersonDomain domain);\n\n    PersonDomain toDomain(PersonResponse response);\n    PersonResponse toResponse(PersonDomain domain);\n\n\n    default List<PersonResponse> toListResponse(List<PersonDomain> domains){\n        List<PersonResponse> list = new ArrayList<>();\n        domains.forEach(d-> list.add(toResponse(d)));\n        return list;\n    }\n}\n\n"
                },
                "compile_error_details": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": {
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": ""
                                },
                                {
                                    "line_no": 11,
                                    "content": "@Mapper"
                                },
                                {
                                    "line_no": 12,
                                    "content": "public interface PersonHttpMapper {"
                                }
                            ],
                            "error_texts": [
                                "[11,1] Couldn't retrieve @Mapper annotation\n"
                            ]
                        }
                    }
                }
            },
            "error": "Couldn't retrieve @Mapper annotation\n",
            "span_id": 11097444190330067604
        },
        {
            "input": "```diff\napplication/pom.xml\n@@ -39,0 +40,4 @@\n+        <dependency>\n+            <groupId>org.mapstruct</groupId>\n+            <artifactId>mapstruct</artifactId>\n+        </dependency>\n```",
            "output": {
                "compilation_has_succeeded": true,
                "test_has_succeeded": false,
                "error_text": "[INFO] Scanning for projects...\n[ERROR] [ERROR] Some problems were encountered while processing the POMs:\n[FATAL] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21\n@\n[ERROR] The build could not read 1 project -> [Help 1]\n[ERROR]\n[ERROR] The project (/mnt/repo/application/pom.xml) has 1 error\n[ERROR] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21 -> [Help 2]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException\n[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/ModelParseException",
                "updated_files": {
                    "application/pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <parent>\n        <artifactId>poc-multi-module-arch-hexagonal-springboot</artifactId>\n        <groupId>io.github.wesleyosantos91</groupId>\n        <version>1.0.0</version>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>application</artifactId>\n\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n\n        <sonar.coverage.exclusions>\n            **/Application.java\n        </sonar.coverage.exclusions>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-validation</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>domain</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.8.8</version>\n                <configuration>\n                    <excludes>\n                        <exclude>**/**/Application.*</exclude>\n                    </excludes>\n                </configuration>\n                <executions>\n                    <!-- to avoid bugs in some situations -->\n                    <execution>\n                        <id>default-prepare-agent</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n\n                    <!-- create report during maven verify phase -->\n                    <execution>\n                        <id>report</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n\n                    <execution>\n                        <id>check</id>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <rule>\n                                    <element>BUNDLE</element>\n                                    <limits>\n                                        <limit>\n                                            <counter>LINE</counter>\n                                            <value>COVEREDRATIO</value>\n                                            <minimum>0.0</minimum>\n                                        </limit>\n                                    </limits>\n                                </rule>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct</artifactId>\n        </dependency>\n"
                },
                "compile_error_details": {}
            },
            "error": "[INFO] Scanning for projects...\n[ERROR] [ERROR] Some problems were encountered while processing the POMs:\n[FATAL] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21\n@\n[ERROR] The build could not read 1 project -> [Help 1]\n[ERROR]\n[ERROR] The project (/mnt/repo/application/pom.xml) has 1 error\n[ERROR] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21 -> [Help 2]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException\n[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/ModelParseException",
            "span_id": 6118086231153486652
        },
        {
            "input": "```diff\napplication/pom.xml\n@@ -93,0 +94,4 @@\n+        <dependency>\n+            <groupId>org.mapstruct</groupId>\n+            <artifactId>mapstruct</artifactId>\n+        </dependency>\n```",
            "output": {
                "compilation_has_succeeded": true,
                "test_has_succeeded": false,
                "error_text": "[INFO] Scanning for projects...\n[ERROR] [ERROR] Some problems were encountered while processing the POMs:\n[FATAL] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21\n@\n[ERROR] The build could not read 1 project -> [Help 1]\n[ERROR]\n[ERROR] The project (/mnt/repo/application/pom.xml) has 1 error\n[ERROR] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21 -> [Help 2]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException\n[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/ModelParseException",
                "updated_files": {
                    "application/pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <parent>\n        <artifactId>poc-multi-module-arch-hexagonal-springboot</artifactId>\n        <groupId>io.github.wesleyosantos91</groupId>\n        <version>1.0.0</version>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>application</artifactId>\n\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n\n        <sonar.coverage.exclusions>\n            **/Application.java\n        </sonar.coverage.exclusions>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-validation</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>domain</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.8.8</version>\n                <configuration>\n                    <excludes>\n                        <exclude>**/**/Application.*</exclude>\n                    </excludes>\n                </configuration>\n                <executions>\n                    <!-- to avoid bugs in some situations -->\n                    <execution>\n                        <id>default-prepare-agent</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n\n                    <!-- create report during maven verify phase -->\n                    <execution>\n                        <id>report</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n\n                    <execution>\n                        <id>check</id>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <rule>\n                                    <element>BUNDLE</element>\n                                    <limits>\n                                        <limit>\n                                            <counter>LINE</counter>\n                                            <value>COVEREDRATIO</value>\n                                            <minimum>0.0</minimum>\n                                        </limit>\n                                    </limits>\n                                </rule>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct</artifactId>\n        </dependency>\n"
                },
                "compile_error_details": {}
            },
            "error": "[INFO] Scanning for projects...\n[ERROR] [ERROR] Some problems were encountered while processing the POMs:\n[FATAL] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21\n@\n[ERROR] The build could not read 1 project -> [Help 1]\n[ERROR]\n[ERROR] The project (/mnt/repo/application/pom.xml) has 1 error\n[ERROR] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21 -> [Help 2]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException\n[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/ModelParseException",
            "span_id": 9293983550798694241
        },
        {
            "input": "```diff\napplication/pom.xml\n@@ -39,0 +40,4 @@\n+        <dependency>\n+            <groupId>org.mapstruct</groupId>\n+            <artifactId>mapstruct</artifactId>\n+        </dependency>\n@@ -93,0 +97,4 @@\n+        <dependency>\n+            <groupId>org.mapstruct</groupId>\n+            <artifactId>mapstruct</artifactId>\n+        </dependency>\n```",
            "output": {
                "compilation_has_succeeded": true,
                "test_has_succeeded": false,
                "error_text": "[INFO] Scanning for projects...\n[ERROR] [ERROR] Some problems were encountered while processing the POMs:\n[FATAL] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21\n@\n[ERROR] The build could not read 1 project -> [Help 1]\n[ERROR]\n[ERROR] The project (/mnt/repo/application/pom.xml) has 1 error\n[ERROR] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21 -> [Help 2]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException\n[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/ModelParseException",
                "updated_files": {
                    "application/pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <parent>\n        <artifactId>poc-multi-module-arch-hexagonal-springboot</artifactId>\n        <groupId>io.github.wesleyosantos91</groupId>\n        <version>1.0.0</version>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>application</artifactId>\n\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n\n        <sonar.coverage.exclusions>\n            **/Application.java\n        </sonar.coverage.exclusions>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-validation</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>domain</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.8.8</version>\n                <configuration>\n                    <excludes>\n                        <exclude>**/**/Application.*</exclude>\n                    </excludes>\n                </configuration>\n                <executions>\n                    <!-- to avoid bugs in some situations -->\n                    <execution>\n                        <id>default-prepare-agent</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n\n                    <!-- create report during maven verify phase -->\n                    <execution>\n                        <id>report</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n\n                    <execution>\n                        <id>check</id>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <rule>\n                                    <element>BUNDLE</element>\n                                    <limits>\n                                        <limit>\n                                            <counter>LINE</counter>\n                                            <value>COVEREDRATIO</value>\n                                            <minimum>0.0</minimum>\n                                        </limit>\n                                    </limits>\n                                </rule>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct</artifactId>\n        </dependency>\n"
                },
                "compile_error_details": {}
            },
            "error": "[INFO] Scanning for projects...\n[ERROR] [ERROR] Some problems were encountered while processing the POMs:\n[FATAL] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21\n@\n[ERROR] The build could not read 1 project -> [Help 1]\n[ERROR]\n[ERROR] The project (/mnt/repo/application/pom.xml) has 1 error\n[ERROR] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21 -> [Help 2]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException\n[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/ModelParseException",
            "span_id": 81220596631641472
        },
        {
            "input": "```diff\napplication/pom.xml\n@@ -94,4 +94,0 @@\n-        <dependency>\n-            <groupId>org.mapstruct</groupId>\n-            <artifactId>mapstruct</artifactId>\n-        </dependency>\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Couldn't retrieve @Mapper annotation\n",
                "updated_files": {
                    "application/pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <parent>\n        <artifactId>poc-multi-module-arch-hexagonal-springboot</artifactId>\n        <groupId>io.github.wesleyosantos91</groupId>\n        <version>1.0.0</version>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>application</artifactId>\n\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n\n        <sonar.coverage.exclusions>\n            **/Application.java\n        </sonar.coverage.exclusions>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-validation</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>domain</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.8.8</version>\n                <configuration>\n                    <excludes>\n                        <exclude>**/**/Application.*</exclude>\n                    </excludes>\n                </configuration>\n                <executions>\n                    <!-- to avoid bugs in some situations -->\n                    <execution>\n                        <id>default-prepare-agent</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n\n                    <!-- create report during maven verify phase -->\n                    <execution>\n                        <id>report</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n\n                    <execution>\n                        <id>check</id>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <rule>\n                                    <element>BUNDLE</element>\n                                    <limits>\n                                        <limit>\n                                            <counter>LINE</counter>\n                                            <value>COVEREDRATIO</value>\n                                            <minimum>0.0</minimum>\n                                        </limit>\n                                    </limits>\n                                </rule>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>"
                },
                "compile_error_details": {
                    "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java": {
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": ""
                                },
                                {
                                    "line_no": 11,
                                    "content": "@Mapper"
                                },
                                {
                                    "line_no": 12,
                                    "content": "public interface PersonHttpMapper {"
                                }
                            ],
                            "error_texts": [
                                "[11,1] Couldn't retrieve @Mapper annotation\n"
                            ]
                        }
                    }
                }
            },
            "error": "Couldn't retrieve @Mapper annotation\n",
            "span_id": 13106600092771014839
        },
        {
            "input": "```diff\napplication/pom.xml\n@@ -39,0 +40,4 @@\n+        <dependency>\n+            <groupId>org.mapstruct</groupId>\n+            <artifactId>mapstruct\n+        </dependency>\n```",
            "output": {
                "compilation_has_succeeded": true,
                "test_has_succeeded": false,
                "error_text": "[INFO] Scanning for projects...\n[ERROR] [ERROR] Some problems were encountered while processing the POMs:\n[FATAL] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21\n@\n[ERROR] The build could not read 1 project -> [Help 1]\n[ERROR]\n[ERROR] The project (/mnt/repo/application/pom.xml) has 1 error\n[ERROR] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21 -> [Help 2]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException\n[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/ModelParseException",
                "updated_files": {
                    "application/pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <parent>\n        <artifactId>poc-multi-module-arch-hexagonal-springboot</artifactId>\n        <groupId>io.github.wesleyosantos91</groupId>\n        <version>1.0.0</version>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>application</artifactId>\n\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n\n        <sonar.coverage.exclusions>\n            **/Application.java\n        </sonar.coverage.exclusions>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-validation</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>domain</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.8.8</version>\n                <configuration>\n                    <excludes>\n                        <exclude>**/**/Application.*</exclude>\n                    </excludes>\n                </configuration>\n                <executions>\n                    <!-- to avoid bugs in some situations -->\n                    <execution>\n                        <id>default-prepare-agent</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n\n                    <!-- create report during maven verify phase -->\n                    <execution>\n                        <id>report</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n\n                    <execution>\n                        <id>check</id>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <rule>\n                                    <element>BUNDLE</element>\n                                    <limits>\n                                        <limit>\n                                            <counter>LINE</counter>\n                                            <value>COVEREDRATIO</value>\n                                            <minimum>0.0</minimum>\n                                        </limit>\n                                    </limits>\n                                </rule>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct\n        </dependency>\n"
                },
                "compile_error_details": {}
            },
            "error": "[INFO] Scanning for projects...\n[ERROR] [ERROR] Some problems were encountered while processing the POMs:\n[FATAL] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21\n@\n[ERROR] The build could not read 1 project -> [Help 1]\n[ERROR]\n[ERROR] The project (/mnt/repo/application/pom.xml) has 1 error\n[ERROR] Non-parseable POM /mnt/repo/application/pom.xml: start tag not allowed in epilog but got d (position: END_TAG seen ...</build>\\n\\n</project> <d... @95:21) @ line 95, column 21 -> [Help 2]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException\n[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/ModelParseException",
            "span_id": 17868472157755160498
        }
    ],
    "read_file": [
        {
            "input": "application/src/main/java/io/github/wesleyosantos91/api/v1/mapper/PersonHttpMapper.java",
            "output": "package io.github.wesleyosantos91.api.v1.mapper;\n\nimport io.github.wesleyosantos91.api.v1.request.PersonRequest;\nimport io.github.wesleyosantos91.api.v1.response.PersonResponse;\nimport io.github.wesleyosantos91.core.domain.PersonDomain;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.factory.Mappers;\n\n@Mapper\npublic interface PersonHttpMapper {\n\n    PersonHttpMapper INSTANCE = Mappers.getMapper(PersonHttpMapper.class);\n    PersonDomain toDomain(PersonRequest request);\n    PersonRequest toRequest(PersonDomain domain);\n\n    PersonDomain toDomain(PersonResponse response);\n    PersonResponse toResponse(PersonDomain domain);\n\n\n    default List<PersonResponse> toListResponse(List<PersonDomain> domains){\n        List<PersonResponse> list = new ArrayList<>();\n        domains.forEach(d-> list.add(toResponse(d)));\n        return list;\n    }\n}\n",
            "error": "",
            "span_id": 16870245453224676271
        },
        {
            "input": "application/pom.xml",
            "output": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <parent>\n        <artifactId>poc-multi-module-arch-hexagonal-springboot</artifactId>\n        <groupId>io.github.wesleyosantos91</groupId>\n        <version>1.0.0</version>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>application</artifactId>\n\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n\n        <sonar.coverage.exclusions>\n            **/Application.java\n        </sonar.coverage.exclusions>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-validation</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>domain</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.8.8</version>\n                <configuration>\n                    <excludes>\n                        <exclude>**/**/Application.*</exclude>\n                    </excludes>\n                </configuration>\n                <executions>\n                    <!-- to avoid bugs in some situations -->\n                    <execution>\n                        <id>default-prepare-agent</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n\n                    <!-- create report during maven verify phase -->\n                    <execution>\n                        <id>report</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n\n                    <execution>\n                        <id>check</id>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <rule>\n                                    <element>BUNDLE</element>\n                                    <limits>\n                                        <limit>\n                                            <counter>LINE</counter>\n                                            <value>COVEREDRATIO</value>\n                                            <minimum>0.0</minimum>\n                                        </limit>\n                                    </limits>\n                                </rule>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>",
            "error": "",
            "span_id": 1339492198317973375
        },
        {
            "input": "application/pom.xml",
            "output": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <parent>\n        <artifactId>poc-multi-module-arch-hexagonal-springboot</artifactId>\n        <groupId>io.github.wesleyosantos91</groupId>\n        <version>1.0.0</version>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>application</artifactId>\n\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n\n        <sonar.coverage.exclusions>\n            **/Application.java\n        </sonar.coverage.exclusions>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-validation</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>domain</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.8.8</version>\n                <configuration>\n                    <excludes>\n                        <exclude>**/**/Application.*</exclude>\n                    </excludes>\n                </configuration>\n                <executions>\n                    <!-- to avoid bugs in some situations -->\n                    <execution>\n                        <id>default-prepare-agent</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n\n                    <!-- create report during maven verify phase -->\n                    <execution>\n                        <id>report</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n\n                    <execution>\n                        <id>check</id>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <rule>\n                                    <element>BUNDLE</element>\n                                    <limits>\n                                        <limit>\n                                            <counter>LINE</counter>\n                                            <value>COVEREDRATIO</value>\n                                            <minimum>0.0</minimum>\n                                        </limit>\n                                    </limits>\n                                </rule>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>",
            "error": "",
            "span_id": 11138872802145208337
        }
    ],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}