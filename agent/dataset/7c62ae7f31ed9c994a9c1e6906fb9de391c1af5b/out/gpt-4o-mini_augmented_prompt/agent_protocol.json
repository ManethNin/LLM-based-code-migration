{
    "validate_diffs": [],
    "compile_maven": [
        {
            "input": "```diff\n--- onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n+++ onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n@@ -30,8 +30,8 @@\n \n import org.hibernate.HibernateException;\n import org.hibernate.engine.spi.SessionImplementor;\n-import org.hibernate.usertype.UserType;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\n import org.onebusaway.gtfs.model.calendar.ServiceDate;\n \n public class ServiceDateUserType implements UserType {\n@@ -70,7 +70,7 @@\n   @Override\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SessionImplementor sessionImplementor)\n+  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n       throws HibernateException, SQLException {\n \n@@ -83,7 +83,7 @@\n   @Override\n-  public Object nullSafeGet(ResultSet rs, String[] names, SessionImplementor sessionImplementor, Object owner)\n+  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n       throws HibernateException, SQLException {\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "method does not override or implement a method from a supertype\n",
                "updated_files": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n"
                },
                "compile_error_details": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": {
                        "31": {
                            "lines": [
                                {
                                    "line_no": 30,
                                    "content": ""
                                },
                                {
                                    "line_no": 31,
                                    "content": "public class ServiceDateUserType implements UserType {"
                                },
                                {
                                    "line_no": 32,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[31,45] cannot find symbol\n",
                                "[31,45] cannot find symbol\nsymbol: class UserType\n"
                            ]
                        },
                        "35": {
                            "lines": [
                                {
                                    "line_no": 34,
                                    "content": ""
                                },
                                {
                                    "line_no": 35,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 36,
                                    "content": "  public Class<?> returnedClass() {"
                                }
                            ],
                            "error_texts": [
                                "[35,3] method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "40": {
                            "lines": [
                                {
                                    "line_no": 39,
                                    "content": ""
                                },
                                {
                                    "line_no": 40,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 41,
                                    "content": "  public int[] sqlTypes() {"
                                }
                            ],
                            "error_texts": [
                                "[40,3] method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "45": {
                            "lines": [
                                {
                                    "line_no": 44,
                                    "content": ""
                                },
                                {
                                    "line_no": 45,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 46,
                                    "content": "  public boolean equals(Object x, Object y) throws HibernateException {"
                                }
                            ],
                            "error_texts": [
                                "[45,3] method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "50": {
                            "lines": [
                                {
                                    "line_no": 49,
                                    "content": ""
                                },
                                {
                                    "line_no": 50,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 51,
                                    "content": "  public int hashCode(Object x) throws HibernateException {"
                                }
                            ],
                            "error_texts": [
                                "[50,3] method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "55": {
                            "lines": [
                                {
                                    "line_no": 54,
                                    "content": ""
                                },
                                {
                                    "line_no": 55,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 56,
                                    "content": "  public boolean isMutable() {"
                                }
                            ],
                            "error_texts": [
                                "[55,3] method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "60": {
                            "lines": [
                                {
                                    "line_no": 59,
                                    "content": ""
                                },
                                {
                                    "line_no": 60,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 61,
                                    "content": "  public Object deepCopy(Object value) throws HibernateException {"
                                }
                            ],
                            "error_texts": [
                                "[60,3] method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "68": {
                            "lines": [
                                {
                                    "line_no": 67,
                                    "content": ""
                                },
                                {
                                    "line_no": 68,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 69,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                }
                            ],
                            "error_texts": [
                                "[68,3] method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "84": {
                            "lines": [
                                {
                                    "line_no": 83,
                                    "content": ""
                                },
                                {
                                    "line_no": 84,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 85,
                                    "content": "  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)"
                                }
                            ],
                            "error_texts": [
                                "[84,3] method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "96": {
                            "lines": [
                                {
                                    "line_no": 95,
                                    "content": ""
                                },
                                {
                                    "line_no": 96,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 97,
                                    "content": "  public Object assemble(Serializable cached, Object owner)"
                                }
                            ],
                            "error_texts": [
                                "[96,3] method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "102": {
                            "lines": [
                                {
                                    "line_no": 101,
                                    "content": ""
                                },
                                {
                                    "line_no": 102,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 103,
                                    "content": "  public Serializable disassemble(Object value) throws HibernateException {"
                                }
                            ],
                            "error_texts": [
                                "[102,3] method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "107": {
                            "lines": [
                                {
                                    "line_no": 106,
                                    "content": ""
                                },
                                {
                                    "line_no": 107,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 108,
                                    "content": "  public Object replace(Object original, Object target, Object owner)"
                                }
                            ],
                            "error_texts": [
                                "[107,3] method does not override or implement a method from a supertype\n"
                            ]
                        }
                    }
                }
            },
            "error": "method does not override or implement a method from a supertype\n",
            "span_id": 5327585986100922962
        }
    ],
    "read_file": [
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.usertype.UserType;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SessionImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SessionImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 16366488408090722638
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.usertype.UserType;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SessionImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SessionImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 10646993733889519431
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.usertype.UserType;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SessionImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SessionImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 479905326012034036
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 3992047687669569267
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 12200248405525872347
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 4313341222837159954
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 3412370395733552492
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 654842671645801457
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 586407146200317530
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 7573100351309080779
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 7998447288370362305
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 1420009297349585841
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 9815753036169950899
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 11247096571709603603
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 16599292997558363911
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 2367237820825812713
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 5837535190125160044
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 13592572294204089456
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 8627729521640536465
        }
    ],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}