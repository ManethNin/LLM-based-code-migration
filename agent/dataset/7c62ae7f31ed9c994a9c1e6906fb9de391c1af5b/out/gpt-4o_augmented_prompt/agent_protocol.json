{
    "validate_diffs": [
        {
            "input": "```diff\nonebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n@@ -16,7 +16,7 @@\n import java.sql.Types;\n import java.text.ParseException;\n \n-import org.hibernate.engine.spi.SessionImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\n import org.hibernate.HibernateException;\n import org.hibernate.usertype.UserType;\n import org.onebusaway.gtfs.model.calendar.ServiceDate;\n@@ -45,17 +45,17 @@\n   }\n \n   @Override\n-  public Object nullSafeGet(ResultSet rs, String[] names, SessionImplementor sessionImplementor, Object owner)\n+  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n       throws HibernateException, SQLException {\n \n     String value = rs.getString(names[0]);\n \n     if (rs.wasNull())\n       return null;\n \n     try {\n       return ServiceDate.parseString(value);\n     } catch (ParseException ex) {\n       throw new SQLException(\"error parsing service date value: \" + value, ex);\n     }\n   }\n \n   @Override\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SessionImplementor sessionImplementor)\n+  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n       throws HibernateException, SQLException {\n \n     if (value == null) {\n       st.setNull(index, SQL_TYPES[0]);\n```",
            "output": "{'onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java': '/**\\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\\n * Copyright (C) 2011 Google, Inc.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \"License\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *         http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \"AS IS\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\npackage org.onebusaway.gtfs.impl;\\n\\nimport java.io.Serializable;\\nimport java.sql.PreparedStatement;\\nimport java.sql.ResultSet;\\nimport java.sql.SQLException;\\nimport java.sql.Types;\\nimport java.text.ParseException;\\n\\nimport org.hibernate.HibernateException;\\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\\nimport org.hibernate.usertype.UserType;\\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\\n\\npublic class ServiceDateUserType implements UserType {\\n\\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\\n\\n  @Override\\n  public Class<?> returnedClass() {\\n    return ServiceDate.class;\\n  }\\n\\n  @Override\\n  public int[] sqlTypes() {\\n    return SQL_TYPES;\\n  }\\n\\n  @Override\\n  public boolean equals(Object x, Object y) throws HibernateException {\\n    return x == y;\\n  }\\n\\n  @Override\\n  public int hashCode(Object x) throws HibernateException {\\n    return x.hashCode();\\n  }\\n\\n  @Override\\n  public boolean isMutable() {\\n    return false;\\n  }\\n\\n  @Override\\n  public Object deepCopy(Object value) throws HibernateException {\\n    if (value == null) {\\n      return null;\\n    }\\n    return new ServiceDate((ServiceDate) value);\\n  }\\n\\n  @Override\\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\\n      throws HibernateException, SQLException {\\n\\n    String value = rs.getString(names[0]);\\n\\n    if (rs.wasNull())\\n      return null;\\n\\n    try {\\n      return ServiceDate.parseString(value);\\n    } catch (ParseException ex) {\\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\\n    }\\n  }\\n\\n  @Override\\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\\n      throws HibernateException, SQLException {\\n\\n    if (value == null) {\\n      st.setNull(index, SQL_TYPES[0]);\\n    } else {\\n      ServiceDate serviceDate = (ServiceDate) value;\\n      st.setString(index, serviceDate.getAsString());\\n    }\\n  }\\n\\n  @Override\\n  public Object assemble(Serializable cached, Object owner)\\n      throws HibernateException {\\n    return deepCopy(cached);\\n  }\\n\\n  @Override\\n  public Serializable disassemble(Object value) throws HibernateException {\\n    return (Serializable) deepCopy(value);\\n  }\\n\\n  @Override\\n  public Object replace(Object original, Object target, Object owner)\\n      throws HibernateException {\\n    if (original == null)\\n      return null;\\n    return deepCopy(original);\\n  }\\n}\\n'}",
            "error": "",
            "span_id": 16329165897126187044
        },
        {
            "input": "```diff\nonebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java\n@@ -27,7 +27,7 @@\n import org.hibernate.service.ServiceRegistry;\n-import org.hibernate.service.ServiceRegistryBuilder;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\n import org.junit.AfterClass;\n@@ -50,7 +50,7 @@\n     ServiceRegistry serviceRegistry\n-            = new ServiceRegistryBuilder().applySettings(\n+            = new StandardServiceRegistryBuilder().applySettings(\n                     config.getProperties()\n     ).buildServiceRegistry();\n```",
            "output": "{'onebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java': '/**\\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\\n *\\n * Licensed under the Apache License, Version 2.0 (the \"License\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *         http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \"AS IS\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\npackage org.onebusaway.gtfs.impl;\\n\\nimport static org.junit.Assert.assertEquals;\\n\\nimport java.io.File;\\nimport java.io.IOException;\\nimport java.util.List;\\n\\nimport org.hibernate.SessionFactory;\\nimport org.hibernate.cfg.Configuration;\\nimport org.hibernate.service.ServiceRegistry;\\nimport org.hibernate.boot.registry.StandardServiceRegistryBuilder;\\nimport org.junit.AfterClass;\\nimport org.junit.BeforeClass;\\nimport org.junit.Test;\\nimport org.onebusaway.gtfs.model.Agency;\\nimport org.onebusaway.gtfs.model.AgencyAndId;\\nimport org.onebusaway.gtfs.model.Route;\\nimport org.onebusaway.gtfs.serialization.GtfsReader;\\n\\npublic class LongRouteDescriptionTest {\\n\\n  private static SessionFactory _sessionFactory;\\n\\n  private static final String _agencyId = \"Caltrain\";\\n\\n  private static HibernateGtfsRelationalDaoImpl _dao;\\n\\n  @BeforeClass\\n  public static void setup() throws IOException {\\n\\n    Configuration config = new Configuration();\\n    config = config.configure(\"org/onebusaway/gtfs/hibernate-configuration.xml\");\\n    ServiceRegistry serviceRegistry\\n            = new StandardServiceRegistryBuilder().applySettings(\\n                    config.getProperties()\\n    ).buildServiceRegistry();\\n    _sessionFactory = config.buildSessionFactory(serviceRegistry);\\n\\n    _dao = new HibernateGtfsRelationalDaoImpl(_sessionFactory);\\n\\n    GtfsReader reader = new GtfsReader();\\n    reader.setInputLocation(new File(\\n        \"src/test/resources/org/onebusaway/gtfs/caltrain-long-route.zip\"));\\n    reader.setEntityStore(_dao);\\n    reader.setDefaultAgencyId(_agencyId);\\n\\n    List<Class<?>> entityClasses = reader.getEntityClasses();\\n    entityClasses.clear();\\n    entityClasses.add(Agency.class);\\n    entityClasses.add(Route.class);\\n\\n    reader.run();\\n  }\\n\\n  @AfterClass\\n  public static void teardown() {\\n    _sessionFactory.close();\\n  }\\n\\n  /****\\n   * {@link Route} Methods\\n   ****/\\n\\n  @Test\\n  public void testGetRouteById() {\\n    Route route = _dao.getRouteForId(aid(\"ct_bullet\"));\\n    assertEquals(aid(\"ct_bullet\"), route.getId());\\n    assertEquals(\"Bullet\", route.getLongName());\\n    assertEquals(2, route.getType());\\n    assertEquals(null, route.getColor());\\n    assertEquals(\"ff0000\", route.getTextColor());\\n    assertEquals(null, route.getUrl());\\n\\n    // Long route description\\n    assertEquals(406, route.getDesc().length());\\n  }\\n\\n  /****\\n   * Private Methods\\n   ****/\\n\\n  private AgencyAndId aid(String id) {\\n    return new AgencyAndId(_agencyId, id);\\n  }\\n}\\n'}",
            "error": "",
            "span_id": 15982194262636160309
        },
        {
            "input": "```diff\nonebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n@@ -26,7 +26,6 @@\n \n-import org.hibernate.engine.spi.SessionImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\n import org.hibernate.HibernateException;\n import org.hibernate.usertype.UserType;\n import org.onebusaway.gtfs.model.calendar.ServiceDate;\n@@ -70,17 +69,16 @@\n   }\n \n   @Override\n-  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n-  }\n+  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n       throws HibernateException, SQLException {\n \n     String value = rs.getString(names[0]);\n \n     if (rs.wasNull())\n       return null;\n \n     try {\n       return ServiceDate.parseString(value);\n     } catch (ParseException ex) {\n       throw new SQLException(\"error parsing service date value: \" + value, ex);\n     }\n   }\n \n   @Override\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n+  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n       throws HibernateException, SQLException {\n \n     if (value == null) {\n       st.setNull(index, SQL_TYPES[0]);\n     } else {\n       ServiceDate serviceDate = (ServiceDate) value;\n       st.setString(index, serviceDate.getAsString());\n     }\n   }\n```",
            "output": "{'onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java': '/**\\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\\n * Copyright (C) 2011 Google, Inc.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \"License\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *         http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \"AS IS\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\npackage org.onebusaway.gtfs.impl;\\n\\nimport java.io.Serializable;\\nimport java.sql.PreparedStatement;\\nimport java.sql.ResultSet;\\nimport java.sql.SQLException;\\nimport java.sql.Types;\\nimport java.text.ParseException;\\n\\n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\\nimport org.hibernate.usertype.UserType;\\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\\n\\npublic class ServiceDateUserType implements UserType {\\n\\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\\n\\n  @Override\\n  public Class<?> returnedClass() {\\n    return ServiceDate.class;\\n  }\\n\\n  @Override\\n  public int[] sqlTypes() {\\n    return SQL_TYPES;\\n  }\\n\\n  @Override\\n  public boolean equals(Object x, Object y) throws HibernateException {\\n    return x == y;\\n  }\\n\\n  @Override\\n  public int hashCode(Object x) throws HibernateException {\\n    return x.hashCode();\\n  }\\n\\n  @Override\\n  public boolean isMutable() {\\n    return false;\\n  }\\n\\n  @Override\\n  public Object deepCopy(Object value) throws HibernateException {\\n    if (value == null) {\\n      return null;\\n    }\\n    return new ServiceDate((ServiceDate) value);\\n  }\\n\\n  @Override\\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\\n\\n  @Override\\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\\n      throws HibernateException, SQLException {\\n\\n    String value = rs.getString(names[0]);\\n\\n    if (rs.wasNull())\\n      return null;\\n\\n    try {\\n      return ServiceDate.parseString(value);\\n    } catch (ParseException ex) {\\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\\n    }\\n  }\\n\\n  @Override\\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\\n      throws HibernateException, SQLException {\\n\\n    if (value == null) {\\n      st.setNull(index, SQL_TYPES[0]);\\n    } else {\\n      ServiceDate serviceDate = (ServiceDate) value;\\n      st.setString(index, serviceDate.getAsString());\\n    }\\n  }\\n\\n  @Override\\n  public Object assemble(Serializable cached, Object owner)\\n      throws HibernateException {\\n    return deepCopy(cached);\\n  }\\n\\n  @Override\\n  public Serializable disassemble(Object value) throws HibernateException {\\n    return (Serializable) deepCopy(value);\\n  }\\n\\n  @Override\\n  public Object replace(Object original, Object target, Object owner)\\n      throws HibernateException {\\n    if (original == null)\\n      return null;\\n    return deepCopy(original);\\n  }\\n}\\n'}",
            "error": "",
            "span_id": 10366789899646477667
        },
        {
            "input": "```diff\nonebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n@@ -26,7 +26,6 @@\n \n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\n import org.hibernate.HibernateException;\n import org.hibernate.usertype.UserType;\n import org.onebusaway.gtfs.model.calendar.ServiceDate;\n@@ -70,17 +69,16 @@\n   }\n \n   @Override\n-  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n-  }\n+  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n       throws HibernateException, SQLException {\n \n     String value = rs.getString(names[0]);\n \n     if (rs.wasNull())\n       return null;\n \n     try {\n       return ServiceDate.parseString(value);\n     } catch (ParseException ex) {\n       throw new SQLException(\"error parsing service date value: \" + value, ex);\n     }\n   }\n \n   @Override\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n+  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n       throws HibernateException, SQLException {\n \n     if (value == null) {\n       st.setNull(index, SQL_TYPES[0]);\n     } else {\n       ServiceDate serviceDate = (ServiceDate) value;\n       st.setString(index, serviceDate.getAsString());\n     }\n   }\n```",
            "output": "{'onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java': '/**\\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\\n * Copyright (C) 2011 Google, Inc.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \"License\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *         http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \"AS IS\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\npackage org.onebusaway.gtfs.impl;\\n\\nimport java.io.Serializable;\\nimport java.sql.PreparedStatement;\\nimport java.sql.ResultSet;\\nimport java.sql.SQLException;\\nimport java.sql.Types;\\nimport java.text.ParseException;\\n\\n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\\nimport org.hibernate.usertype.UserType;\\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\\n\\npublic class ServiceDateUserType implements UserType {\\n\\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\\n\\n  @Override\\n  public Class<?> returnedClass() {\\n    return ServiceDate.class;\\n  }\\n\\n  @Override\\n  public int[] sqlTypes() {\\n    return SQL_TYPES;\\n  }\\n\\n  @Override\\n  public boolean equals(Object x, Object y) throws HibernateException {\\n    return x == y;\\n  }\\n\\n  @Override\\n  public int hashCode(Object x) throws HibernateException {\\n    return x.hashCode();\\n  }\\n\\n  @Override\\n  public boolean isMutable() {\\n    return false;\\n  }\\n\\n  @Override\\n  public Object deepCopy(Object value) throws HibernateException {\\n    if (value == null) {\\n      return null;\\n    }\\n    return new ServiceDate((ServiceDate) value);\\n  }\\n\\n  @Override\\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\\n\\n  @Override\\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\\n  }\\n\\n  @Override\\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\\n      throws HibernateException, SQLException {\\n\\n    String value = rs.getString(names[0]);\\n\\n    if (rs.wasNull())\\n      return null;\\n\\n    try {\\n      return ServiceDate.parseString(value);\\n    } catch (ParseException ex) {\\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\\n    }\\n  }\\n\\n  @Override\\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\\n      throws HibernateException, SQLException {\\n\\n    if (value == null) {\\n      st.setNull(index, SQL_TYPES[0]);\\n    } else {\\n      ServiceDate serviceDate = (ServiceDate) value;\\n      st.setString(index, serviceDate.getAsString());\\n    }\\n  }\\n\\n  @Override\\n  public Object assemble(Serializable cached, Object owner)\\n      throws HibernateException {\\n    return deepCopy(cached);\\n  }\\n\\n  @Override\\n  public Serializable disassemble(Object value) throws HibernateException {\\n    return (Serializable) deepCopy(value);\\n  }\\n\\n  @Override\\n  public Object replace(Object original, Object target, Object owner)\\n      throws HibernateException {\\n    if (original == null)\\n      return null;\\n    return deepCopy(original);\\n  }\\n}\\n'}",
            "error": "",
            "span_id": 11251049508912674610
        },
        {
            "input": "```diff\nonebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n@@ -26,7 +26,6 @@\n \n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\n import org.hibernate.HibernateException;\n import org.hibernate.usertype.UserType;\n import org.onebusaway.gtfs.model.calendar.ServiceDate;\n@@ -70,17 +69,16 @@\n   }\n \n   @Override\n-  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n-  }\n+  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n       throws HibernateException, SQLException {\n \n     String value = rs.getString(names[0]);\n \n     if (rs.wasNull())\n       return null;\n \n     try {\n       return ServiceDate.parseString(value);\n     } catch (ParseException ex) {\n       throw new SQLException(\"error parsing service date value: \" + value, ex);\n     }\n   }\n \n   @Override\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n+  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n       throws HibernateException, SQLException {\n \n     if (value == null) {\n       st.setNull(index, SQL_TYPES[0]);\n     } else {\n       ServiceDate serviceDate = (ServiceDate) value;\n       st.setString(index, serviceDate.getAsString());\n     }\n   }\n```",
            "output": "{'onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java': '/**\\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\\n * Copyright (C) 2011 Google, Inc.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \"License\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *         http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \"AS IS\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\npackage org.onebusaway.gtfs.impl;\\n\\nimport java.io.Serializable;\\nimport java.sql.PreparedStatement;\\nimport java.sql.ResultSet;\\nimport java.sql.SQLException;\\nimport java.sql.Types;\\nimport java.text.ParseException;\\n\\n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\\nimport org.hibernate.usertype.UserType;\\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\\n\\npublic class ServiceDateUserType implements UserType {\\n\\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\\n\\n  @Override\\n  public Class<?> returnedClass() {\\n    return ServiceDate.class;\\n  }\\n\\n  @Override\\n  public int[] sqlTypes() {\\n    return SQL_TYPES;\\n  }\\n\\n  @Override\\n  public boolean equals(Object x, Object y) throws HibernateException {\\n    return x == y;\\n  }\\n\\n  @Override\\n  public int hashCode(Object x) throws HibernateException {\\n    return x.hashCode();\\n  }\\n\\n  @Override\\n  public boolean isMutable() {\\n    return false;\\n  }\\n\\n  @Override\\n  public Object deepCopy(Object value) throws HibernateException {\\n    if (value == null) {\\n      return null;\\n    }\\n    return new ServiceDate((ServiceDate) value);\\n  }\\n\\n  @Override\\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\\n\\n  @Override\\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\\n  }\\n\\n  @Override\\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\\n      throws HibernateException, SQLException {\\n\\n    String value = rs.getString(names[0]);\\n\\n    if (rs.wasNull())\\n      return null;\\n\\n    try {\\n      return ServiceDate.parseString(value);\\n    } catch (ParseException ex) {\\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\\n    }\\n  }\\n\\n  @Override\\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\\n      throws HibernateException, SQLException {\\n\\n    if (value == null) {\\n      st.setNull(index, SQL_TYPES[0]);\\n    } else {\\n      ServiceDate serviceDate = (ServiceDate) value;\\n      st.setString(index, serviceDate.getAsString());\\n    }\\n  }\\n\\n  @Override\\n  public Object assemble(Serializable cached, Object owner)\\n      throws HibernateException {\\n    return deepCopy(cached);\\n  }\\n\\n  @Override\\n  public Serializable disassemble(Object value) throws HibernateException {\\n    return (Serializable) deepCopy(value);\\n  }\\n\\n  @Override\\n  public Object replace(Object original, Object target, Object owner)\\n      throws HibernateException {\\n    if (original == null)\\n      return null;\\n    return deepCopy(original);\\n  }\\n}\\n'}",
            "error": "",
            "span_id": 4933749868752576460
        },
        {
            "input": "```diff\nonebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n@@ -26,7 +26,6 @@\n \n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\n import org.hibernate.HibernateException;\n import org.hibernate.usertype.UserType;\n import org.onebusaway.gtfs.model.calendar.ServiceDate;\n@@ -70,17 +69,16 @@\n   }\n \n   @Override\n-  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n-  }\n+  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n       throws HibernateException, SQLException {\n \n     String value = rs.getString(names[0]);\n \n     if (rs.wasNull())\n       return null;\n \n     try {\n       return ServiceDate.parseString(value);\n     } catch (ParseException ex) {\n       throw new SQLException(\"error parsing service date value: \" + value, ex);\n     }\n   }\n \n   @Override\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n+  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n       throws HibernateException, SQLException {\n \n     if (value == null) {\n       st.setNull(index, SQL_TYPES[0]);\n     } else {\n       ServiceDate serviceDate = (ServiceDate) value;\n       st.setString(index, serviceDate.getAsString());\n     }\n   }\n```",
            "output": "{'onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java': '/**\\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\\n * Copyright (C) 2011 Google, Inc.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \"License\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *         http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \"AS IS\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\npackage org.onebusaway.gtfs.impl;\\n\\nimport java.io.Serializable;\\nimport java.sql.PreparedStatement;\\nimport java.sql.ResultSet;\\nimport java.sql.SQLException;\\nimport java.sql.Types;\\nimport java.text.ParseException;\\n\\n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\\nimport org.hibernate.usertype.UserType;\\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\\n\\npublic class ServiceDateUserType implements UserType {\\n\\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\\n\\n  @Override\\n  public Class<?> returnedClass() {\\n    return ServiceDate.class;\\n  }\\n\\n  @Override\\n  public int[] sqlTypes() {\\n    return SQL_TYPES;\\n  }\\n\\n  @Override\\n  public boolean equals(Object x, Object y) throws HibernateException {\\n    return x == y;\\n  }\\n\\n  @Override\\n  public int hashCode(Object x) throws HibernateException {\\n    return x.hashCode();\\n  }\\n\\n  @Override\\n  public boolean isMutable() {\\n    return false;\\n  }\\n\\n  @Override\\n  public Object deepCopy(Object value) throws HibernateException {\\n    if (value == null) {\\n      return null;\\n    }\\n    return new ServiceDate((ServiceDate) value);\\n  }\\n\\n  @Override\\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\\n\\n  @Override\\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\\n  }\\n\\n  @Override\\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\\n      throws HibernateException, SQLException {\\n\\n    String value = rs.getString(names[0]);\\n\\n    if (rs.wasNull())\\n      return null;\\n\\n    try {\\n      return ServiceDate.parseString(value);\\n    } catch (ParseException ex) {\\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\\n    }\\n  }\\n\\n  @Override\\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\\n      throws HibernateException, SQLException {\\n\\n    if (value == null) {\\n      st.setNull(index, SQL_TYPES[0]);\\n    } else {\\n      ServiceDate serviceDate = (ServiceDate) value;\\n      st.setString(index, serviceDate.getAsString());\\n    }\\n  }\\n\\n  @Override\\n  public Object assemble(Serializable cached, Object owner)\\n      throws HibernateException {\\n    return deepCopy(cached);\\n  }\\n\\n  @Override\\n  public Serializable disassemble(Object value) throws HibernateException {\\n    return (Serializable) deepCopy(value);\\n  }\\n\\n  @Override\\n  public Object replace(Object original, Object target, Object owner)\\n      throws HibernateException {\\n    if (original == null)\\n      return null;\\n    return deepCopy(original);\\n  }\\n}\\n'}",
            "error": "",
            "span_id": 10963547746004418243
        }
    ],
    "compile_maven": [
        {
            "input": "```diff\nonebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n@@ -16,7 +16,7 @@\n import java.sql.Types;\n import java.text.ParseException;\n \n-import org.hibernate.engine.spi.SessionImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\n import org.hibernate.HibernateException;\n import org.hibernate.usertype.UserType;\n import org.onebusaway.gtfs.model.calendar.ServiceDate;\n@@ -45,17 +45,17 @@\n   }\n \n   @Override\n-  public Object nullSafeGet(ResultSet rs, String[] names, SessionImplementor sessionImplementor, Object owner)\n+  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n       throws HibernateException, SQLException {\n \n     String value = rs.getString(names[0]);\n \n     if (rs.wasNull())\n       return null;\n \n     try {\n       return ServiceDate.parseString(value);\n     } catch (ParseException ex) {\n       throw new SQLException(\"error parsing service date value: \" + value, ex);\n     }\n   }\n \n   @Override\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SessionImplementor sessionImplementor)\n+  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n       throws HibernateException, SQLException {\n \n     if (value == null) {\n       st.setNull(index, SQL_TYPES[0]);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "cannot find symbol\n",
                "updated_files": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.hibernate.usertype.UserType;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n"
                },
                "compile_error_details": {
                    "onebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java": {
                        "27": {
                            "lines": [
                                {
                                    "line_no": 26,
                                    "content": "import org.hibernate.service.ServiceRegistry;"
                                },
                                {
                                    "line_no": 27,
                                    "content": "import org.hibernate.service.ServiceRegistryBuilder;"
                                },
                                {
                                    "line_no": 28,
                                    "content": "import org.junit.AfterClass;"
                                }
                            ],
                            "error_texts": [
                                "[27,29] cannot find symbol\n",
                                "[27,29] cannot find symbol\nsymbol: class ServiceRegistryBuilder\nlocation: package org.hibernate.service\n"
                            ]
                        },
                        "50": {
                            "lines": [
                                {
                                    "line_no": 49,
                                    "content": "    ServiceRegistry serviceRegistry"
                                },
                                {
                                    "line_no": 50,
                                    "content": "            = new ServiceRegistryBuilder().applySettings("
                                },
                                {
                                    "line_no": 51,
                                    "content": "                    config.getProperties()"
                                }
                            ],
                            "error_texts": [
                                "[50,19] cannot find symbol\n",
                                "[50,19] cannot find symbol\nsymbol: class ServiceRegistryBuilder\nlocation: class org.onebusaway.gtfs.impl.LongRouteDescriptionTest\n"
                            ]
                        }
                    }
                }
            },
            "error": "cannot find symbol\n",
            "span_id": 17545102700295003956
        },
        {
            "input": "```diff\nonebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n@@ -16,7 +16,7 @@\n import java.sql.Types;\n import java.text.ParseException;\n \n-import org.hibernate.engine.spi.SessionImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\n import org.hibernate.HibernateException;\n import org.hibernate.usertype.UserType;\n import org.onebusaway.gtfs.model.calendar.ServiceDate;\n@@ -45,17 +45,17 @@\n   }\n \n   @Override\n-  public Object nullSafeGet(ResultSet rs, String[] names, SessionImplementor sessionImplementor, Object owner)\n+  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n       throws HibernateException, SQLException {\n \n     String value = rs.getString(names[0]);\n \n     if (rs.wasNull())\n       return null;\n \n     try {\n       return ServiceDate.parseString(value);\n     } catch (ParseException ex) {\n       throw new SQLException(\"error parsing service date value: \" + value, ex);\n     }\n   }\n \n   @Override\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SessionImplementor sessionImplementor)\n+  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n       throws HibernateException, SQLException {\n \n     if (value == null) {\n       st.setNull(index, SQL_TYPES[0]);\n```\n```diff\nonebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java\n@@ -27,7 +27,7 @@\n import org.hibernate.service.ServiceRegistry;\n-import org.hibernate.service.ServiceRegistryBuilder;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\n import org.junit.AfterClass;\n@@ -50,7 +50,7 @@\n     ServiceRegistry serviceRegistry\n-            = new ServiceRegistryBuilder().applySettings(\n+            = new StandardServiceRegistryBuilder().applySettings(\n                     config.getProperties()\n     ).buildServiceRegistry();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\n-import org.hibernate.engine.spi.SessionImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.hibernate.usertype.UserType;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
                    "onebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport static org.junit.Assert.assertEquals;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.List;\n\nimport org.hibernate.SessionFactory;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.service.ServiceRegistry;\nimport org.hibernate.boot.registry.StandardServiceRegistryBuilder;\nimport org.junit.AfterClass;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.onebusaway.gtfs.model.Agency;\nimport org.onebusaway.gtfs.model.AgencyAndId;\nimport org.onebusaway.gtfs.model.Route;\nimport org.onebusaway.gtfs.serialization.GtfsReader;\n\npublic class LongRouteDescriptionTest {\n\n  private static SessionFactory _sessionFactory;\n\n  private static final String _agencyId = \"Caltrain\";\n\n  private static HibernateGtfsRelationalDaoImpl _dao;\n\n  @BeforeClass\n  public static void setup() throws IOException {\n\n    Configuration config = new Configuration();\n    config = config.configure(\"org/onebusaway/gtfs/hibernate-configuration.xml\");\n    ServiceRegistry serviceRegistry\n            = new StandardServiceRegistryBuilder().applySettings(\n                    config.getProperties()\n    ).buildServiceRegistry();\n    _sessionFactory = config.buildSessionFactory(serviceRegistry);\n\n    _dao = new HibernateGtfsRelationalDaoImpl(_sessionFactory);\n\n    GtfsReader reader = new GtfsReader();\n    reader.setInputLocation(new File(\n        \"src/test/resources/org/onebusaway/gtfs/caltrain-long-route.zip\"));\n    reader.setEntityStore(_dao);\n    reader.setDefaultAgencyId(_agencyId);\n\n    List<Class<?>> entityClasses = reader.getEntityClasses();\n    entityClasses.clear();\n    entityClasses.add(Agency.class);\n    entityClasses.add(Route.class);\n\n    reader.run();\n  }\n\n  @AfterClass\n  public static void teardown() {\n    _sessionFactory.close();\n  }\n\n  /****\n   * {@link Route} Methods\n   ****/\n\n  @Test\n  public void testGetRouteById() {\n    Route route = _dao.getRouteForId(aid(\"ct_bullet\"));\n    assertEquals(aid(\"ct_bullet\"), route.getId());\n    assertEquals(\"Bullet\", route.getLongName());\n    assertEquals(2, route.getType());\n    assertEquals(null, route.getColor());\n    assertEquals(\"ff0000\", route.getTextColor());\n    assertEquals(null, route.getUrl());\n\n    // Long route description\n    assertEquals(406, route.getDesc().length());\n  }\n\n  /****\n   * Private Methods\n   ****/\n\n  private AgencyAndId aid(String id) {\n    return new AgencyAndId(_agencyId, id);\n  }\n}\n"
                },
                "compile_error_details": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": {
                        "26": {
                            "lines": [
                                {
                                    "line_no": 25,
                                    "content": ""
                                },
                                {
                                    "line_no": 26,
                                    "content": "-import org.hibernate.engine.spi.SessionImplementor;"
                                },
                                {
                                    "line_no": 27,
                                    "content": "+import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                }
                            ],
                            "error_texts": [
                                "[26,1] class, interface, or enum expected\n"
                            ]
                        },
                        "27": {
                            "lines": [
                                {
                                    "line_no": 26,
                                    "content": "-import org.hibernate.engine.spi.SessionImplementor;"
                                },
                                {
                                    "line_no": 27,
                                    "content": "+import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 28,
                                    "content": "import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                }
                            ],
                            "error_texts": [
                                "[27,1] class, interface, or enum expected\n"
                            ]
                        },
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 70,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                },
                                {
                                    "line_no": 71,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[70,125] ';' expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 74,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                },
                                {
                                    "line_no": 75,
                                    "content": "      throws HibernateException, SQLException {"
                                }
                            ],
                            "error_texts": [
                                "[74,10] class, interface, or enum expected\n"
                            ]
                        },
                        "79": {
                            "lines": [
                                {
                                    "line_no": 78,
                                    "content": ""
                                },
                                {
                                    "line_no": 79,
                                    "content": "    if (rs.wasNull())"
                                },
                                {
                                    "line_no": 80,
                                    "content": "      return null;"
                                }
                            ],
                            "error_texts": [
                                "[79,5] class, interface, or enum expected\n"
                            ]
                        },
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": ""
                                },
                                {
                                    "line_no": 82,
                                    "content": "    try {"
                                },
                                {
                                    "line_no": 83,
                                    "content": "      return ServiceDate.parseString(value);"
                                }
                            ],
                            "error_texts": [
                                "[82,5] class, interface, or enum expected\n"
                            ]
                        },
                        "84": {
                            "lines": [
                                {
                                    "line_no": 83,
                                    "content": "      return ServiceDate.parseString(value);"
                                },
                                {
                                    "line_no": 84,
                                    "content": "    } catch (ParseException ex) {"
                                },
                                {
                                    "line_no": 85,
                                    "content": "      throw new SQLException(\"error parsing service date value: \" + value, ex);"
                                }
                            ],
                            "error_texts": [
                                "[84,5] class, interface, or enum expected\n"
                            ]
                        },
                        "86": {
                            "lines": [
                                {
                                    "line_no": 85,
                                    "content": "      throw new SQLException(\"error parsing service date value: \" + value, ex);"
                                },
                                {
                                    "line_no": 86,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 87,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[86,5] class, interface, or enum expected\n"
                            ]
                        },
                        "90": {
                            "lines": [
                                {
                                    "line_no": 89,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 90,
                                    "content": "  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)"
                                },
                                {
                                    "line_no": 91,
                                    "content": "  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)"
                                }
                            ],
                            "error_texts": [
                                "[90,10] class, interface, or enum expected\n"
                            ]
                        },
                        "91": {
                            "lines": [
                                {
                                    "line_no": 90,
                                    "content": "  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)"
                                },
                                {
                                    "line_no": 91,
                                    "content": "  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)"
                                },
                                {
                                    "line_no": 92,
                                    "content": "      throws HibernateException, SQLException {"
                                }
                            ],
                            "error_texts": [
                                "[91,10] class, interface, or enum expected\n"
                            ]
                        },
                        "96": {
                            "lines": [
                                {
                                    "line_no": 95,
                                    "content": "      st.setNull(index, SQL_TYPES[0]);"
                                },
                                {
                                    "line_no": 96,
                                    "content": "    } else {"
                                },
                                {
                                    "line_no": 97,
                                    "content": "      ServiceDate serviceDate = (ServiceDate) value;"
                                }
                            ],
                            "error_texts": [
                                "[96,5] class, interface, or enum expected\n"
                            ]
                        },
                        "98": {
                            "lines": [
                                {
                                    "line_no": 97,
                                    "content": "      ServiceDate serviceDate = (ServiceDate) value;"
                                },
                                {
                                    "line_no": 98,
                                    "content": "      st.setString(index, serviceDate.getAsString());"
                                },
                                {
                                    "line_no": 99,
                                    "content": "    }"
                                }
                            ],
                            "error_texts": [
                                "[98,7] class, interface, or enum expected\n"
                            ]
                        },
                        "99": {
                            "lines": [
                                {
                                    "line_no": 98,
                                    "content": "      st.setString(index, serviceDate.getAsString());"
                                },
                                {
                                    "line_no": 99,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 100,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[99,5] class, interface, or enum expected\n"
                            ]
                        },
                        "103": {
                            "lines": [
                                {
                                    "line_no": 102,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 103,
                                    "content": "  public Object assemble(Serializable cached, Object owner)"
                                },
                                {
                                    "line_no": 104,
                                    "content": "      throws HibernateException {"
                                }
                            ],
                            "error_texts": [
                                "[103,10] class, interface, or enum expected\n"
                            ]
                        },
                        "106": {
                            "lines": [
                                {
                                    "line_no": 105,
                                    "content": "    return deepCopy(cached);"
                                },
                                {
                                    "line_no": 106,
                                    "content": "  }"
                                },
                                {
                                    "line_no": 107,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[106,3] class, interface, or enum expected\n"
                            ]
                        },
                        "109": {
                            "lines": [
                                {
                                    "line_no": 108,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 109,
                                    "content": "  public Serializable disassemble(Object value) throws HibernateException {"
                                },
                                {
                                    "line_no": 110,
                                    "content": "    return (Serializable) deepCopy(value);"
                                }
                            ],
                            "error_texts": [
                                "[109,10] class, interface, or enum expected\n"
                            ]
                        },
                        "111": {
                            "lines": [
                                {
                                    "line_no": 110,
                                    "content": "    return (Serializable) deepCopy(value);"
                                },
                                {
                                    "line_no": 111,
                                    "content": "  }"
                                },
                                {
                                    "line_no": 112,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[111,3] class, interface, or enum expected\n"
                            ]
                        },
                        "114": {
                            "lines": [
                                {
                                    "line_no": 113,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 114,
                                    "content": "  public Object replace(Object original, Object target, Object owner)"
                                },
                                {
                                    "line_no": 115,
                                    "content": "      throws HibernateException {"
                                }
                            ],
                            "error_texts": [
                                "[114,10] class, interface, or enum expected\n"
                            ]
                        },
                        "118": {
                            "lines": [
                                {
                                    "line_no": 117,
                                    "content": "      return null;"
                                },
                                {
                                    "line_no": 118,
                                    "content": "    return deepCopy(original);"
                                },
                                {
                                    "line_no": 119,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[118,5] class, interface, or enum expected\n"
                            ]
                        },
                        "119": {
                            "lines": [
                                {
                                    "line_no": 118,
                                    "content": "    return deepCopy(original);"
                                },
                                {
                                    "line_no": 119,
                                    "content": "  }"
                                },
                                {
                                    "line_no": 120,
                                    "content": "}"
                                }
                            ],
                            "error_texts": [
                                "[119,3] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 15490416314564982266
        },
        {
            "input": "```diff\nonebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n@@ -26,7 +26,6 @@\n \n-import org.hibernate.engine.spi.SessionImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\n import org.hibernate.HibernateException;\n import org.hibernate.usertype.UserType;\n import org.onebusaway.gtfs.model.calendar.ServiceDate;\n@@ -70,17 +69,16 @@\n   }\n \n   @Override\n-  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n-  }\n+  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n       throws HibernateException, SQLException {\n \n     String value = rs.getString(names[0]);\n \n     if (rs.wasNull())\n       return null;\n \n     try {\n       return ServiceDate.parseString(value);\n     } catch (ParseException ex) {\n       throw new SQLException(\"error parsing service date value: \" + value, ex);\n     }\n   }\n \n   @Override\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n+  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n       throws HibernateException, SQLException {\n \n     if (value == null) {\n       st.setNull(index, SQL_TYPES[0]);\n     } else {\n       ServiceDate serviceDate = (ServiceDate) value;\n       st.setString(index, serviceDate.getAsString());\n     }\n   }\n```\n```diff\nonebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java\n@@ -27,7 +27,7 @@\n import org.hibernate.service.ServiceRegistry;\n-import org.hibernate.service.ServiceRegistryBuilder;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\n import org.junit.AfterClass;\n@@ -50,7 +50,7 @@\n     ServiceRegistry serviceRegistry\n-            = new ServiceRegistryBuilder().applySettings(\n+            = new StandardServiceRegistryBuilder().applySettings(\n                     config.getProperties()\n     ).buildServiceRegistry();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "';' expected\n",
                "updated_files": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.hibernate.usertype.UserType;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
                    "onebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport static org.junit.Assert.assertEquals;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.List;\n\nimport org.hibernate.SessionFactory;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.service.ServiceRegistry;\n-import org.hibernate.service.ServiceRegistryBuilder;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\nimport org.junit.AfterClass;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.onebusaway.gtfs.model.Agency;\nimport org.onebusaway.gtfs.model.AgencyAndId;\nimport org.onebusaway.gtfs.model.Route;\nimport org.onebusaway.gtfs.serialization.GtfsReader;\n\npublic class LongRouteDescriptionTest {\n\n  private static SessionFactory _sessionFactory;\n\n  private static final String _agencyId = \"Caltrain\";\n\n  private static HibernateGtfsRelationalDaoImpl _dao;\n\n  @BeforeClass\n  public static void setup() throws IOException {\n\n    Configuration config = new Configuration();\n    config = config.configure(\"org/onebusaway/gtfs/hibernate-configuration.xml\");\n    ServiceRegistry serviceRegistry\n-            = new ServiceRegistryBuilder().applySettings(\n+            = new StandardServiceRegistryBuilder().applySettings(\n                    config.getProperties()\n    ).buildServiceRegistry();\n    _sessionFactory = config.buildSessionFactory(serviceRegistry);\n\n    _dao = new HibernateGtfsRelationalDaoImpl(_sessionFactory);\n\n    GtfsReader reader = new GtfsReader();\n    reader.setInputLocation(new File(\n        \"src/test/resources/org/onebusaway/gtfs/caltrain-long-route.zip\"));\n    reader.setEntityStore(_dao);\n    reader.setDefaultAgencyId(_agencyId);\n\n    List<Class<?>> entityClasses = reader.getEntityClasses();\n    entityClasses.clear();\n    entityClasses.add(Agency.class);\n    entityClasses.add(Route.class);\n\n    reader.run();\n  }\n\n  @AfterClass\n  public static void teardown() {\n    _sessionFactory.close();\n  }\n\n  /****\n   * {@link Route} Methods\n   ****/\n\n  @Test\n  public void testGetRouteById() {\n    Route route = _dao.getRouteForId(aid(\"ct_bullet\"));\n    assertEquals(aid(\"ct_bullet\"), route.getId());\n    assertEquals(\"Bullet\", route.getLongName());\n    assertEquals(2, route.getType());\n    assertEquals(null, route.getColor());\n    assertEquals(\"ff0000\", route.getTextColor());\n    assertEquals(null, route.getUrl());\n\n    // Long route description\n    assertEquals(406, route.getDesc().length());\n  }\n\n  /****\n   * Private Methods\n   ****/\n\n  private AgencyAndId aid(String id) {\n    return new AgencyAndId(_agencyId, id);\n  }\n}\n"
                },
                "compile_error_details": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": {
                        "26": {
                            "lines": [
                                {
                                    "line_no": 25,
                                    "content": ""
                                },
                                {
                                    "line_no": 26,
                                    "content": "-import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 27,
                                    "content": "+import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                }
                            ],
                            "error_texts": [
                                "[26,1] class, interface, or enum expected\n"
                            ]
                        },
                        "27": {
                            "lines": [
                                {
                                    "line_no": 26,
                                    "content": "-import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 27,
                                    "content": "+import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 28,
                                    "content": "import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                }
                            ],
                            "error_texts": [
                                "[27,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": ""
                                },
                                {
                                    "line_no": 72,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 73,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                }
                            ],
                            "error_texts": [
                                "[72,3] illegal start of type\n",
                                "[72,12] ';' expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "';' expected\n",
            "span_id": 17542569259370821028
        },
        {
            "input": "```diff\nonebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n@@ -26,7 +26,6 @@\n \n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\n import org.hibernate.HibernateException;\n import org.hibernate.usertype.UserType;\n import org.onebusaway.gtfs.model.calendar.ServiceDate;\n@@ -70,17 +69,16 @@\n   }\n \n   @Override\n-  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n-  }\n+  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n       throws HibernateException, SQLException {\n \n     String value = rs.getString(names[0]);\n \n     if (rs.wasNull())\n       return null;\n \n     try {\n       return ServiceDate.parseString(value);\n     } catch (ParseException ex) {\n       throw new SQLException(\"error parsing service date value: \" + value, ex);\n     }\n   }\n \n   @Override\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n+  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n       throws HibernateException, SQLException {\n \n     if (value == null) {\n       st.setNull(index, SQL_TYPES[0]);\n     } else {\n       ServiceDate serviceDate = (ServiceDate) value;\n       st.setString(index, serviceDate.getAsString());\n     }\n   }\n```\n```diff\nonebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java\n@@ -27,7 +27,7 @@\n import org.hibernate.service.ServiceRegistry;\n-import org.hibernate.service.ServiceRegistryBuilder;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\n import org.junit.AfterClass;\n@@ -50,7 +50,7 @@\n     ServiceRegistry serviceRegistry\n-            = new ServiceRegistryBuilder().applySettings(\n+            = new StandardServiceRegistryBuilder().applySettings(\n                     config.getProperties()\n     ).buildServiceRegistry();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.hibernate.usertype.UserType;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
                    "onebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport static org.junit.Assert.assertEquals;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.List;\n\nimport org.hibernate.SessionFactory;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.service.ServiceRegistry;\n-import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\nimport org.junit.AfterClass;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.onebusaway.gtfs.model.Agency;\nimport org.onebusaway.gtfs.model.AgencyAndId;\nimport org.onebusaway.gtfs.model.Route;\nimport org.onebusaway.gtfs.serialization.GtfsReader;\n\npublic class LongRouteDescriptionTest {\n\n  private static SessionFactory _sessionFactory;\n\n  private static final String _agencyId = \"Caltrain\";\n\n  private static HibernateGtfsRelationalDaoImpl _dao;\n\n  @BeforeClass\n  public static void setup() throws IOException {\n\n    Configuration config = new Configuration();\n    config = config.configure(\"org/onebusaway/gtfs/hibernate-configuration.xml\");\n    ServiceRegistry serviceRegistry\n-            = new StandardServiceRegistryBuilder().applySettings(\n+            = new StandardServiceRegistryBuilder().applySettings(\n                    config.getProperties()\n    ).buildServiceRegistry();\n    _sessionFactory = config.buildSessionFactory(serviceRegistry);\n\n    _dao = new HibernateGtfsRelationalDaoImpl(_sessionFactory);\n\n    GtfsReader reader = new GtfsReader();\n    reader.setInputLocation(new File(\n        \"src/test/resources/org/onebusaway/gtfs/caltrain-long-route.zip\"));\n    reader.setEntityStore(_dao);\n    reader.setDefaultAgencyId(_agencyId);\n\n    List<Class<?>> entityClasses = reader.getEntityClasses();\n    entityClasses.clear();\n    entityClasses.add(Agency.class);\n    entityClasses.add(Route.class);\n\n    reader.run();\n  }\n\n  @AfterClass\n  public static void teardown() {\n    _sessionFactory.close();\n  }\n\n  /****\n   * {@link Route} Methods\n   ****/\n\n  @Test\n  public void testGetRouteById() {\n    Route route = _dao.getRouteForId(aid(\"ct_bullet\"));\n    assertEquals(aid(\"ct_bullet\"), route.getId());\n    assertEquals(\"Bullet\", route.getLongName());\n    assertEquals(2, route.getType());\n    assertEquals(null, route.getColor());\n    assertEquals(\"ff0000\", route.getTextColor());\n    assertEquals(null, route.getUrl());\n\n    // Long route description\n    assertEquals(406, route.getDesc().length());\n  }\n\n  /****\n   * Private Methods\n   ****/\n\n  private AgencyAndId aid(String id) {\n    return new AgencyAndId(_agencyId, id);\n  }\n}\n"
                },
                "compile_error_details": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": {
                        "26": {
                            "lines": [
                                {
                                    "line_no": 25,
                                    "content": ""
                                },
                                {
                                    "line_no": 26,
                                    "content": "-import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 27,
                                    "content": "+import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                }
                            ],
                            "error_texts": [
                                "[26,1] class, interface, or enum expected\n"
                            ]
                        },
                        "27": {
                            "lines": [
                                {
                                    "line_no": 26,
                                    "content": "-import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 27,
                                    "content": "+import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 28,
                                    "content": "import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                }
                            ],
                            "error_texts": [
                                "[27,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": ""
                                },
                                {
                                    "line_no": 72,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 73,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                }
                            ],
                            "error_texts": [
                                "[72,3] illegal start of type\n",
                                "[72,12] ';' expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 73,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                },
                                {
                                    "line_no": 74,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[73,125] ';' expected\n"
                            ]
                        },
                        "77": {
                            "lines": [
                                {
                                    "line_no": 76,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 77,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                },
                                {
                                    "line_no": 78,
                                    "content": "      throws HibernateException, SQLException {"
                                }
                            ],
                            "error_texts": [
                                "[77,10] class, interface, or enum expected\n"
                            ]
                        },
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": ""
                                },
                                {
                                    "line_no": 82,
                                    "content": "    if (rs.wasNull())"
                                },
                                {
                                    "line_no": 83,
                                    "content": "      return null;"
                                }
                            ],
                            "error_texts": [
                                "[82,5] class, interface, or enum expected\n"
                            ]
                        },
                        "85": {
                            "lines": [
                                {
                                    "line_no": 84,
                                    "content": ""
                                },
                                {
                                    "line_no": 85,
                                    "content": "    try {"
                                },
                                {
                                    "line_no": 86,
                                    "content": "      return ServiceDate.parseString(value);"
                                }
                            ],
                            "error_texts": [
                                "[85,5] class, interface, or enum expected\n"
                            ]
                        },
                        "87": {
                            "lines": [
                                {
                                    "line_no": 86,
                                    "content": "      return ServiceDate.parseString(value);"
                                },
                                {
                                    "line_no": 87,
                                    "content": "    } catch (ParseException ex) {"
                                },
                                {
                                    "line_no": 88,
                                    "content": "      throw new SQLException(\"error parsing service date value: \" + value, ex);"
                                }
                            ],
                            "error_texts": [
                                "[87,5] class, interface, or enum expected\n"
                            ]
                        },
                        "89": {
                            "lines": [
                                {
                                    "line_no": 88,
                                    "content": "      throw new SQLException(\"error parsing service date value: \" + value, ex);"
                                },
                                {
                                    "line_no": 89,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 90,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[89,5] class, interface, or enum expected\n"
                            ]
                        },
                        "93": {
                            "lines": [
                                {
                                    "line_no": 92,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 93,
                                    "content": "  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)"
                                },
                                {
                                    "line_no": 94,
                                    "content": "      throws HibernateException, SQLException {"
                                }
                            ],
                            "error_texts": [
                                "[93,10] class, interface, or enum expected\n"
                            ]
                        },
                        "98": {
                            "lines": [
                                {
                                    "line_no": 97,
                                    "content": "      st.setNull(index, SQL_TYPES[0]);"
                                },
                                {
                                    "line_no": 98,
                                    "content": "    } else {"
                                },
                                {
                                    "line_no": 99,
                                    "content": "      ServiceDate serviceDate = (ServiceDate) value;"
                                }
                            ],
                            "error_texts": [
                                "[98,5] class, interface, or enum expected\n"
                            ]
                        },
                        "100": {
                            "lines": [
                                {
                                    "line_no": 99,
                                    "content": "      ServiceDate serviceDate = (ServiceDate) value;"
                                },
                                {
                                    "line_no": 100,
                                    "content": "      st.setString(index, serviceDate.getAsString());"
                                },
                                {
                                    "line_no": 101,
                                    "content": "    }"
                                }
                            ],
                            "error_texts": [
                                "[100,7] class, interface, or enum expected\n"
                            ]
                        },
                        "101": {
                            "lines": [
                                {
                                    "line_no": 100,
                                    "content": "      st.setString(index, serviceDate.getAsString());"
                                },
                                {
                                    "line_no": 101,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 102,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[101,5] class, interface, or enum expected\n"
                            ]
                        },
                        "105": {
                            "lines": [
                                {
                                    "line_no": 104,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 105,
                                    "content": "  public Object assemble(Serializable cached, Object owner)"
                                },
                                {
                                    "line_no": 106,
                                    "content": "      throws HibernateException {"
                                }
                            ],
                            "error_texts": [
                                "[105,10] class, interface, or enum expected\n"
                            ]
                        },
                        "108": {
                            "lines": [
                                {
                                    "line_no": 107,
                                    "content": "    return deepCopy(cached);"
                                },
                                {
                                    "line_no": 108,
                                    "content": "  }"
                                },
                                {
                                    "line_no": 109,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[108,3] class, interface, or enum expected\n"
                            ]
                        },
                        "111": {
                            "lines": [
                                {
                                    "line_no": 110,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 111,
                                    "content": "  public Serializable disassemble(Object value) throws HibernateException {"
                                },
                                {
                                    "line_no": 112,
                                    "content": "    return (Serializable) deepCopy(value);"
                                }
                            ],
                            "error_texts": [
                                "[111,10] class, interface, or enum expected\n"
                            ]
                        },
                        "113": {
                            "lines": [
                                {
                                    "line_no": 112,
                                    "content": "    return (Serializable) deepCopy(value);"
                                },
                                {
                                    "line_no": 113,
                                    "content": "  }"
                                },
                                {
                                    "line_no": 114,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[113,3] class, interface, or enum expected\n"
                            ]
                        },
                        "116": {
                            "lines": [
                                {
                                    "line_no": 115,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 116,
                                    "content": "  public Object replace(Object original, Object target, Object owner)"
                                },
                                {
                                    "line_no": 117,
                                    "content": "      throws HibernateException {"
                                }
                            ],
                            "error_texts": [
                                "[116,10] class, interface, or enum expected\n"
                            ]
                        },
                        "120": {
                            "lines": [
                                {
                                    "line_no": 119,
                                    "content": "      return null;"
                                },
                                {
                                    "line_no": 120,
                                    "content": "    return deepCopy(original);"
                                },
                                {
                                    "line_no": 121,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[120,5] class, interface, or enum expected\n"
                            ]
                        },
                        "121": {
                            "lines": [
                                {
                                    "line_no": 120,
                                    "content": "    return deepCopy(original);"
                                },
                                {
                                    "line_no": 121,
                                    "content": "  }"
                                },
                                {
                                    "line_no": 122,
                                    "content": "}"
                                }
                            ],
                            "error_texts": [
                                "[121,3] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 13566295779036982978
        },
        {
            "input": "```diff\nonebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n@@ -26,7 +26,6 @@\n \n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\n import org.hibernate.HibernateException;\n import org.hibernate.usertype.UserType;\n import org.onebusaway.gtfs.model.calendar.ServiceDate;\n@@ -70,17 +69,16 @@\n   }\n \n   @Override\n-  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n-  }\n+  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n       throws HibernateException, SQLException {\n \n     String value = rs.getString(names[0]);\n \n     if (rs.wasNull())\n       return null;\n \n     try {\n       return ServiceDate.parseString(value);\n     } catch (ParseException ex) {\n       throw new SQLException(\"error parsing service date value: \" + value, ex);\n     }\n   }\n \n   @Override\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n+  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n       throws HibernateException, SQLException {\n \n     if (value == null) {\n       st.setNull(index, SQL_TYPES[0]);\n     } else {\n       ServiceDate serviceDate = (ServiceDate) value;\n       st.setString(index, serviceDate.getAsString());\n     }\n   }\n```\n```diff\nonebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java\n@@ -27,7 +27,7 @@\n import org.hibernate.service.ServiceRegistry;\n-import org.hibernate.service.ServiceRegistryBuilder;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\n import org.junit.AfterClass;\n@@ -50,7 +50,7 @@\n     ServiceRegistry serviceRegistry\n-            = new ServiceRegistryBuilder().applySettings(\n+            = new StandardServiceRegistryBuilder().applySettings(\n                     config.getProperties()\n     ).buildServiceRegistry();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.hibernate.usertype.UserType;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
                    "onebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport static org.junit.Assert.assertEquals;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.List;\n\nimport org.hibernate.SessionFactory;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.service.ServiceRegistry;\n-import org.hibernate.service.ServiceRegistryBuilder;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\nimport org.junit.AfterClass;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.onebusaway.gtfs.model.Agency;\nimport org.onebusaway.gtfs.model.AgencyAndId;\nimport org.onebusaway.gtfs.model.Route;\nimport org.onebusaway.gtfs.serialization.GtfsReader;\n\npublic class LongRouteDescriptionTest {\n\n  private static SessionFactory _sessionFactory;\n\n  private static final String _agencyId = \"Caltrain\";\n\n  private static HibernateGtfsRelationalDaoImpl _dao;\n\n  @BeforeClass\n  public static void setup() throws IOException {\n\n    Configuration config = new Configuration();\n    config = config.configure(\"org/onebusaway/gtfs/hibernate-configuration.xml\");\n    ServiceRegistry serviceRegistry\n-            = new ServiceRegistryBuilder().applySettings(\n+            = new StandardServiceRegistryBuilder().applySettings(\n                    config.getProperties()\n    ).buildServiceRegistry();\n    _sessionFactory = config.buildSessionFactory(serviceRegistry);\n\n    _dao = new HibernateGtfsRelationalDaoImpl(_sessionFactory);\n\n    GtfsReader reader = new GtfsReader();\n    reader.setInputLocation(new File(\n        \"src/test/resources/org/onebusaway/gtfs/caltrain-long-route.zip\"));\n    reader.setEntityStore(_dao);\n    reader.setDefaultAgencyId(_agencyId);\n\n    List<Class<?>> entityClasses = reader.getEntityClasses();\n    entityClasses.clear();\n    entityClasses.add(Agency.class);\n    entityClasses.add(Route.class);\n\n    reader.run();\n  }\n\n  @AfterClass\n  public static void teardown() {\n    _sessionFactory.close();\n  }\n\n  /****\n   * {@link Route} Methods\n   ****/\n\n  @Test\n  public void testGetRouteById() {\n    Route route = _dao.getRouteForId(aid(\"ct_bullet\"));\n    assertEquals(aid(\"ct_bullet\"), route.getId());\n    assertEquals(\"Bullet\", route.getLongName());\n    assertEquals(2, route.getType());\n    assertEquals(null, route.getColor());\n    assertEquals(\"ff0000\", route.getTextColor());\n    assertEquals(null, route.getUrl());\n\n    // Long route description\n    assertEquals(406, route.getDesc().length());\n  }\n\n  /****\n   * Private Methods\n   ****/\n\n  private AgencyAndId aid(String id) {\n    return new AgencyAndId(_agencyId, id);\n  }\n}\n"
                },
                "compile_error_details": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": {
                        "26": {
                            "lines": [
                                {
                                    "line_no": 25,
                                    "content": ""
                                },
                                {
                                    "line_no": 26,
                                    "content": "-import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 27,
                                    "content": "+import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                }
                            ],
                            "error_texts": [
                                "[26,1] class, interface, or enum expected\n"
                            ]
                        },
                        "27": {
                            "lines": [
                                {
                                    "line_no": 26,
                                    "content": "-import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 27,
                                    "content": "+import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 28,
                                    "content": "import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                }
                            ],
                            "error_texts": [
                                "[27,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": ""
                                },
                                {
                                    "line_no": 72,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 73,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                }
                            ],
                            "error_texts": [
                                "[72,3] illegal start of type\n",
                                "[72,12] ';' expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 73,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                },
                                {
                                    "line_no": 74,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[73,125] ';' expected\n"
                            ]
                        },
                        "77": {
                            "lines": [
                                {
                                    "line_no": 76,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 77,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                },
                                {
                                    "line_no": 78,
                                    "content": "      throws HibernateException, SQLException {"
                                }
                            ],
                            "error_texts": [
                                "[77,10] class, interface, or enum expected\n"
                            ]
                        },
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": ""
                                },
                                {
                                    "line_no": 82,
                                    "content": "    if (rs.wasNull())"
                                },
                                {
                                    "line_no": 83,
                                    "content": "      return null;"
                                }
                            ],
                            "error_texts": [
                                "[82,5] class, interface, or enum expected\n"
                            ]
                        },
                        "85": {
                            "lines": [
                                {
                                    "line_no": 84,
                                    "content": ""
                                },
                                {
                                    "line_no": 85,
                                    "content": "    try {"
                                },
                                {
                                    "line_no": 86,
                                    "content": "      return ServiceDate.parseString(value);"
                                }
                            ],
                            "error_texts": [
                                "[85,5] class, interface, or enum expected\n"
                            ]
                        },
                        "87": {
                            "lines": [
                                {
                                    "line_no": 86,
                                    "content": "      return ServiceDate.parseString(value);"
                                },
                                {
                                    "line_no": 87,
                                    "content": "    } catch (ParseException ex) {"
                                },
                                {
                                    "line_no": 88,
                                    "content": "      throw new SQLException(\"error parsing service date value: \" + value, ex);"
                                }
                            ],
                            "error_texts": [
                                "[87,5] class, interface, or enum expected\n"
                            ]
                        },
                        "89": {
                            "lines": [
                                {
                                    "line_no": 88,
                                    "content": "      throw new SQLException(\"error parsing service date value: \" + value, ex);"
                                },
                                {
                                    "line_no": 89,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 90,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[89,5] class, interface, or enum expected\n"
                            ]
                        },
                        "93": {
                            "lines": [
                                {
                                    "line_no": 92,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 93,
                                    "content": "  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)"
                                },
                                {
                                    "line_no": 94,
                                    "content": "      throws HibernateException, SQLException {"
                                }
                            ],
                            "error_texts": [
                                "[93,10] class, interface, or enum expected\n"
                            ]
                        },
                        "98": {
                            "lines": [
                                {
                                    "line_no": 97,
                                    "content": "      st.setNull(index, SQL_TYPES[0]);"
                                },
                                {
                                    "line_no": 98,
                                    "content": "    } else {"
                                },
                                {
                                    "line_no": 99,
                                    "content": "      ServiceDate serviceDate = (ServiceDate) value;"
                                }
                            ],
                            "error_texts": [
                                "[98,5] class, interface, or enum expected\n"
                            ]
                        },
                        "100": {
                            "lines": [
                                {
                                    "line_no": 99,
                                    "content": "      ServiceDate serviceDate = (ServiceDate) value;"
                                },
                                {
                                    "line_no": 100,
                                    "content": "      st.setString(index, serviceDate.getAsString());"
                                },
                                {
                                    "line_no": 101,
                                    "content": "    }"
                                }
                            ],
                            "error_texts": [
                                "[100,7] class, interface, or enum expected\n"
                            ]
                        },
                        "101": {
                            "lines": [
                                {
                                    "line_no": 100,
                                    "content": "      st.setString(index, serviceDate.getAsString());"
                                },
                                {
                                    "line_no": 101,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 102,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[101,5] class, interface, or enum expected\n"
                            ]
                        },
                        "105": {
                            "lines": [
                                {
                                    "line_no": 104,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 105,
                                    "content": "  public Object assemble(Serializable cached, Object owner)"
                                },
                                {
                                    "line_no": 106,
                                    "content": "      throws HibernateException {"
                                }
                            ],
                            "error_texts": [
                                "[105,10] class, interface, or enum expected\n"
                            ]
                        },
                        "108": {
                            "lines": [
                                {
                                    "line_no": 107,
                                    "content": "    return deepCopy(cached);"
                                },
                                {
                                    "line_no": 108,
                                    "content": "  }"
                                },
                                {
                                    "line_no": 109,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[108,3] class, interface, or enum expected\n"
                            ]
                        },
                        "111": {
                            "lines": [
                                {
                                    "line_no": 110,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 111,
                                    "content": "  public Serializable disassemble(Object value) throws HibernateException {"
                                },
                                {
                                    "line_no": 112,
                                    "content": "    return (Serializable) deepCopy(value);"
                                }
                            ],
                            "error_texts": [
                                "[111,10] class, interface, or enum expected\n"
                            ]
                        },
                        "113": {
                            "lines": [
                                {
                                    "line_no": 112,
                                    "content": "    return (Serializable) deepCopy(value);"
                                },
                                {
                                    "line_no": 113,
                                    "content": "  }"
                                },
                                {
                                    "line_no": 114,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[113,3] class, interface, or enum expected\n"
                            ]
                        },
                        "116": {
                            "lines": [
                                {
                                    "line_no": 115,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 116,
                                    "content": "  public Object replace(Object original, Object target, Object owner)"
                                },
                                {
                                    "line_no": 117,
                                    "content": "      throws HibernateException {"
                                }
                            ],
                            "error_texts": [
                                "[116,10] class, interface, or enum expected\n"
                            ]
                        },
                        "120": {
                            "lines": [
                                {
                                    "line_no": 119,
                                    "content": "      return null;"
                                },
                                {
                                    "line_no": 120,
                                    "content": "    return deepCopy(original);"
                                },
                                {
                                    "line_no": 121,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[120,5] class, interface, or enum expected\n"
                            ]
                        },
                        "121": {
                            "lines": [
                                {
                                    "line_no": 120,
                                    "content": "    return deepCopy(original);"
                                },
                                {
                                    "line_no": 121,
                                    "content": "  }"
                                },
                                {
                                    "line_no": 122,
                                    "content": "}"
                                }
                            ],
                            "error_texts": [
                                "[121,3] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 678123447169631243
        },
        {
            "input": "```diff\nonebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java\n@@ -26,7 +26,6 @@\n \n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\n import org.hibernate.HibernateException;\n import org.hibernate.usertype.UserType;\n import org.onebusaway.gtfs.model.calendar.ServiceDate;\n@@ -70,17 +69,16 @@\n   }\n \n   @Override\n-  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n-  }\n+  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n       throws HibernateException, SQLException {\n \n     String value = rs.getString(names[0]);\n \n     if (rs.wasNull())\n       return null;\n \n     try {\n       return ServiceDate.parseString(value);\n     } catch (ParseException ex) {\n       throw new SQLException(\"error parsing service date value: \" + value, ex);\n     }\n   }\n \n   @Override\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n-  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n+  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n       throws HibernateException, SQLException {\n \n     if (value == null) {\n       st.setNull(index, SQL_TYPES[0]);\n     } else {\n       ServiceDate serviceDate = (ServiceDate) value;\n       st.setString(index, serviceDate.getAsString());\n     }\n   }\n```\n```diff\nonebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java\n@@ -27,7 +27,7 @@\n import org.hibernate.service.ServiceRegistry;\n-import org.hibernate.service.ServiceRegistryBuilder;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\n import org.junit.AfterClass;\n@@ -50,7 +50,7 @@\n     ServiceRegistry serviceRegistry\n-            = new ServiceRegistryBuilder().applySettings(\n+            = new StandardServiceRegistryBuilder().applySettings(\n                     config.getProperties()\n     ).buildServiceRegistry();\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\n-import org.hibernate.engine.spi.SharedSessionContractImplementor;\n+import org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.hibernate.engine.spi.SharedSessionContractImplementor;\nimport org.hibernate.usertype.UserType;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
                    "onebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport static org.junit.Assert.assertEquals;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.List;\n\nimport org.hibernate.SessionFactory;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.service.ServiceRegistry;\n-import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\nimport org.junit.AfterClass;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.onebusaway.gtfs.model.Agency;\nimport org.onebusaway.gtfs.model.AgencyAndId;\nimport org.onebusaway.gtfs.model.Route;\nimport org.onebusaway.gtfs.serialization.GtfsReader;\n\npublic class LongRouteDescriptionTest {\n\n  private static SessionFactory _sessionFactory;\n\n  private static final String _agencyId = \"Caltrain\";\n\n  private static HibernateGtfsRelationalDaoImpl _dao;\n\n  @BeforeClass\n  public static void setup() throws IOException {\n\n    Configuration config = new Configuration();\n    config = config.configure(\"org/onebusaway/gtfs/hibernate-configuration.xml\");\n    ServiceRegistry serviceRegistry\n-            = new StandardServiceRegistryBuilder().applySettings(\n+            = new StandardServiceRegistryBuilder().applySettings(\n                    config.getProperties()\n    ).buildServiceRegistry();\n    _sessionFactory = config.buildSessionFactory(serviceRegistry);\n\n    _dao = new HibernateGtfsRelationalDaoImpl(_sessionFactory);\n\n    GtfsReader reader = new GtfsReader();\n    reader.setInputLocation(new File(\n        \"src/test/resources/org/onebusaway/gtfs/caltrain-long-route.zip\"));\n    reader.setEntityStore(_dao);\n    reader.setDefaultAgencyId(_agencyId);\n\n    List<Class<?>> entityClasses = reader.getEntityClasses();\n    entityClasses.clear();\n    entityClasses.add(Agency.class);\n    entityClasses.add(Route.class);\n\n    reader.run();\n  }\n\n  @AfterClass\n  public static void teardown() {\n    _sessionFactory.close();\n  }\n\n  /****\n   * {@link Route} Methods\n   ****/\n\n  @Test\n  public void testGetRouteById() {\n    Route route = _dao.getRouteForId(aid(\"ct_bullet\"));\n    assertEquals(aid(\"ct_bullet\"), route.getId());\n    assertEquals(\"Bullet\", route.getLongName());\n    assertEquals(2, route.getType());\n    assertEquals(null, route.getColor());\n    assertEquals(\"ff0000\", route.getTextColor());\n    assertEquals(null, route.getUrl());\n\n    // Long route description\n    assertEquals(406, route.getDesc().length());\n  }\n\n  /****\n   * Private Methods\n   ****/\n\n  private AgencyAndId aid(String id) {\n    return new AgencyAndId(_agencyId, id);\n  }\n}\n"
                },
                "compile_error_details": {
                    "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java": {
                        "26": {
                            "lines": [
                                {
                                    "line_no": 25,
                                    "content": ""
                                },
                                {
                                    "line_no": 26,
                                    "content": "-import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 27,
                                    "content": "+import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                }
                            ],
                            "error_texts": [
                                "[26,1] class, interface, or enum expected\n"
                            ]
                        },
                        "27": {
                            "lines": [
                                {
                                    "line_no": 26,
                                    "content": "-import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 27,
                                    "content": "+import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                },
                                {
                                    "line_no": 28,
                                    "content": "import org.hibernate.engine.spi.SharedSessionContractImplementor;"
                                }
                            ],
                            "error_texts": [
                                "[27,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": ""
                                },
                                {
                                    "line_no": 72,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 73,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                }
                            ],
                            "error_texts": [
                                "[72,3] illegal start of type\n",
                                "[72,12] ';' expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 73,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                },
                                {
                                    "line_no": 74,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[73,125] ';' expected\n"
                            ]
                        },
                        "77": {
                            "lines": [
                                {
                                    "line_no": 76,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 77,
                                    "content": "  public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor sessionImplementor, Object owner)"
                                },
                                {
                                    "line_no": 78,
                                    "content": "      throws HibernateException, SQLException {"
                                }
                            ],
                            "error_texts": [
                                "[77,10] class, interface, or enum expected\n"
                            ]
                        },
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": ""
                                },
                                {
                                    "line_no": 82,
                                    "content": "    if (rs.wasNull())"
                                },
                                {
                                    "line_no": 83,
                                    "content": "      return null;"
                                }
                            ],
                            "error_texts": [
                                "[82,5] class, interface, or enum expected\n"
                            ]
                        },
                        "85": {
                            "lines": [
                                {
                                    "line_no": 84,
                                    "content": ""
                                },
                                {
                                    "line_no": 85,
                                    "content": "    try {"
                                },
                                {
                                    "line_no": 86,
                                    "content": "      return ServiceDate.parseString(value);"
                                }
                            ],
                            "error_texts": [
                                "[85,5] class, interface, or enum expected\n"
                            ]
                        },
                        "87": {
                            "lines": [
                                {
                                    "line_no": 86,
                                    "content": "      return ServiceDate.parseString(value);"
                                },
                                {
                                    "line_no": 87,
                                    "content": "    } catch (ParseException ex) {"
                                },
                                {
                                    "line_no": 88,
                                    "content": "      throw new SQLException(\"error parsing service date value: \" + value, ex);"
                                }
                            ],
                            "error_texts": [
                                "[87,5] class, interface, or enum expected\n"
                            ]
                        },
                        "89": {
                            "lines": [
                                {
                                    "line_no": 88,
                                    "content": "      throw new SQLException(\"error parsing service date value: \" + value, ex);"
                                },
                                {
                                    "line_no": 89,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 90,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[89,5] class, interface, or enum expected\n"
                            ]
                        },
                        "93": {
                            "lines": [
                                {
                                    "line_no": 92,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 93,
                                    "content": "  public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor sessionImplementor)"
                                },
                                {
                                    "line_no": 94,
                                    "content": "      throws HibernateException, SQLException {"
                                }
                            ],
                            "error_texts": [
                                "[93,10] class, interface, or enum expected\n"
                            ]
                        },
                        "98": {
                            "lines": [
                                {
                                    "line_no": 97,
                                    "content": "      st.setNull(index, SQL_TYPES[0]);"
                                },
                                {
                                    "line_no": 98,
                                    "content": "    } else {"
                                },
                                {
                                    "line_no": 99,
                                    "content": "      ServiceDate serviceDate = (ServiceDate) value;"
                                }
                            ],
                            "error_texts": [
                                "[98,5] class, interface, or enum expected\n"
                            ]
                        },
                        "100": {
                            "lines": [
                                {
                                    "line_no": 99,
                                    "content": "      ServiceDate serviceDate = (ServiceDate) value;"
                                },
                                {
                                    "line_no": 100,
                                    "content": "      st.setString(index, serviceDate.getAsString());"
                                },
                                {
                                    "line_no": 101,
                                    "content": "    }"
                                }
                            ],
                            "error_texts": [
                                "[100,7] class, interface, or enum expected\n"
                            ]
                        },
                        "101": {
                            "lines": [
                                {
                                    "line_no": 100,
                                    "content": "      st.setString(index, serviceDate.getAsString());"
                                },
                                {
                                    "line_no": 101,
                                    "content": "    }"
                                },
                                {
                                    "line_no": 102,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[101,5] class, interface, or enum expected\n"
                            ]
                        },
                        "105": {
                            "lines": [
                                {
                                    "line_no": 104,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 105,
                                    "content": "  public Object assemble(Serializable cached, Object owner)"
                                },
                                {
                                    "line_no": 106,
                                    "content": "      throws HibernateException {"
                                }
                            ],
                            "error_texts": [
                                "[105,10] class, interface, or enum expected\n"
                            ]
                        },
                        "108": {
                            "lines": [
                                {
                                    "line_no": 107,
                                    "content": "    return deepCopy(cached);"
                                },
                                {
                                    "line_no": 108,
                                    "content": "  }"
                                },
                                {
                                    "line_no": 109,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[108,3] class, interface, or enum expected\n"
                            ]
                        },
                        "111": {
                            "lines": [
                                {
                                    "line_no": 110,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 111,
                                    "content": "  public Serializable disassemble(Object value) throws HibernateException {"
                                },
                                {
                                    "line_no": 112,
                                    "content": "    return (Serializable) deepCopy(value);"
                                }
                            ],
                            "error_texts": [
                                "[111,10] class, interface, or enum expected\n"
                            ]
                        },
                        "113": {
                            "lines": [
                                {
                                    "line_no": 112,
                                    "content": "    return (Serializable) deepCopy(value);"
                                },
                                {
                                    "line_no": 113,
                                    "content": "  }"
                                },
                                {
                                    "line_no": 114,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[113,3] class, interface, or enum expected\n"
                            ]
                        },
                        "116": {
                            "lines": [
                                {
                                    "line_no": 115,
                                    "content": "  @Override"
                                },
                                {
                                    "line_no": 116,
                                    "content": "  public Object replace(Object original, Object target, Object owner)"
                                },
                                {
                                    "line_no": 117,
                                    "content": "      throws HibernateException {"
                                }
                            ],
                            "error_texts": [
                                "[116,10] class, interface, or enum expected\n"
                            ]
                        },
                        "120": {
                            "lines": [
                                {
                                    "line_no": 119,
                                    "content": "      return null;"
                                },
                                {
                                    "line_no": 120,
                                    "content": "    return deepCopy(original);"
                                },
                                {
                                    "line_no": 121,
                                    "content": "  }"
                                }
                            ],
                            "error_texts": [
                                "[120,5] class, interface, or enum expected\n"
                            ]
                        },
                        "121": {
                            "lines": [
                                {
                                    "line_no": 120,
                                    "content": "    return deepCopy(original);"
                                },
                                {
                                    "line_no": 121,
                                    "content": "  }"
                                },
                                {
                                    "line_no": 122,
                                    "content": "}"
                                }
                            ],
                            "error_texts": [
                                "[121,3] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 8587615413908994826
        }
    ],
    "read_file": [
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/ServiceDateUserType.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n * Copyright (C) 2011 Google, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport java.io.Serializable;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.text.ParseException;\n\nimport org.hibernate.HibernateException;\nimport org.hibernate.engine.spi.SessionImplementor;\nimport org.hibernate.usertype.UserType;\nimport org.onebusaway.gtfs.model.calendar.ServiceDate;\n\npublic class ServiceDateUserType implements UserType {\n\n  private static final int[] SQL_TYPES = {Types.VARCHAR};\n\n  @Override\n  public Class<?> returnedClass() {\n    return ServiceDate.class;\n  }\n\n  @Override\n  public int[] sqlTypes() {\n    return SQL_TYPES;\n  }\n\n  @Override\n  public boolean equals(Object x, Object y) throws HibernateException {\n    return x == y;\n  }\n\n  @Override\n  public int hashCode(Object x) throws HibernateException {\n    return x.hashCode();\n  }\n\n  @Override\n  public boolean isMutable() {\n    return false;\n  }\n\n  @Override\n  public Object deepCopy(Object value) throws HibernateException {\n    if (value == null) {\n      return null;\n    }\n    return new ServiceDate((ServiceDate) value);\n  }\n\n  @Override\n  public Object nullSafeGet(ResultSet rs, String[] names, SessionImplementor sessionImplementor, Object owner)\n      throws HibernateException, SQLException {\n\n    String value = rs.getString(names[0]);\n\n    if (rs.wasNull())\n      return null;\n\n    try {\n      return ServiceDate.parseString(value);\n    } catch (ParseException ex) {\n      throw new SQLException(\"error parsing service date value: \" + value, ex);\n    }\n  }\n\n  @Override\n  public void nullSafeSet(PreparedStatement st, Object value, int index, SessionImplementor sessionImplementor)\n      throws HibernateException, SQLException {\n\n    if (value == null) {\n      st.setNull(index, SQL_TYPES[0]);\n    } else {\n      ServiceDate serviceDate = (ServiceDate) value;\n      st.setString(index, serviceDate.getAsString());\n    }\n  }\n\n  @Override\n  public Object assemble(Serializable cached, Object owner)\n      throws HibernateException {\n    return deepCopy(cached);\n  }\n\n  @Override\n  public Serializable disassemble(Object value) throws HibernateException {\n    return (Serializable) deepCopy(value);\n  }\n\n  @Override\n  public Object replace(Object original, Object target, Object owner)\n      throws HibernateException {\n    if (original == null)\n      return null;\n    return deepCopy(original);\n  }\n}\n",
            "error": "",
            "span_id": 10500955402681112472
        },
        {
            "input": "onebusaway-gtfs-hibernate/src/test/java/org/onebusaway/gtfs/impl/LongRouteDescriptionTest.java",
            "output": "/**\n * Copyright (C) 2011 Brian Ferris <bdferris@onebusaway.org>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.onebusaway.gtfs.impl;\n\nimport static org.junit.Assert.assertEquals;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.List;\n\nimport org.hibernate.SessionFactory;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.service.ServiceRegistry;\nimport org.hibernate.service.ServiceRegistryBuilder;\nimport org.junit.AfterClass;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.onebusaway.gtfs.model.Agency;\nimport org.onebusaway.gtfs.model.AgencyAndId;\nimport org.onebusaway.gtfs.model.Route;\nimport org.onebusaway.gtfs.serialization.GtfsReader;\n\npublic class LongRouteDescriptionTest {\n\n  private static SessionFactory _sessionFactory;\n\n  private static final String _agencyId = \"Caltrain\";\n\n  private static HibernateGtfsRelationalDaoImpl _dao;\n\n  @BeforeClass\n  public static void setup() throws IOException {\n\n    Configuration config = new Configuration();\n    config = config.configure(\"org/onebusaway/gtfs/hibernate-configuration.xml\");\n    ServiceRegistry serviceRegistry\n            = new ServiceRegistryBuilder().applySettings(\n                    config.getProperties()\n    ).buildServiceRegistry();\n    _sessionFactory = config.buildSessionFactory(serviceRegistry);\n\n    _dao = new HibernateGtfsRelationalDaoImpl(_sessionFactory);\n\n    GtfsReader reader = new GtfsReader();\n    reader.setInputLocation(new File(\n        \"src/test/resources/org/onebusaway/gtfs/caltrain-long-route.zip\"));\n    reader.setEntityStore(_dao);\n    reader.setDefaultAgencyId(_agencyId);\n\n    List<Class<?>> entityClasses = reader.getEntityClasses();\n    entityClasses.clear();\n    entityClasses.add(Agency.class);\n    entityClasses.add(Route.class);\n\n    reader.run();\n  }\n\n  @AfterClass\n  public static void teardown() {\n    _sessionFactory.close();\n  }\n\n  /****\n   * {@link Route} Methods\n   ****/\n\n  @Test\n  public void testGetRouteById() {\n    Route route = _dao.getRouteForId(aid(\"ct_bullet\"));\n    assertEquals(aid(\"ct_bullet\"), route.getId());\n    assertEquals(\"Bullet\", route.getLongName());\n    assertEquals(2, route.getType());\n    assertEquals(null, route.getColor());\n    assertEquals(\"ff0000\", route.getTextColor());\n    assertEquals(null, route.getUrl());\n\n    // Long route description\n    assertEquals(406, route.getDesc().length());\n  }\n\n  /****\n   * Private Methods\n   ****/\n\n  private AgencyAndId aid(String id) {\n    return new AgencyAndId(_agencyId, id);\n  }\n}\n",
            "error": "",
            "span_id": 14882843927683205907
        }
    ],
    "get_directory_tree": [
        {
            "input": "onebusaway-gtfs-hibernate/src/main/java/org/onebusaway/gtfs/impl/",
            "output": "[\n    {\n        \"name\": \"ServiceDateUserType.java\",\n        \"type\": \"file\"\n    },\n    {\n        \"name\": \"HibernateOperationsImpl.java\",\n        \"type\": \"file\"\n    },\n    {\n        \"name\": \"HibernateGtfsRelationalDaoImpl.java\",\n        \"type\": \"file\"\n    }\n]",
            "error": "",
            "span_id": 7911795455306280960
        }
    ],
    "get_language_server_suggestions": [],
    "reset_repo": []
}