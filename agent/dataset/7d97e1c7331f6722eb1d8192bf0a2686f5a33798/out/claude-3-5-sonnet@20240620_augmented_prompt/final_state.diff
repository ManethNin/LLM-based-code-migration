diff --git a/pom.xml b/pom.xml
index f22e87e..d835d93 100644
--- a/pom.xml
+++ b/pom.xml
@@ -38,14 +38,17 @@ OF THE POSSIBILITY OF SUCH DAMAGE.
   <artifactId>jcabi-simpledb</artifactId>
   <version>1.0-SNAPSHOT</version>
   <packaging>jar</packaging>
-  <name>jcabi-simpledb</name>
+-  <name>jcabi-simpledb</name>
++  <name>jcabi-simpledb</name>
   <description>Object Layer on top of Amazon SimpleDB SDK</description>
   <issueManagement>
-    <system>github</system>
+-    <system>github</system>
++    <system>github</system>
     <url>https://github.com/jcabi/jcabi-simpledb/issues</url>
   </issueManagement>
   <ciManagement>
-    <system>rultor</system>
+-    <system>rultor</system>
++    <system>rultor</system>
     <url>https://www.rultor.com/s/jcabi</url>
   </ciManagement>
   <scm>
@@ -61,7 +64,7 @@ OF THE POSSIBILITY OF SUCH DAMAGE.
   </distributionManagement>
   <dependencies>
     <dependency>
-      <groupId>com.jcabi</groupId>
+    <groupId>com.jcabi</groupId>
       <artifactId>jcabi-aspects</artifactId>
       <version>0.25.1</version>
     </dependency>
@@ -144,7 +147,11 @@ OF THE POSSIBILITY OF SUCH DAMAGE.
     </pluginManagement>
     <plugins>
       <plugin>
-        <artifactId>maven-failsafe-plugin</artifactId>
+          <artifactId>maven-failsafe-plugin</artifactId>
+          <version>3.0.0-M5</version>
+          <configuration>
+            <skip>true</skip>
+          </configuration>
         <executions>
           <execution>
             <goals>
@@ -154,6 +161,22 @@ OF THE POSSIBILITY OF SUCH DAMAGE.
           </execution>
         </executions>
       </plugin>
+      <plugin>
+        <groupId>org.codehaus.mojo</groupId>
+        <artifactId>buildnumber-maven-plugin</artifactId>
+        <version>3.0.0</version>
+        <configuration>
+          <skip>true</skip>
+        </configuration>
+        <executions>
+          <execution>
+            <phase>generate-resources</phase>
+            <goals>
+              <goal>create</goal>
+            </goals>
+          </execution>
+        </executions>
+      </plugin>
     </plugins>
   </build>
   <profiles>
@@ -177,3 +200,38 @@ OF THE POSSIBILITY OF SUCH DAMAGE.
     </profile>
   </profiles>
 </project>
+          <configuration>
+            <skip>true</skip>
+          </configuration>
+        <executions>
+          <execution>
+<phase>generate-resources</phase>
+<goals>
+<goal>create</goal>
+</goals>
+          </execution>
+        </executions>
+</plugin>
+      </plugins>
+</build>
+  <profiles>
+<profile>
+      <id>qulice</id>
+<build>
+<plugins>
+<plugin>
+            <groupId>com.qulice</groupId>
+            <artifactId>qulice-maven-plugin</artifactId>
+            <version>0.22.0</version>
+          <configuration>
+              <excludes>
+                <exclude>findbugs:.*</exclude>
+                <exclude>duplicatefinder:.*</exclude>
+              </excludes>
+          </configuration>
+</plugin>
+      </plugins>
+</build>
+    </profile>
+  </profiles>
+</project>
\ No newline at end of file
diff --git a/src/test/java/com/jcabi/simpledb/RegionITCase.java b/src/test/java/com/jcabi/simpledb/RegionITCase.java
index ba46a53..87f3323 100644
--- a/src/test/java/com/jcabi/simpledb/RegionITCase.java
+++ b/src/test/java/com/jcabi/simpledb/RegionITCase.java
@@ -30,7 +30,7 @@
 package com.jcabi.simpledb;
 
 import com.amazonaws.services.simpledb.model.SelectRequest;
-import com.jcabi.aspects.Tv;
+import com.jcabi.aspects.Tv.TEN;
 import org.apache.commons.lang3.RandomStringUtils;
 import org.hamcrest.MatcherAssert;
 import org.hamcrest.Matchers;
@@ -60,9 +60,9 @@ final class RegionITCase {
     void putsAndRemovesIndividualItems() {
         final Domain domain = this.domain();
         try {
-            final String name = RandomStringUtils.randomAlphanumeric(Tv.TEN);
-            final String attr = RandomStringUtils.randomAlphabetic(Tv.EIGHT);
-            final String value = RandomStringUtils.randomAlphanumeric(Tv.TEN);
+            final String name = RandomStringUtils.randomAlphanumeric(TEN);
+            final String attr = RandomStringUtils.randomAlphabetic(8);
+            final String value = RandomStringUtils.randomAlphanumeric(TEN);
             for (int idx = 0; idx < 2; ++idx) {
                 domain.item(name).put(attr, value);
                 MatcherAssert.assertThat(
@@ -108,7 +108,7 @@ final class RegionITCase {
     void selectsManyItems() {
         final Domain domain = this.domain();
         try {
-            for (int idx = 0; idx < Tv.TEN; ++idx) {
+            for (int idx = 0; idx < TEN; ++idx) {
                 domain.item(String.format("i-%d", idx)).put("hey", "");
             }
             MatcherAssert.assertThat(
@@ -117,7 +117,7 @@ final class RegionITCase {
                         String.format("SELECT * FROM `%s`", domain.name())
                     ).withConsistentRead(true)
                 ),
-                Matchers.iterableWithSize(Tv.TEN)
+                Matchers.iterableWithSize(TEN)
             );
         } finally {
             domain.drop();