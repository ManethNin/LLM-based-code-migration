{
    "validate_diffs": [],
    "compile_maven": [],
    "read_file": [
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 5355725727455163449
        },
        {
            "input": "ui-tests/pom.xml",
            "output": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>edu.hm.hafner</groupId>\n    <artifactId>codingstyle-pom</artifactId>\n    <version>2.29.0</version>\n    <relativePath/>\n  </parent>\n\n  <groupId>io.jenkins.plugins</groupId>\n  <artifactId>code-coverage-api-ui-tests</artifactId>\n  <packaging>jar</packaging>\n  <version>UNVERSIONED</version>\n  <name>UI Tests of Code Coverage Plugin</name>\n\n  <properties>\n    <jenkins.version>2.397</jenkins.version>\n    <hpi-plugin.version>3.40</hpi-plugin.version>\n    <json-smart.version>2.3</json-smart.version>\n    <json-unit-assertj.version>2.37.0</json-unit-assertj.version>\n    <module.name>${project.groupId}.code.coverage.api.ui.tests</module.name>\n\n    <!-- Maven Surefire ArgLine -->\n    <argLine>-Djava.awt.headless=true -Xmx1024m -Djenkins.test.timeout=1000 --add-opens java.base/sun.reflect.annotation=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.util.concurrent=ALL-UNNAMED</argLine>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.jenkins-ci.main</groupId>\n        <artifactId>jenkins-core</artifactId>\n        <version>${jenkins.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.jenkins-ci</groupId>\n      <artifactId>acceptance-test-harness</artifactId>\n      <version>5528.v806749710b_83</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.httpcomponents</groupId>\n      <artifactId>httpclient</artifactId>\n      <version>4.5.14</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.vintage</groupId>\n      <artifactId>junit-vintage-engine</artifactId>\n      <version>${junit.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-assertj</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-json-path</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <repositories>\n    <repository>\n      <id>maven.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/releases/</url>\n    </repository>\n    <repository>\n      <id>incrementals.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/incrementals/</url>\n    </repository>\n  </repositories>\n\n  <profiles>\n    <profile>\n      <id>no-ui-tests-on-windows</id>\n      <activation>\n        <os>\n          <family>windows</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>no-ui-tests-on-mac</id>\n      <activation>\n        <os>\n          <family>mac</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>ui-tests-locally</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <configuration>\n              <reuseForks>false</reuseForks>\n              <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n              <environmentVariables>\n                <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n                <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n                <BROWSER>firefox</BROWSER>\n              </environmentVariables>\n              <rerunFailingTestsCount>1</rerunFailingTestsCount>\n              <includes>\n                <include>**/*Tests.java</include>\n                <include>**/*Test.java</include>\n              </includes>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n      <properties>\n        <maven.test.skip>false</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>consume-incrementals</id>\n    </profile>\n    <profile>\n      <id>might-produce-incrementals</id>\n    </profile>\n  </profiles>\n\n  <pluginRepositories>\n    <pluginRepository>\n      <id>repo.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/public/</url>\n    </pluginRepository>\n  </pluginRepositories>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.revapi</groupId>\n        <artifactId>revapi-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-assertions-generator-maven-plugin</artifactId>\n        <configuration>\n          <packages combine.children=\"append\">\n            <package>io.jenkins.plugins.coverage</package>\n          </packages>\n          <excludes>\n            <exclude>.*Test</exclude>\n            <exclude>.*Table</exclude>\n          </excludes>\n          <entryPointClassPackage>io.jenkins.plugins.coverage</entryPointClassPackage>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-resources-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>copy-resources</id>\n            <phase>process-resources</phase>\n            <goals>\n              <goal>copy-resources</goal>\n            </goals>\n            <configuration>\n              <outputDirectory>../plugin/target/test-classes/test-dependencies</outputDirectory>\n              <resources>\n                <resource>\n                  <directory>../plugin/target/</directory>\n                  <includes>\n                    <include>code-coverage-api.hpi</include>\n                  </includes>\n                  <filtering>false</filtering>\n                </resource>\n              </resources>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <skip>true</skip> <!-- FIXME: disable UI test right now since we need new page objects -->\n          <reuseForks>false</reuseForks>\n          <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n          <environmentVariables>\n            <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n            <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n            <BROWSER>firefox-container</BROWSER>\n          </environmentVariables>\n          <rerunFailingTestsCount>1</rerunFailingTestsCount>\n          <includes>\n            <include>**/io.jenkins.plugins.coverage.SmokeTests.java</include>\n          </includes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-help-plugin</artifactId>\n        <version>3.4.0</version>\n        <executions>\n          <execution>\n            <id>show-profiles</id>\n            <phase>compile</phase>\n            <goals>\n              <goal>active-profiles</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <configuration>\n          <archive>\n            <manifestEntries>\n              <Automatic-Module-Name>coverage.ui.tests</Automatic-Module-Name>\n            </manifestEntries>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.jenkins-ci.tools</groupId>\n        <artifactId>maven-hpi-plugin</artifactId>\n        <version>${hpi-plugin.version}</version>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n",
            "error": "",
            "span_id": 16779365960464962238
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 12985810054995780278
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 17237656076940004947
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 15190745430892848738
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 985419368150591509
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 2266177954216739594
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 2083188002172940814
        },
        {
            "input": "ui-tests/pom.xml",
            "output": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>edu.hm.hafner</groupId>\n    <artifactId>codingstyle-pom</artifactId>\n    <version>2.29.0</version>\n    <relativePath/>\n  </parent>\n\n  <groupId>io.jenkins.plugins</groupId>\n  <artifactId>code-coverage-api-ui-tests</artifactId>\n  <packaging>jar</packaging>\n  <version>UNVERSIONED</version>\n  <name>UI Tests of Code Coverage Plugin</name>\n\n  <properties>\n    <jenkins.version>2.397</jenkins.version>\n    <hpi-plugin.version>3.40</hpi-plugin.version>\n    <json-smart.version>2.3</json-smart.version>\n    <json-unit-assertj.version>2.37.0</json-unit-assertj.version>\n    <module.name>${project.groupId}.code.coverage.api.ui.tests</module.name>\n\n    <!-- Maven Surefire ArgLine -->\n    <argLine>-Djava.awt.headless=true -Xmx1024m -Djenkins.test.timeout=1000 --add-opens java.base/sun.reflect.annotation=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.util.concurrent=ALL-UNNAMED</argLine>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.jenkins-ci.main</groupId>\n        <artifactId>jenkins-core</artifactId>\n        <version>${jenkins.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.jenkins-ci</groupId>\n      <artifactId>acceptance-test-harness</artifactId>\n      <version>5528.v806749710b_83</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.httpcomponents</groupId>\n      <artifactId>httpclient</artifactId>\n      <version>4.5.14</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.vintage</groupId>\n      <artifactId>junit-vintage-engine</artifactId>\n      <version>${junit.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-assertj</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-json-path</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <repositories>\n    <repository>\n      <id>maven.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/releases/</url>\n    </repository>\n    <repository>\n      <id>incrementals.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/incrementals/</url>\n    </repository>\n  </repositories>\n\n  <profiles>\n    <profile>\n      <id>no-ui-tests-on-windows</id>\n      <activation>\n        <os>\n          <family>windows</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>no-ui-tests-on-mac</id>\n      <activation>\n        <os>\n          <family>mac</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>ui-tests-locally</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <configuration>\n              <reuseForks>false</reuseForks>\n              <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n              <environmentVariables>\n                <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n                <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n                <BROWSER>firefox</BROWSER>\n              </environmentVariables>\n              <rerunFailingTestsCount>1</rerunFailingTestsCount>\n              <includes>\n                <include>**/*Tests.java</include>\n                <include>**/*Test.java</include>\n              </includes>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n      <properties>\n        <maven.test.skip>false</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>consume-incrementals</id>\n    </profile>\n    <profile>\n      <id>might-produce-incrementals</id>\n    </profile>\n  </profiles>\n\n  <pluginRepositories>\n    <pluginRepository>\n      <id>repo.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/public/</url>\n    </pluginRepository>\n  </pluginRepositories>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.revapi</groupId>\n        <artifactId>revapi-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-assertions-generator-maven-plugin</artifactId>\n        <configuration>\n          <packages combine.children=\"append\">\n            <package>io.jenkins.plugins.coverage</package>\n          </packages>\n          <excludes>\n            <exclude>.*Test</exclude>\n            <exclude>.*Table</exclude>\n          </excludes>\n          <entryPointClassPackage>io.jenkins.plugins.coverage</entryPointClassPackage>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-resources-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>copy-resources</id>\n            <phase>process-resources</phase>\n            <goals>\n              <goal>copy-resources</goal>\n            </goals>\n            <configuration>\n              <outputDirectory>../plugin/target/test-classes/test-dependencies</outputDirectory>\n              <resources>\n                <resource>\n                  <directory>../plugin/target/</directory>\n                  <includes>\n                    <include>code-coverage-api.hpi</include>\n                  </includes>\n                  <filtering>false</filtering>\n                </resource>\n              </resources>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <skip>true</skip> <!-- FIXME: disable UI test right now since we need new page objects -->\n          <reuseForks>false</reuseForks>\n          <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n          <environmentVariables>\n            <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n            <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n            <BROWSER>firefox-container</BROWSER>\n          </environmentVariables>\n          <rerunFailingTestsCount>1</rerunFailingTestsCount>\n          <includes>\n            <include>**/io.jenkins.plugins.coverage.SmokeTests.java</include>\n          </includes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-help-plugin</artifactId>\n        <version>3.4.0</version>\n        <executions>\n          <execution>\n            <id>show-profiles</id>\n            <phase>compile</phase>\n            <goals>\n              <goal>active-profiles</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <configuration>\n          <archive>\n            <manifestEntries>\n              <Automatic-Module-Name>coverage.ui.tests</Automatic-Module-Name>\n            </manifestEntries>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.jenkins-ci.tools</groupId>\n        <artifactId>maven-hpi-plugin</artifactId>\n        <version>${hpi-plugin.version}</version>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n",
            "error": "",
            "span_id": 10811148492519338945
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 5952637467327377525
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 3075999963520499272
        },
        {
            "input": "ui-tests/pom.xml",
            "output": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>edu.hm.hafner</groupId>\n    <artifactId>codingstyle-pom</artifactId>\n    <version>2.29.0</version>\n    <relativePath/>\n  </parent>\n\n  <groupId>io.jenkins.plugins</groupId>\n  <artifactId>code-coverage-api-ui-tests</artifactId>\n  <packaging>jar</packaging>\n  <version>UNVERSIONED</version>\n  <name>UI Tests of Code Coverage Plugin</name>\n\n  <properties>\n    <jenkins.version>2.397</jenkins.version>\n    <hpi-plugin.version>3.40</hpi-plugin.version>\n    <json-smart.version>2.3</json-smart.version>\n    <json-unit-assertj.version>2.37.0</json-unit-assertj.version>\n    <module.name>${project.groupId}.code.coverage.api.ui.tests</module.name>\n\n    <!-- Maven Surefire ArgLine -->\n    <argLine>-Djava.awt.headless=true -Xmx1024m -Djenkins.test.timeout=1000 --add-opens java.base/sun.reflect.annotation=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.util.concurrent=ALL-UNNAMED</argLine>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.jenkins-ci.main</groupId>\n        <artifactId>jenkins-core</artifactId>\n        <version>${jenkins.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.jenkins-ci</groupId>\n      <artifactId>acceptance-test-harness</artifactId>\n      <version>5528.v806749710b_83</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.httpcomponents</groupId>\n      <artifactId>httpclient</artifactId>\n      <version>4.5.14</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.vintage</groupId>\n      <artifactId>junit-vintage-engine</artifactId>\n      <version>${junit.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-assertj</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-json-path</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <repositories>\n    <repository>\n      <id>maven.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/releases/</url>\n    </repository>\n    <repository>\n      <id>incrementals.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/incrementals/</url>\n    </repository>\n  </repositories>\n\n  <profiles>\n    <profile>\n      <id>no-ui-tests-on-windows</id>\n      <activation>\n        <os>\n          <family>windows</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>no-ui-tests-on-mac</id>\n      <activation>\n        <os>\n          <family>mac</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>ui-tests-locally</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <configuration>\n              <reuseForks>false</reuseForks>\n              <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n              <environmentVariables>\n                <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n                <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n                <BROWSER>firefox</BROWSER>\n              </environmentVariables>\n              <rerunFailingTestsCount>1</rerunFailingTestsCount>\n              <includes>\n                <include>**/*Tests.java</include>\n                <include>**/*Test.java</include>\n              </includes>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n      <properties>\n        <maven.test.skip>false</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>consume-incrementals</id>\n    </profile>\n    <profile>\n      <id>might-produce-incrementals</id>\n    </profile>\n  </profiles>\n\n  <pluginRepositories>\n    <pluginRepository>\n      <id>repo.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/public/</url>\n    </pluginRepository>\n  </pluginRepositories>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.revapi</groupId>\n        <artifactId>revapi-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-assertions-generator-maven-plugin</artifactId>\n        <configuration>\n          <packages combine.children=\"append\">\n            <package>io.jenkins.plugins.coverage</package>\n          </packages>\n          <excludes>\n            <exclude>.*Test</exclude>\n            <exclude>.*Table</exclude>\n          </excludes>\n          <entryPointClassPackage>io.jenkins.plugins.coverage</entryPointClassPackage>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-resources-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>copy-resources</id>\n            <phase>process-resources</phase>\n            <goals>\n              <goal>copy-resources</goal>\n            </goals>\n            <configuration>\n              <outputDirectory>../plugin/target/test-classes/test-dependencies</outputDirectory>\n              <resources>\n                <resource>\n                  <directory>../plugin/target/</directory>\n                  <includes>\n                    <include>code-coverage-api.hpi</include>\n                  </includes>\n                  <filtering>false</filtering>\n                </resource>\n              </resources>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <skip>true</skip> <!-- FIXME: disable UI test right now since we need new page objects -->\n          <reuseForks>false</reuseForks>\n          <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n          <environmentVariables>\n            <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n            <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n            <BROWSER>firefox-container</BROWSER>\n          </environmentVariables>\n          <rerunFailingTestsCount>1</rerunFailingTestsCount>\n          <includes>\n            <include>**/io.jenkins.plugins.coverage.SmokeTests.java</include>\n          </includes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-help-plugin</artifactId>\n        <version>3.4.0</version>\n        <executions>\n          <execution>\n            <id>show-profiles</id>\n            <phase>compile</phase>\n            <goals>\n              <goal>active-profiles</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <configuration>\n          <archive>\n            <manifestEntries>\n              <Automatic-Module-Name>coverage.ui.tests</Automatic-Module-Name>\n            </manifestEntries>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.jenkins-ci.tools</groupId>\n        <artifactId>maven-hpi-plugin</artifactId>\n        <version>${hpi-plugin.version}</version>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n",
            "error": "",
            "span_id": 11389926665455125787
        },
        {
            "input": "ui-tests/pom.xml",
            "output": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>edu.hm.hafner</groupId>\n    <artifactId>codingstyle-pom</artifactId>\n    <version>2.29.0</version>\n    <relativePath/>\n  </parent>\n\n  <groupId>io.jenkins.plugins</groupId>\n  <artifactId>code-coverage-api-ui-tests</artifactId>\n  <packaging>jar</packaging>\n  <version>UNVERSIONED</version>\n  <name>UI Tests of Code Coverage Plugin</name>\n\n  <properties>\n    <jenkins.version>2.397</jenkins.version>\n    <hpi-plugin.version>3.40</hpi-plugin.version>\n    <json-smart.version>2.3</json-smart.version>\n    <json-unit-assertj.version>2.37.0</json-unit-assertj.version>\n    <module.name>${project.groupId}.code.coverage.api.ui.tests</module.name>\n\n    <!-- Maven Surefire ArgLine -->\n    <argLine>-Djava.awt.headless=true -Xmx1024m -Djenkins.test.timeout=1000 --add-opens java.base/sun.reflect.annotation=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.util.concurrent=ALL-UNNAMED</argLine>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.jenkins-ci.main</groupId>\n        <artifactId>jenkins-core</artifactId>\n        <version>${jenkins.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.jenkins-ci</groupId>\n      <artifactId>acceptance-test-harness</artifactId>\n      <version>5528.v806749710b_83</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.httpcomponents</groupId>\n      <artifactId>httpclient</artifactId>\n      <version>4.5.14</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.vintage</groupId>\n      <artifactId>junit-vintage-engine</artifactId>\n      <version>${junit.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-assertj</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-json-path</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <repositories>\n    <repository>\n      <id>maven.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/releases/</url>\n    </repository>\n    <repository>\n      <id>incrementals.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/incrementals/</url>\n    </repository>\n  </repositories>\n\n  <profiles>\n    <profile>\n      <id>no-ui-tests-on-windows</id>\n      <activation>\n        <os>\n          <family>windows</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>no-ui-tests-on-mac</id>\n      <activation>\n        <os>\n          <family>mac</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>ui-tests-locally</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <configuration>\n              <reuseForks>false</reuseForks>\n              <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n              <environmentVariables>\n                <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n                <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n                <BROWSER>firefox</BROWSER>\n              </environmentVariables>\n              <rerunFailingTestsCount>1</rerunFailingTestsCount>\n              <includes>\n                <include>**/*Tests.java</include>\n                <include>**/*Test.java</include>\n              </includes>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n      <properties>\n        <maven.test.skip>false</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>consume-incrementals</id>\n    </profile>\n    <profile>\n      <id>might-produce-incrementals</id>\n    </profile>\n  </profiles>\n\n  <pluginRepositories>\n    <pluginRepository>\n      <id>repo.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/public/</url>\n    </pluginRepository>\n  </pluginRepositories>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.revapi</groupId>\n        <artifactId>revapi-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-assertions-generator-maven-plugin</artifactId>\n        <configuration>\n          <packages combine.children=\"append\">\n            <package>io.jenkins.plugins.coverage</package>\n          </packages>\n          <excludes>\n            <exclude>.*Test</exclude>\n            <exclude>.*Table</exclude>\n          </excludes>\n          <entryPointClassPackage>io.jenkins.plugins.coverage</entryPointClassPackage>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-resources-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>copy-resources</id>\n            <phase>process-resources</phase>\n            <goals>\n              <goal>copy-resources</goal>\n            </goals>\n            <configuration>\n              <outputDirectory>../plugin/target/test-classes/test-dependencies</outputDirectory>\n              <resources>\n                <resource>\n                  <directory>../plugin/target/</directory>\n                  <includes>\n                    <include>code-coverage-api.hpi</include>\n                  </includes>\n                  <filtering>false</filtering>\n                </resource>\n              </resources>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <skip>true</skip> <!-- FIXME: disable UI test right now since we need new page objects -->\n          <reuseForks>false</reuseForks>\n          <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n          <environmentVariables>\n            <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n            <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n            <BROWSER>firefox-container</BROWSER>\n          </environmentVariables>\n          <rerunFailingTestsCount>1</rerunFailingTestsCount>\n          <includes>\n            <include>**/io.jenkins.plugins.coverage.SmokeTests.java</include>\n          </includes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-help-plugin</artifactId>\n        <version>3.4.0</version>\n        <executions>\n          <execution>\n            <id>show-profiles</id>\n            <phase>compile</phase>\n            <goals>\n              <goal>active-profiles</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <configuration>\n          <archive>\n            <manifestEntries>\n              <Automatic-Module-Name>coverage.ui.tests</Automatic-Module-Name>\n            </manifestEntries>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.jenkins-ci.tools</groupId>\n        <artifactId>maven-hpi-plugin</artifactId>\n        <version>${hpi-plugin.version}</version>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n",
            "error": "",
            "span_id": 4711257240822778941
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 3684715306852713132
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 12529771799081442725
        },
        {
            "input": "ui-tests/pom.xml",
            "output": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>edu.hm.hafner</groupId>\n    <artifactId>codingstyle-pom</artifactId>\n    <version>2.29.0</version>\n    <relativePath/>\n  </parent>\n\n  <groupId>io.jenkins.plugins</groupId>\n  <artifactId>code-coverage-api-ui-tests</artifactId>\n  <packaging>jar</packaging>\n  <version>UNVERSIONED</version>\n  <name>UI Tests of Code Coverage Plugin</name>\n\n  <properties>\n    <jenkins.version>2.397</jenkins.version>\n    <hpi-plugin.version>3.40</hpi-plugin.version>\n    <json-smart.version>2.3</json-smart.version>\n    <json-unit-assertj.version>2.37.0</json-unit-assertj.version>\n    <module.name>${project.groupId}.code.coverage.api.ui.tests</module.name>\n\n    <!-- Maven Surefire ArgLine -->\n    <argLine>-Djava.awt.headless=true -Xmx1024m -Djenkins.test.timeout=1000 --add-opens java.base/sun.reflect.annotation=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.util.concurrent=ALL-UNNAMED</argLine>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.jenkins-ci.main</groupId>\n        <artifactId>jenkins-core</artifactId>\n        <version>${jenkins.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.jenkins-ci</groupId>\n      <artifactId>acceptance-test-harness</artifactId>\n      <version>5528.v806749710b_83</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.httpcomponents</groupId>\n      <artifactId>httpclient</artifactId>\n      <version>4.5.14</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.vintage</groupId>\n      <artifactId>junit-vintage-engine</artifactId>\n      <version>${junit.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-assertj</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-json-path</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <repositories>\n    <repository>\n      <id>maven.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/releases/</url>\n    </repository>\n    <repository>\n      <id>incrementals.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/incrementals/</url>\n    </repository>\n  </repositories>\n\n  <profiles>\n    <profile>\n      <id>no-ui-tests-on-windows</id>\n      <activation>\n        <os>\n          <family>windows</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>no-ui-tests-on-mac</id>\n      <activation>\n        <os>\n          <family>mac</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>ui-tests-locally</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <configuration>\n              <reuseForks>false</reuseForks>\n              <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n              <environmentVariables>\n                <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n                <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n                <BROWSER>firefox</BROWSER>\n              </environmentVariables>\n              <rerunFailingTestsCount>1</rerunFailingTestsCount>\n              <includes>\n                <include>**/*Tests.java</include>\n                <include>**/*Test.java</include>\n              </includes>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n      <properties>\n        <maven.test.skip>false</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>consume-incrementals</id>\n    </profile>\n    <profile>\n      <id>might-produce-incrementals</id>\n    </profile>\n  </profiles>\n\n  <pluginRepositories>\n    <pluginRepository>\n      <id>repo.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/public/</url>\n    </pluginRepository>\n  </pluginRepositories>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.revapi</groupId>\n        <artifactId>revapi-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-assertions-generator-maven-plugin</artifactId>\n        <configuration>\n          <packages combine.children=\"append\">\n            <package>io.jenkins.plugins.coverage</package>\n          </packages>\n          <excludes>\n            <exclude>.*Test</exclude>\n            <exclude>.*Table</exclude>\n          </excludes>\n          <entryPointClassPackage>io.jenkins.plugins.coverage</entryPointClassPackage>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-resources-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>copy-resources</id>\n            <phase>process-resources</phase>\n            <goals>\n              <goal>copy-resources</goal>\n            </goals>\n            <configuration>\n              <outputDirectory>../plugin/target/test-classes/test-dependencies</outputDirectory>\n              <resources>\n                <resource>\n                  <directory>../plugin/target/</directory>\n                  <includes>\n                    <include>code-coverage-api.hpi</include>\n                  </includes>\n                  <filtering>false</filtering>\n                </resource>\n              </resources>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <skip>true</skip> <!-- FIXME: disable UI test right now since we need new page objects -->\n          <reuseForks>false</reuseForks>\n          <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n          <environmentVariables>\n            <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n            <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n            <BROWSER>firefox-container</BROWSER>\n          </environmentVariables>\n          <rerunFailingTestsCount>1</rerunFailingTestsCount>\n          <includes>\n            <include>**/io.jenkins.plugins.coverage.SmokeTests.java</include>\n          </includes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-help-plugin</artifactId>\n        <version>3.4.0</version>\n        <executions>\n          <execution>\n            <id>show-profiles</id>\n            <phase>compile</phase>\n            <goals>\n              <goal>active-profiles</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <configuration>\n          <archive>\n            <manifestEntries>\n              <Automatic-Module-Name>coverage.ui.tests</Automatic-Module-Name>\n            </manifestEntries>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.jenkins-ci.tools</groupId>\n        <artifactId>maven-hpi-plugin</artifactId>\n        <version>${hpi-plugin.version}</version>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n",
            "error": "",
            "span_id": 13238680027098896744
        },
        {
            "input": "ui-tests/pom.xml",
            "output": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>edu.hm.hafner</groupId>\n    <artifactId>codingstyle-pom</artifactId>\n    <version>2.29.0</version>\n    <relativePath/>\n  </parent>\n\n  <groupId>io.jenkins.plugins</groupId>\n  <artifactId>code-coverage-api-ui-tests</artifactId>\n  <packaging>jar</packaging>\n  <version>UNVERSIONED</version>\n  <name>UI Tests of Code Coverage Plugin</name>\n\n  <properties>\n    <jenkins.version>2.397</jenkins.version>\n    <hpi-plugin.version>3.40</hpi-plugin.version>\n    <json-smart.version>2.3</json-smart.version>\n    <json-unit-assertj.version>2.37.0</json-unit-assertj.version>\n    <module.name>${project.groupId}.code.coverage.api.ui.tests</module.name>\n\n    <!-- Maven Surefire ArgLine -->\n    <argLine>-Djava.awt.headless=true -Xmx1024m -Djenkins.test.timeout=1000 --add-opens java.base/sun.reflect.annotation=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.util.concurrent=ALL-UNNAMED</argLine>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.jenkins-ci.main</groupId>\n        <artifactId>jenkins-core</artifactId>\n        <version>${jenkins.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.jenkins-ci</groupId>\n      <artifactId>acceptance-test-harness</artifactId>\n      <version>5528.v806749710b_83</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.httpcomponents</groupId>\n      <artifactId>httpclient</artifactId>\n      <version>4.5.14</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.vintage</groupId>\n      <artifactId>junit-vintage-engine</artifactId>\n      <version>${junit.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-assertj</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-json-path</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <repositories>\n    <repository>\n      <id>maven.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/releases/</url>\n    </repository>\n    <repository>\n      <id>incrementals.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/incrementals/</url>\n    </repository>\n  </repositories>\n\n  <profiles>\n    <profile>\n      <id>no-ui-tests-on-windows</id>\n      <activation>\n        <os>\n          <family>windows</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>no-ui-tests-on-mac</id>\n      <activation>\n        <os>\n          <family>mac</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>ui-tests-locally</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <configuration>\n              <reuseForks>false</reuseForks>\n              <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n              <environmentVariables>\n                <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n                <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n                <BROWSER>firefox</BROWSER>\n              </environmentVariables>\n              <rerunFailingTestsCount>1</rerunFailingTestsCount>\n              <includes>\n                <include>**/*Tests.java</include>\n                <include>**/*Test.java</include>\n              </includes>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n      <properties>\n        <maven.test.skip>false</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>consume-incrementals</id>\n    </profile>\n    <profile>\n      <id>might-produce-incrementals</id>\n    </profile>\n  </profiles>\n\n  <pluginRepositories>\n    <pluginRepository>\n      <id>repo.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/public/</url>\n    </pluginRepository>\n  </pluginRepositories>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.revapi</groupId>\n        <artifactId>revapi-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-assertions-generator-maven-plugin</artifactId>\n        <configuration>\n          <packages combine.children=\"append\">\n            <package>io.jenkins.plugins.coverage</package>\n          </packages>\n          <excludes>\n            <exclude>.*Test</exclude>\n            <exclude>.*Table</exclude>\n          </excludes>\n          <entryPointClassPackage>io.jenkins.plugins.coverage</entryPointClassPackage>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-resources-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>copy-resources</id>\n            <phase>process-resources</phase>\n            <goals>\n              <goal>copy-resources</goal>\n            </goals>\n            <configuration>\n              <outputDirectory>../plugin/target/test-classes/test-dependencies</outputDirectory>\n              <resources>\n                <resource>\n                  <directory>../plugin/target/</directory>\n                  <includes>\n                    <include>code-coverage-api.hpi</include>\n                  </includes>\n                  <filtering>false</filtering>\n                </resource>\n              </resources>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <skip>true</skip> <!-- FIXME: disable UI test right now since we need new page objects -->\n          <reuseForks>false</reuseForks>\n          <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n          <environmentVariables>\n            <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n            <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n            <BROWSER>firefox-container</BROWSER>\n          </environmentVariables>\n          <rerunFailingTestsCount>1</rerunFailingTestsCount>\n          <includes>\n            <include>**/io.jenkins.plugins.coverage.SmokeTests.java</include>\n          </includes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-help-plugin</artifactId>\n        <version>3.4.0</version>\n        <executions>\n          <execution>\n            <id>show-profiles</id>\n            <phase>compile</phase>\n            <goals>\n              <goal>active-profiles</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <configuration>\n          <archive>\n            <manifestEntries>\n              <Automatic-Module-Name>coverage.ui.tests</Automatic-Module-Name>\n            </manifestEntries>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.jenkins-ci.tools</groupId>\n        <artifactId>maven-hpi-plugin</artifactId>\n        <version>${hpi-plugin.version}</version>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n",
            "error": "",
            "span_id": 5340097411953877204
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 13555062535798330190
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 2674069495048202385
        },
        {
            "input": "ui-tests/pom.xml",
            "output": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>edu.hm.hafner</groupId>\n    <artifactId>codingstyle-pom</artifactId>\n    <version>2.29.0</version>\n    <relativePath/>\n  </parent>\n\n  <groupId>io.jenkins.plugins</groupId>\n  <artifactId>code-coverage-api-ui-tests</artifactId>\n  <packaging>jar</packaging>\n  <version>UNVERSIONED</version>\n  <name>UI Tests of Code Coverage Plugin</name>\n\n  <properties>\n    <jenkins.version>2.397</jenkins.version>\n    <hpi-plugin.version>3.40</hpi-plugin.version>\n    <json-smart.version>2.3</json-smart.version>\n    <json-unit-assertj.version>2.37.0</json-unit-assertj.version>\n    <module.name>${project.groupId}.code.coverage.api.ui.tests</module.name>\n\n    <!-- Maven Surefire ArgLine -->\n    <argLine>-Djava.awt.headless=true -Xmx1024m -Djenkins.test.timeout=1000 --add-opens java.base/sun.reflect.annotation=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.util.concurrent=ALL-UNNAMED</argLine>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.jenkins-ci.main</groupId>\n        <artifactId>jenkins-core</artifactId>\n        <version>${jenkins.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.jenkins-ci</groupId>\n      <artifactId>acceptance-test-harness</artifactId>\n      <version>5528.v806749710b_83</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.httpcomponents</groupId>\n      <artifactId>httpclient</artifactId>\n      <version>4.5.14</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.vintage</groupId>\n      <artifactId>junit-vintage-engine</artifactId>\n      <version>${junit.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-assertj</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-json-path</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <repositories>\n    <repository>\n      <id>maven.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/releases/</url>\n    </repository>\n    <repository>\n      <id>incrementals.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/incrementals/</url>\n    </repository>\n  </repositories>\n\n  <profiles>\n    <profile>\n      <id>no-ui-tests-on-windows</id>\n      <activation>\n        <os>\n          <family>windows</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>no-ui-tests-on-mac</id>\n      <activation>\n        <os>\n          <family>mac</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>ui-tests-locally</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <configuration>\n              <reuseForks>false</reuseForks>\n              <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n              <environmentVariables>\n                <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n                <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n                <BROWSER>firefox</BROWSER>\n              </environmentVariables>\n              <rerunFailingTestsCount>1</rerunFailingTestsCount>\n              <includes>\n                <include>**/*Tests.java</include>\n                <include>**/*Test.java</include>\n              </includes>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n      <properties>\n        <maven.test.skip>false</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>consume-incrementals</id>\n    </profile>\n    <profile>\n      <id>might-produce-incrementals</id>\n    </profile>\n  </profiles>\n\n  <pluginRepositories>\n    <pluginRepository>\n      <id>repo.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/public/</url>\n    </pluginRepository>\n  </pluginRepositories>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.revapi</groupId>\n        <artifactId>revapi-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-assertions-generator-maven-plugin</artifactId>\n        <configuration>\n          <packages combine.children=\"append\">\n            <package>io.jenkins.plugins.coverage</package>\n          </packages>\n          <excludes>\n            <exclude>.*Test</exclude>\n            <exclude>.*Table</exclude>\n          </excludes>\n          <entryPointClassPackage>io.jenkins.plugins.coverage</entryPointClassPackage>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-resources-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>copy-resources</id>\n            <phase>process-resources</phase>\n            <goals>\n              <goal>copy-resources</goal>\n            </goals>\n            <configuration>\n              <outputDirectory>../plugin/target/test-classes/test-dependencies</outputDirectory>\n              <resources>\n                <resource>\n                  <directory>../plugin/target/</directory>\n                  <includes>\n                    <include>code-coverage-api.hpi</include>\n                  </includes>\n                  <filtering>false</filtering>\n                </resource>\n              </resources>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <skip>true</skip> <!-- FIXME: disable UI test right now since we need new page objects -->\n          <reuseForks>false</reuseForks>\n          <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n          <environmentVariables>\n            <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n            <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n            <BROWSER>firefox-container</BROWSER>\n          </environmentVariables>\n          <rerunFailingTestsCount>1</rerunFailingTestsCount>\n          <includes>\n            <include>**/io.jenkins.plugins.coverage.SmokeTests.java</include>\n          </includes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-help-plugin</artifactId>\n        <version>3.4.0</version>\n        <executions>\n          <execution>\n            <id>show-profiles</id>\n            <phase>compile</phase>\n            <goals>\n              <goal>active-profiles</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <configuration>\n          <archive>\n            <manifestEntries>\n              <Automatic-Module-Name>coverage.ui.tests</Automatic-Module-Name>\n            </manifestEntries>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.jenkins-ci.tools</groupId>\n        <artifactId>maven-hpi-plugin</artifactId>\n        <version>${hpi-plugin.version}</version>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n",
            "error": "",
            "span_id": 3009978760480318592
        },
        {
            "input": "ui-tests/pom.xml",
            "output": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>edu.hm.hafner</groupId>\n    <artifactId>codingstyle-pom</artifactId>\n    <version>2.29.0</version>\n    <relativePath/>\n  </parent>\n\n  <groupId>io.jenkins.plugins</groupId>\n  <artifactId>code-coverage-api-ui-tests</artifactId>\n  <packaging>jar</packaging>\n  <version>UNVERSIONED</version>\n  <name>UI Tests of Code Coverage Plugin</name>\n\n  <properties>\n    <jenkins.version>2.397</jenkins.version>\n    <hpi-plugin.version>3.40</hpi-plugin.version>\n    <json-smart.version>2.3</json-smart.version>\n    <json-unit-assertj.version>2.37.0</json-unit-assertj.version>\n    <module.name>${project.groupId}.code.coverage.api.ui.tests</module.name>\n\n    <!-- Maven Surefire ArgLine -->\n    <argLine>-Djava.awt.headless=true -Xmx1024m -Djenkins.test.timeout=1000 --add-opens java.base/sun.reflect.annotation=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.util.concurrent=ALL-UNNAMED</argLine>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.jenkins-ci.main</groupId>\n        <artifactId>jenkins-core</artifactId>\n        <version>${jenkins.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.jenkins-ci</groupId>\n      <artifactId>acceptance-test-harness</artifactId>\n      <version>5528.v806749710b_83</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.httpcomponents</groupId>\n      <artifactId>httpclient</artifactId>\n      <version>4.5.14</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.vintage</groupId>\n      <artifactId>junit-vintage-engine</artifactId>\n      <version>${junit.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-assertj</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-json-path</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <repositories>\n    <repository>\n      <id>maven.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/releases/</url>\n    </repository>\n    <repository>\n      <id>incrementals.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/incrementals/</url>\n    </repository>\n  </repositories>\n\n  <profiles>\n    <profile>\n      <id>no-ui-tests-on-windows</id>\n      <activation>\n        <os>\n          <family>windows</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>no-ui-tests-on-mac</id>\n      <activation>\n        <os>\n          <family>mac</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>ui-tests-locally</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <configuration>\n              <reuseForks>false</reuseForks>\n              <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n              <environmentVariables>\n                <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n                <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n                <BROWSER>firefox</BROWSER>\n              </environmentVariables>\n              <rerunFailingTestsCount>1</rerunFailingTestsCount>\n              <includes>\n                <include>**/*Tests.java</include>\n                <include>**/*Test.java</include>\n              </includes>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n      <properties>\n        <maven.test.skip>false</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>consume-incrementals</id>\n    </profile>\n    <profile>\n      <id>might-produce-incrementals</id>\n    </profile>\n  </profiles>\n\n  <pluginRepositories>\n    <pluginRepository>\n      <id>repo.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/public/</url>\n    </pluginRepository>\n  </pluginRepositories>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.revapi</groupId>\n        <artifactId>revapi-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-assertions-generator-maven-plugin</artifactId>\n        <configuration>\n          <packages combine.children=\"append\">\n            <package>io.jenkins.plugins.coverage</package>\n          </packages>\n          <excludes>\n            <exclude>.*Test</exclude>\n            <exclude>.*Table</exclude>\n          </excludes>\n          <entryPointClassPackage>io.jenkins.plugins.coverage</entryPointClassPackage>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-resources-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>copy-resources</id>\n            <phase>process-resources</phase>\n            <goals>\n              <goal>copy-resources</goal>\n            </goals>\n            <configuration>\n              <outputDirectory>../plugin/target/test-classes/test-dependencies</outputDirectory>\n              <resources>\n                <resource>\n                  <directory>../plugin/target/</directory>\n                  <includes>\n                    <include>code-coverage-api.hpi</include>\n                  </includes>\n                  <filtering>false</filtering>\n                </resource>\n              </resources>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <skip>true</skip> <!-- FIXME: disable UI test right now since we need new page objects -->\n          <reuseForks>false</reuseForks>\n          <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n          <environmentVariables>\n            <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n            <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n            <BROWSER>firefox-container</BROWSER>\n          </environmentVariables>\n          <rerunFailingTestsCount>1</rerunFailingTestsCount>\n          <includes>\n            <include>**/io.jenkins.plugins.coverage.SmokeTests.java</include>\n          </includes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-help-plugin</artifactId>\n        <version>3.4.0</version>\n        <executions>\n          <execution>\n            <id>show-profiles</id>\n            <phase>compile</phase>\n            <goals>\n              <goal>active-profiles</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <configuration>\n          <archive>\n            <manifestEntries>\n              <Automatic-Module-Name>coverage.ui.tests</Automatic-Module-Name>\n            </manifestEntries>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.jenkins-ci.tools</groupId>\n        <artifactId>maven-hpi-plugin</artifactId>\n        <version>${hpi-plugin.version}</version>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n",
            "error": "",
            "span_id": 13483643258163767242
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 11209422910481147992
        },
        {
            "input": "ui-tests/src/main/java/io/jenkins/plugins/coverage/util/ChartUtil.java",
            "output": "package io.jenkins.plugins.coverage.util;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\n\nimport com.gargoylesoftware.htmlunit.ScriptResult;\n\nimport org.jenkinsci.test.acceptance.po.PageObject;\n\n/**\n * Charts are displayed one multiple PageObjects. This util provides some helper methods to deal with charts.\n */\n@SuppressWarnings(\"hideutilityclassconstructor\")\n// TODO: Move this code to ATH so we can reuse it from other plugins\npublic class ChartUtil {\n    private static final int MAX_ATTEMPTS = 5;\n\n    /**\n     * Returns a chart's data by its id.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return data as json\n     */\n    public static String getChartDataById(final PageObject pageObject, final String elementId) {\n        if (isChartDisplayedByElementId(pageObject, elementId)) {\n            Object result = pageObject.executeScript(String.format(\n                    \"delete(window.Array.prototype.toJSON) %n\"\n                            + \"return JSON.stringify(echarts.getInstanceByDom(document.getElementById(\\\"%s\\\")).getOption())\",\n                    elementId));\n            ScriptResult scriptResult = new ScriptResult(result);\n            return scriptResult.getJavaScriptResult().toString();\n        }\n        return null;\n    }\n\n    /**\n     * Returns data of only chart with given tool attribute value on page.\n     *\n     * @param pageObject\n     *         which contains only one chart with given tool attribute value\n     * @param toolAttribute\n     *         value in div tag of chart\n     *\n     * @return data as json\n     */\n    public static String getDataOfOnlyChartOnPageWithGivenToolAttribute(final PageObject pageObject,\n            final String toolAttribute) {\n        if (isChartDisplayedByDivToolAttribute(pageObject, toolAttribute)) {\n            for (int i = 0; i < MAX_ATTEMPTS; i++) {\n                Object result = pageObject.executeScript(String.format(\n                        \"delete(window.Array.prototype.toJSON) %n\"\n                                + \"return JSON.stringify(echarts.getInstanceByDom(document.querySelector(\\\"div [tool='%s']\\\")).getOption())\",\n                        toolAttribute));\n\n                Object scriptResult = new ScriptResult(result).getJavaScriptResult();\n                if (scriptResult != null) {\n                    return scriptResult.toString();\n                }\n                pageObject.elasticSleep(1000);\n            }\n        }\n        throw new java.util.NoSuchElementException(\"Found no trend chart with ID '%s''\" + toolAttribute);\n    }\n\n    /**\n     * Returns if chart is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param elementId\n     *         of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByElementId(final PageObject pageObject, final String elementId) {\n        try {\n            WebElement chart = pageObject.find(By.id(elementId));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns if a chart with given tool attribute in div tag is displayed.\n     *\n     * @param pageObject\n     *         which contains chart\n     * @param toolAttribute\n     *         of div tag of chart\n     *\n     * @return if chart is displayed\n     */\n    public static boolean isChartDisplayedByDivToolAttribute(final PageObject pageObject, final String toolAttribute) {\n        try {\n            WebElement chart = pageObject.find(By.cssSelector(\"div[tool='\" + toolAttribute + \"']\"));\n            return chart != null && chart.isDisplayed();\n        }\n        catch (NoSuchElementException exception) {\n            return false;\n        }\n\n    }\n\n}\n",
            "error": "",
            "span_id": 864854816817536360
        },
        {
            "input": "ui-tests/pom.xml",
            "output": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>edu.hm.hafner</groupId>\n    <artifactId>codingstyle-pom</artifactId>\n    <version>2.29.0</version>\n    <relativePath/>\n  </parent>\n\n  <groupId>io.jenkins.plugins</groupId>\n  <artifactId>code-coverage-api-ui-tests</artifactId>\n  <packaging>jar</packaging>\n  <version>UNVERSIONED</version>\n  <name>UI Tests of Code Coverage Plugin</name>\n\n  <properties>\n    <jenkins.version>2.397</jenkins.version>\n    <hpi-plugin.version>3.40</hpi-plugin.version>\n    <json-smart.version>2.3</json-smart.version>\n    <json-unit-assertj.version>2.37.0</json-unit-assertj.version>\n    <module.name>${project.groupId}.code.coverage.api.ui.tests</module.name>\n\n    <!-- Maven Surefire ArgLine -->\n    <argLine>-Djava.awt.headless=true -Xmx1024m -Djenkins.test.timeout=1000 --add-opens java.base/sun.reflect.annotation=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.util.concurrent=ALL-UNNAMED</argLine>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.jenkins-ci.main</groupId>\n        <artifactId>jenkins-core</artifactId>\n        <version>${jenkins.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.jenkins-ci</groupId>\n      <artifactId>acceptance-test-harness</artifactId>\n      <version>5528.v806749710b_83</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.httpcomponents</groupId>\n      <artifactId>httpclient</artifactId>\n      <version>4.5.14</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.vintage</groupId>\n      <artifactId>junit-vintage-engine</artifactId>\n      <version>${junit.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-assertj</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.javacrumbs.json-unit</groupId>\n      <artifactId>json-unit-json-path</artifactId>\n      <version>${json-unit-assertj.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <repositories>\n    <repository>\n      <id>maven.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/releases/</url>\n    </repository>\n    <repository>\n      <id>incrementals.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/incrementals/</url>\n    </repository>\n  </repositories>\n\n  <profiles>\n    <profile>\n      <id>no-ui-tests-on-windows</id>\n      <activation>\n        <os>\n          <family>windows</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>no-ui-tests-on-mac</id>\n      <activation>\n        <os>\n          <family>mac</family>\n        </os>\n      </activation>\n      <properties>\n        <maven.test.skip>true</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>ui-tests-locally</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <configuration>\n              <reuseForks>false</reuseForks>\n              <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n              <environmentVariables>\n                <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n                <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n                <BROWSER>firefox</BROWSER>\n              </environmentVariables>\n              <rerunFailingTestsCount>1</rerunFailingTestsCount>\n              <includes>\n                <include>**/*Tests.java</include>\n                <include>**/*Test.java</include>\n              </includes>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n      <properties>\n        <maven.test.skip>false</maven.test.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>consume-incrementals</id>\n    </profile>\n    <profile>\n      <id>might-produce-incrementals</id>\n    </profile>\n  </profiles>\n\n  <pluginRepositories>\n    <pluginRepository>\n      <id>repo.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/public/</url>\n    </pluginRepository>\n  </pluginRepositories>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.revapi</groupId>\n        <artifactId>revapi-maven-plugin</artifactId>\n        <configuration>\n          <skip>true</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-assertions-generator-maven-plugin</artifactId>\n        <configuration>\n          <packages combine.children=\"append\">\n            <package>io.jenkins.plugins.coverage</package>\n          </packages>\n          <excludes>\n            <exclude>.*Test</exclude>\n            <exclude>.*Table</exclude>\n          </excludes>\n          <entryPointClassPackage>io.jenkins.plugins.coverage</entryPointClassPackage>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-resources-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>copy-resources</id>\n            <phase>process-resources</phase>\n            <goals>\n              <goal>copy-resources</goal>\n            </goals>\n            <configuration>\n              <outputDirectory>../plugin/target/test-classes/test-dependencies</outputDirectory>\n              <resources>\n                <resource>\n                  <directory>../plugin/target/</directory>\n                  <includes>\n                    <include>code-coverage-api.hpi</include>\n                  </includes>\n                  <filtering>false</filtering>\n                </resource>\n              </resources>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <skip>true</skip> <!-- FIXME: disable UI test right now since we need new page objects -->\n          <reuseForks>false</reuseForks>\n          <trimStackTrace>false</trimStackTrace> <!-- SUREFIRE-1798 -->\n          <environmentVariables>\n            <PLUGINS_DIR>../plugin/target/test-classes/test-dependencies</PLUGINS_DIR>\n            <JENKINS_VERSION>${jenkins.version}</JENKINS_VERSION>\n            <BROWSER>firefox-container</BROWSER>\n          </environmentVariables>\n          <rerunFailingTestsCount>1</rerunFailingTestsCount>\n          <includes>\n            <include>**/io.jenkins.plugins.coverage.SmokeTests.java</include>\n          </includes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-help-plugin</artifactId>\n        <version>3.4.0</version>\n        <executions>\n          <execution>\n            <id>show-profiles</id>\n            <phase>compile</phase>\n            <goals>\n              <goal>active-profiles</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <configuration>\n          <archive>\n            <manifestEntries>\n              <Automatic-Module-Name>coverage.ui.tests</Automatic-Module-Name>\n            </manifestEntries>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.jenkins-ci.tools</groupId>\n        <artifactId>maven-hpi-plugin</artifactId>\n        <version>${hpi-plugin.version}</version>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n",
            "error": "",
            "span_id": 18324532853882256659
        }
    ],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}