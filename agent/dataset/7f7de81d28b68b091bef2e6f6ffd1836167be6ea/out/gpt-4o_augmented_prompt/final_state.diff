diff --git a/snmpman/src/main/java/com/oneandone/snmpman/SnmpmanAgent.java b/snmpman/src/main/java/com/oneandone/snmpman/SnmpmanAgent.java
index 4f19775..7f3cc7b 100644
--- a/snmpman/src/main/java/com/oneandone/snmpman/SnmpmanAgent.java
+++ b/snmpman/src/main/java/com/oneandone/snmpman/SnmpmanAgent.java
@@ -258,7 +258,9 @@ public class SnmpmanAgent extends BaseAgent {
 
                 final OctetString context = new OctetString(String.valueOf(vlan));
 
-                final List<OID> roots = SnmpmanAgent.getRoots(variableBindings);
+                final List<OID> roots = SnmpmanAgent.getRoots((SortedMap<OID, Variable>) variableBindings);
+                final List<OID> roots = SnmpmanAgent.getRoots((SortedMap<OID, Variable>) variableBindings);
+                final List<OID> roots = SnmpmanAgent.getRoots((SortedMap<OID, Variable>) variableBindings);
                 for (final OID root : roots) {
                     MOGroup group = createGroup(root, variableBindings);
                     final Iterable<VariableBinding> subtree = generateSubtreeBindings(variableBindings, root);
@@ -311,7 +313,9 @@ public class SnmpmanAgent extends BaseAgent {
             final SortedMap<OID, Variable> variableBindings = this.getVariableBindings(configuration.getDevice(), bindings, new OctetString());
             final List<OID> roots = SnmpmanAgent.getRoots(variableBindings);
             for (final OID root : roots) {
-                MOGroup group = createGroup(root, variableBindings);
+                MOGroup group = createGroup(root, (SortedMap<OID, Variable>) variableBindings);
+                MOGroup group = createGroup(root, (SortedMap<OID, Variable>) variableBindings);
+                MOGroup group = createGroup(root, (SortedMap<OID, Variable>) variableBindings);
                 registerDefaultGroups(group);
             }
         } catch (final FileNotFoundException e) {
@@ -387,7 +391,7 @@ public class SnmpmanAgent extends BaseAgent {
             final Field registry = server.getClass().getDeclaredField("registry");
             registry.setAccessible(true);
             final SortedMap<MOScope, ManagedObject> reg = server.getRegistry();
-            DefaultMOContextScope contextScope = new DefaultMOContextScope(new OctetString(""), group.getScope());
+            DefaultMOContextScope contextScope = new DefaultMOContextScope(new OctetString(""), (MOScope) group.getScope());
             reg.put(contextScope, group);
             registry.set(server, reg);
         } catch (NoSuchFieldException | IllegalAccessException e) {