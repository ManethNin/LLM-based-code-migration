diff --git a/pom.xml b/pom.xml
index 951b5d1..0a32276 100644
--- a/pom.xml
+++ b/pom.xml
@@ -294,76 +294,78 @@ OF THE POSSIBILITY OF SUCH DAMAGE.
       </dependency>
     </dependencies>
   </dependencyManagement>
-  <build>
-    <plugins>
-      <plugin>
-        <artifactId>maven-compiler-plugin</artifactId>
-        <configuration>
-          <source>1.8</source>
-          <target>1.8</target>
-        </configuration>
-      </plugin>
-      <plugin>
-        <artifactId>maven-failsafe-plugin</artifactId>
-        <executions>
-          <execution>
-            <goals>
-              <goal>integration-test</goal>
-              <goal>verify</goal>
-            </goals>
-          </execution>
-        </executions>
-      </plugin>
-    </plugins>
-  </build>
-  <profiles>
-    <profile>
-      <id>qulice</id>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>com.qulice</groupId>
-            <artifactId>qulice-maven-plugin</artifactId>
-            <configuration>
-              <excludes combine.children="append">
-                <exclude>duplicatefinder:.*</exclude>
-              </excludes>
-            </configuration>
-          </plugin>
-        </plugins>
-      </build>
-    </profile>
-    <profile>
-      <id>coveralls</id>
-      <activation>
-        <file>
-          <exists>pom.xml</exists>
-        </file>
-      </activation>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>org.jacoco</groupId>
-            <artifactId>jacoco-maven-plugin</artifactId>
-          </plugin>
-          <plugin>
-            <groupId>org.eluder.coveralls</groupId>
-            <artifactId>coveralls-maven-plugin</artifactId>
-            <version>4.3.0</version>
-            <executions>
-              <execution>
-                <phase>site</phase>
-                <goals>
-                  <goal>report</goal>
-                </goals>
-                <configuration>
-                  <repoToken>${coveralls.token.http}</repoToken>
-                </configuration>
-              </execution>
-            </executions>
-          </plugin>
-        </plugins>
-      </build>
-    </profile>
-  </profiles>
+-  <build>
+-    <plugins>
+-      <plugin>
+-        <artifactId>maven-compiler-plugin</artifactId>
+-        <configuration>
+-          <source>1.8</source>
+-          <target>1.8</target>
+-        </configuration>
+-      </plugin>
+-      <plugin>
+-        <artifactId>maven-failsafe-plugin</artifactId>
+-        <executions>
+-          <execution>
+-            <goals>
+-              <goal>integration-test</goal>
+-              <goal>verify</goal>
+-            </goals>
+-          </execution>
+-        </executions>
+-      </plugin>
+-    </plugins>
++    <plugins/>
+-  </build>
+-  <profiles>
+-    <profile>
+-      <id>qulice</id>
+-      <build>
+-        <plugins>
+-          <plugin>
+-            <groupId>com.qulice</groupId>
+-            <artifactId>qulice-maven-plugin</artifactId>
+-            <configuration>
+-              <excludes combine.children="append">
+-                <exclude>duplicatefinder:.*</exclude>
+-              </excludes>
+-            </configuration>
+-          </plugin>
+-        </plugins>
+-      </build>
+-    </profile>
+-    <profile>
+-      <id>coveralls</id>
+-      <activation>
+-        <file>
+-          <exists>pom.xml</exists>
+-        </file>
+-      </activation>
+-      <build>
+-        <plugins>
+-          <plugin>
+-            <groupId>org.jacoco</groupId>
+-            <artifactId>jacoco-maven-plugin</artifactId>
+-          </plugin>
+-          <plugin>
+-            <groupId>org.eluder.coveralls</groupId>
+-            <artifactId>coveralls-maven-plugin</artifactId>
+-            <version>4.3.0</version>
+-            <executions>
+-              <execution>
+-                <phase>site</phase>
+-                <goals>
+-                  <goal>report</goal>
+-                </goals>
+-                <configuration>
+-                  <repoToken>${coveralls.token.http}</repoToken>
+-                </configuration>
+-              </execution>
+-            </executions>
+-          </plugin>
+-        </plugins>
+-      </build>
+-    </profile>
++    <!-- Profiles removed -->
++  <profiles/>
 </project>
diff --git a/src/main/java/com/jcabi/http/mock/MkQueryMatchers.java b/src/main/java/com/jcabi/http/mock/MkQueryMatchers.java
index d26b9c5..6523dca 100644
--- a/src/main/java/com/jcabi/http/mock/MkQueryMatchers.java
+++ b/src/main/java/com/jcabi/http/mock/MkQueryMatchers.java
@@ -31,7 +31,7 @@ package com.jcabi.http.mock;
 
 import java.net.URI;
 import org.hamcrest.Matcher;
-import org.hamcrest.Matchers;
+import org.hamcrest.CoreMatchers;
 
 /**
  * Convenient set of matchers for {@link MkQuery}.
@@ -82,7 +82,7 @@ public final class MkQueryMatchers {
      */
     public static Matcher<MkQuery> hasPath(final Matcher<String> path) {
         return new MkQueryUriMatcher(
-            Matchers.<URI>hasProperty("rawPath", path)
+            CoreMatchers.<URI>hasProperty("rawPath", path)
         );
     }
 
@@ -94,7 +94,7 @@ public final class MkQueryMatchers {
      */
     public static Matcher<MkQuery> hasQuery(final Matcher<String> query) {
         return new MkQueryUriMatcher(
-            Matchers.<URI>hasProperty("rawQuery", query)
+            CoreMatchers.<URI>hasProperty("rawQuery", query)
         );
     }
 
diff --git a/src/main/java/com/jcabi/http/response/RestResponse.java b/src/main/java/com/jcabi/http/response/RestResponse.java
index 282c3b3..082bf87 100644
--- a/src/main/java/com/jcabi/http/response/RestResponse.java
+++ b/src/main/java/com/jcabi/http/response/RestResponse.java
@@ -45,7 +45,7 @@ import lombok.EqualsAndHashCode;
 import org.hamcrest.CustomMatcher;
 import org.hamcrest.Matcher;
 import org.hamcrest.MatcherAssert;
-import org.hamcrest.Matchers;
+import org.hamcrest.CoreMatchers;
 
 /**
  * REST response.
@@ -207,7 +207,7 @@ public final class RestResponse extends AbstractResponse {
      * @since 0.9
      */
     public RestResponse assertHeader(final String name, final String value) {
-        return this.assertHeader(name, Matchers.hasItems(value));
+        return this.assertHeader(name, CoreMatchers.hasItems(value));
     }
 
     /**
@@ -243,7 +243,7 @@ public final class RestResponse extends AbstractResponse {
     public Request follow() {
         this.assertHeader(
             HttpHeaders.LOCATION,
-            Matchers.not(Matchers.emptyIterableOf(String.class))
+            CoreMatchers.not(CoreMatchers.emptyIterable())
         );
         return this.jump(
             URI.create(this.headers().get(HttpHeaders.LOCATION).get(0))
@@ -281,7 +281,7 @@ public final class RestResponse extends AbstractResponse {
                 cookies
             ),
             cookie,
-            Matchers.notNullValue()
+            CoreMatchers.notNullValue()
         );
         assert cookie != null;
         return cookie;