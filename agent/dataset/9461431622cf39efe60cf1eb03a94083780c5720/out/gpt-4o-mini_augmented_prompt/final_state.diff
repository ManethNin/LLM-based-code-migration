diff --git a/snmpman/src/main/java/com/oneandone/snmpman/SnmpmanAgent.java b/snmpman/src/main/java/com/oneandone/snmpman/SnmpmanAgent.java
index 4f19775..35c4d4d 100644
--- a/snmpman/src/main/java/com/oneandone/snmpman/SnmpmanAgent.java
+++ b/snmpman/src/main/java/com/oneandone/snmpman/SnmpmanAgent.java
@@ -258,7 +258,7 @@ public class SnmpmanAgent extends BaseAgent {
 
                 final OctetString context = new OctetString(String.valueOf(vlan));
 
-                final List<OID> roots = SnmpmanAgent.getRoots(variableBindings);
+final List<OID> roots = SnmpmanAgent.getRoots((SortedMap<OID, Variable>) variableBindings);
                 for (final OID root : roots) {
                     MOGroup group = createGroup(root, variableBindings);
                     final Iterable<VariableBinding> subtree = generateSubtreeBindings(variableBindings, root);
@@ -269,7 +269,7 @@ public class SnmpmanAgent extends BaseAgent {
                             group = new MOGroup(variableBinding.getOid(), variableBinding.getOid(), variableBinding.getVariable());
                             scope = new DefaultMOContextScope(context, variableBinding.getOid(), true, variableBinding.getOid().nextPeer(), false);
                             mo = server.lookup(new DefaultMOQuery(scope, false));
-                            if (mo != null) {
+                    if (mo != null) {
                                 log.warn("could not register single OID at {} because ManagedObject {} is already registered.", variableBinding.getOid(), mo);
                             } else {
                                 groups.add(group);
@@ -277,8 +277,8 @@ public class SnmpmanAgent extends BaseAgent {
                             }
                         }
                     } else {
-                        groups.add(group);
-                        registerGroupAndContext(group, context);
+                                groups.add(group);
+                                registerGroupAndContext(group, context);
                     }
                 }
             } catch (final FileNotFoundException e) {
@@ -304,20 +304,20 @@ public class SnmpmanAgent extends BaseAgent {
      * Creates the {@link StaticMOGroup} with all information necessary to register it to the server.
      */
     private void createAndRegisterDefaultContext() {
-        try (final FileInputStream fileInputStream = new FileInputStream(configuration.getWalk());
-             final BufferedReader reader = new BufferedReader(new InputStreamReader(fileInputStream, DEFAULT_CHARSET))) {
+            try (final FileInputStream fileInputStream = new FileInputStream(configuration.getWalk());
+                 final BufferedReader reader = new BufferedReader(new InputStreamReader(fileInputStream, DEFAULT_CHARSET))) {
 
-            Map<OID, Variable> bindings = readVariableBindings(reader);
+                Map<OID, Variable> bindings = readVariableBindings(reader);
             final SortedMap<OID, Variable> variableBindings = this.getVariableBindings(configuration.getDevice(), bindings, new OctetString());
-            final List<OID> roots = SnmpmanAgent.getRoots(variableBindings);
-            for (final OID root : roots) {
-                MOGroup group = createGroup(root, variableBindings);
+final List<OID> roots = SnmpmanAgent.getRoots((SortedMap<OID, Variable>) variableBindings);
+                for (final OID root : roots) {
+                    MOGroup group = createGroup(root, variableBindings);
                 registerDefaultGroups(group);
             }
-        } catch (final FileNotFoundException e) {
-            log.error("walk file {} not found", configuration.getWalk().getAbsolutePath());
-        } catch (final IOException e) {
-            log.error("could not read walk file " + configuration.getWalk().getAbsolutePath(), e);
+            } catch (final FileNotFoundException e) {
+                log.error("walk file {} not found", configuration.getWalk().getAbsolutePath());
+            } catch (final IOException e) {
+                log.error("could not read walk file " + configuration.getWalk().getAbsolutePath(), e);
         }
     }
 
@@ -340,7 +340,7 @@ public class SnmpmanAgent extends BaseAgent {
      * @param group {@link ManagedObject} to register.
      */
     private void registerDefaultGroups(final MOGroup group) {
-        groups.add(group);
+                                groups.add(group);
         registerGroupAndContext(group, new OctetString(""));
     }
 
@@ -579,4 +579,4 @@ public class SnmpmanAgent extends BaseAgent {
                 new OctetString(communityString + "2" + communityString).toSubIndex(true), com2sec);
         snmpCommunityMIB.getSnmpCommunityEntry().addRow(row);
     }
-}
+}
\ No newline at end of file