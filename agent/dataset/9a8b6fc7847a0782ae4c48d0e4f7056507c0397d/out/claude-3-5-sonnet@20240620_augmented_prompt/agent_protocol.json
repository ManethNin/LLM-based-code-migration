{
    "validate_diffs": [],
    "compile_maven": [
        {
            "input": "To address the issues caused by the upgrade of org.jasypt:jasypt from 1.8 to 1.9.2, we need to update the import statements and class references in the affected files. Let's make the necessary changes:\n\n```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n@@ -30,7 +30,7 @@ import java.util.Properties;\n \n import org.apache.commons.codec.binary.Base64;\n import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;\n-import org.jasypt.spring.security.PBEPasswordEncoder;\n+import org.jasypt.spring3.security.crypto.password.PasswordEncoder;\n import org.springframework.beans.factory.InitializingBean;\n \n /**\n@@ -99,7 +99,7 @@ public class GeoStorePBEPasswordEncoder implements PasswordEncoder, Initializing\n      * @see\n      * org.springframework.security.authentication.encoding.PasswordEncoder#isPasswordValid(java.lang.String,\n      * java.lang.String, java.lang.Object)\n      */\n-    public boolean isPasswordValid(String encPass, String rawPass, Object salt) {\n+    public boolean matches(CharSequence rawPassword, String encodedPassword) {\n         String pass1 = \"\" + encPass;\n         String pass2 = encode(rawPass);\n \n```\n\n```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java\n@@ -21,7 +21,7 @@ package it.geosolutions.geostore.core.security.password;\n \n import org.apache.commons.codec.binary.Base64;\n import org.jasypt.digest.StandardStringDigester;\n-import org.jasypt.spring.security.PasswordEncoder;\n+import org.jasypt.spring3.security.crypto.password.PasswordEncoder;\n import org.springframework.beans.factory.InitializingBean;\n \n /**\n@@ -41,8 +41,8 @@ import org.springframework.beans.factory.InitializingBean;\n  * @author ETj (etj at geo-solutions.it)\n  */\n public class GeoStoreDigestPasswordEncoder implements PasswordEncoder, InitializingBean {\n-    \n-    private PasswordEncoder passwordEncoder;\n+\n+    private org.springframework.security.crypto.password.PasswordEncoder passwordEncoder;\n \n     private StandardStringDigester digester;\n \n@@ -76,7 +76,7 @@ public class GeoStoreDigestPasswordEncoder implements PasswordEncoder, Initializ\n      * @see\n      * org.springframework.security.authentication.encoding.PasswordEncoder#isPasswordValid(java.lang.String,\n      * java.lang.String, java.lang.Object)\n      */\n-    public boolean isPasswordValid(String encPass, String rawPass, Object salt) {\n+    public boolean matches(CharSequence rawPassword, String encodedPassword) {\n         String pass1 = \"\" + encPass;\n         String pass2 = encode(rawPass);\n \n```\n\nThese changes update the import statements and method signatures to match the new API in Jasypt 1.9.2. The `PBEPasswordEncoder` and `PasswordEncoder` classes from `org.jasypt.spring.security` package have been moved to `org.jasypt.spring3.security.crypto.password` package. Additionally, some method signatures have changed, so we've updated them accordingly.",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java!\nMake extra sure the indentation is correct.\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java does not contain these 8 exact lines in a row:\n```\n* @see\n* org.springframework.security.authentication.encoding.PasswordEncoder#isPasswordValid(java.lang.String,\n* java.lang.String, java.lang.Object)\n*/\npublic boolean isPasswordValid(String encPass, String rawPass, Object salt) {\nString pass1 = \"\" + encPass;\nString pass2 = encode(rawPass);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java!\nMake extra sure the indentation is correct.\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain these 8 exact lines in a row:\n```\n* @author ETj (etj at geo-solutions.it)\n*/\npublic class GeoStoreDigestPasswordEncoder implements PasswordEncoder, InitializingBean {\nprivate PasswordEncoder passwordEncoder;\nprivate StandardStringDigester digester;\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java!\nMake extra sure the indentation is correct.\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain these 8 exact lines in a row:\n```\n* @see\n* org.springframework.security.authentication.encoding.PasswordEncoder#isPasswordValid(java.lang.String,\n* java.lang.String, java.lang.Object)\n*/\npublic boolean isPasswordValid(String encPass, String rawPass, Object salt) {\nString pass1 = \"\" + encPass;\nString pass2 = encode(rawPass);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java!\nMake extra sure the indentation is correct.\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java does not contain these 8 exact lines in a row:\n```\n* @see\n* org.springframework.security.authentication.encoding.PasswordEncoder#isPasswordValid(java.lang.String,\n* java.lang.String, java.lang.Object)\n*/\npublic boolean isPasswordValid(String encPass, String rawPass, Object salt) {\nString pass1 = \"\" + encPass;\nString pass2 = encode(rawPass);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java!\nMake extra sure the indentation is correct.\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain these 8 exact lines in a row:\n```\n* @author ETj (etj at geo-solutions.it)\n*/\npublic class GeoStoreDigestPasswordEncoder implements PasswordEncoder, InitializingBean {\nprivate PasswordEncoder passwordEncoder;\nprivate StandardStringDigester digester;\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java!\nMake extra sure the indentation is correct.\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain these 8 exact lines in a row:\n```\n* @see\n* org.springframework.security.authentication.encoding.PasswordEncoder#isPasswordValid(java.lang.String,\n* java.lang.String, java.lang.Object)\n*/\npublic boolean isPasswordValid(String encPass, String rawPass, Object salt) {\nString pass1 = \"\" + encPass;\nString pass2 = encode(rawPass);\n```",
            "span_id": 5553605834589287110
        },
        {
            "input": "```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n@@ -30,7 +30,7 @@ import java.util.Properties;\n \n import org.apache.commons.codec.binary.Base64;\n import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;\n-import org.jasypt.spring.security.PBEPasswordEncoder;\n+import org.jasypt.spring3.security.crypto.password.PasswordEncoder;\n import org.springframework.beans.factory.InitializingBean;\n \n /**\n@@ -99,7 +99,7 @@ public class GeoStorePBEPasswordEncoder implements PasswordEncoder, Initializing\n      * @see\n      * org.springframework.security.authentication.encoding.PasswordEncoder#isPasswordValid(java.lang.String,\n      * java.lang.String, java.lang.Object)\n      */\n-    public boolean isPasswordValid(String encPass, String rawPass, Object salt) {\n+    public boolean matches(CharSequence rawPassword, String encodedPassword) {\n         String pass1 = \"\" + encPass;\n         String pass2 = encode(rawPass);\n \n```\n\n```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java\n@@ -21,7 +21,7 @@ package it.geosolutions.geostore.core.security.password;\n \n import org.apache.commons.codec.binary.Base64;\n import org.jasypt.digest.StandardStringDigester;\n-import org.jasypt.spring.security.PasswordEncoder;\n+import org.jasypt.spring3.security.crypto.password.PasswordEncoder;\n import org.springframework.beans.factory.InitializingBean;\n \n /**\n@@ -42,7 +42,7 @@ import org.springframework.beans.factory.InitializingBean;\n  */\n public class GeoStoreDigestPasswordEncoder implements PasswordEncoder, InitializingBean {\n     \n-    private PasswordEncoder passwordEncoder;\n+    private org.springframework.security.crypto.password.PasswordEncoder passwordEncoder;\n \n     private StandardStringDigester digester;\n \n@@ -76,7 +76,7 @@ public class GeoStoreDigestPasswordEncoder implements PasswordEncoder, Initializ\n      * @see\n      * org.springframework.security.authentication.encoding.PasswordEncoder#isPasswordValid(java.lang.String,\n      * java.lang.String, java.lang.Object)\n      */\n-    public boolean isPasswordValid(String encPass, String rawPass, Object salt) {\n+    public boolean matches(CharSequence rawPassword, String encodedPassword) {\n         String pass1 = \"\" + encPass;\n         String pass2 = encode(rawPass);\n \n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java!\nMake extra sure the indentation is correct.\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java does not contain these 8 exact lines in a row:\n```\n* @see\n* org.springframework.security.authentication.encoding.PasswordEncoder#isPasswordValid(java.lang.String,\n* java.lang.String, java.lang.Object)\n*/\npublic boolean isPasswordValid(String encPass, String rawPass, Object salt) {\nString pass1 = \"\" + encPass;\nString pass2 = encode(rawPass);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java!\nMake extra sure the indentation is correct.\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain these 7 exact lines in a row:\n```\n*/\npublic class GeoStoreDigestPasswordEncoder implements PasswordEncoder, InitializingBean {\nprivate PasswordEncoder passwordEncoder;\nprivate StandardStringDigester digester;\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java!\nMake extra sure the indentation is correct.\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain these 8 exact lines in a row:\n```\n* @see\n* org.springframework.security.authentication.encoding.PasswordEncoder#isPasswordValid(java.lang.String,\n* java.lang.String, java.lang.Object)\n*/\npublic boolean isPasswordValid(String encPass, String rawPass, Object salt) {\nString pass1 = \"\" + encPass;\nString pass2 = encode(rawPass);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java!\nMake extra sure the indentation is correct.\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java does not contain these 8 exact lines in a row:\n```\n* @see\n* org.springframework.security.authentication.encoding.PasswordEncoder#isPasswordValid(java.lang.String,\n* java.lang.String, java.lang.Object)\n*/\npublic boolean isPasswordValid(String encPass, String rawPass, Object salt) {\nString pass1 = \"\" + encPass;\nString pass2 = encode(rawPass);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java!\nMake extra sure the indentation is correct.\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain these 7 exact lines in a row:\n```\n*/\npublic class GeoStoreDigestPasswordEncoder implements PasswordEncoder, InitializingBean {\nprivate PasswordEncoder passwordEncoder;\nprivate StandardStringDigester digester;\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java!\nMake extra sure the indentation is correct.\nsrc/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java does not contain these 8 exact lines in a row:\n```\n* @see\n* org.springframework.security.authentication.encoding.PasswordEncoder#isPasswordValid(java.lang.String,\n* java.lang.String, java.lang.Object)\n*/\npublic boolean isPasswordValid(String encPass, String rawPass, Object salt) {\nString pass1 = \"\" + encPass;\nString pass2 = encode(rawPass);\n```",
            "span_id": 3574835021627636021
        },
        {
            "input": "Now that we have the actual content of the files, let's make the necessary changes:\n\n```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n@@ -25,10 +25,10 @@ import static it.geosolutions.geostore.core.security.password.SecurityUtils.toCh\n import java.io.IOException;\n import java.util.Arrays;\n import java.util.Base64;\n-import org.acegisecurity.providers.encoding.PasswordEncoder;\n+import org.springframework.security.crypto.password.PasswordEncoder;\n import org.jasypt.encryption.pbe.StandardPBEByteEncryptor;\n import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;\n-import org.jasypt.spring.security.PBEPasswordEncoder;\n+import org.jasypt.spring3.security.crypto.password.PasswordEncoder as JasyptPasswordEncoder;\n /**\n  * Password Encoder using symmetric encryption\n  * \n@@ -102,7 +102,7 @@ public class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder\n \t\t\t}\n \t\t\tstringEncrypter.setAlgorithm(getAlgorithm());\n \n-\t\t\tPBEPasswordEncoder encoder = new PBEPasswordEncoder();\n+\t\t\tJasyptPasswordEncoder encoder = new JasyptPasswordEncoder();\n \t\t\tencoder.setPbeStringEncryptor(stringEncrypter);\n \n \t\t\treturn encoder;\n@@ -129,8 +129,7 @@ public class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder\n \n \t\treturn new CharArrayPasswordEncoder() {\n \t\t\t@Override\n-\t\t\tpublic boolean isPasswordValid(String encPass, char[] rawPass,\n-\t\t\t\t\tObject salt) {\n+\t\t\tpublic boolean matches(CharSequence rawPassword, String encodedPassword) {\n \t\t\t\tbyte[] decoded = Base64.getDecoder().decode(encPass.getBytes());\n \t\t\t\tbyte[] decrypted = byteEncrypter.decrypt(decoded);\n \n@@ -144,7 +143,7 @@ public class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder\n \t\t\t}\n \n \t\t\t@Override\n-\t\t\tpublic String encodePassword(char[] rawPass, Object salt) {\n+\t\t\tpublic String encode(CharSequence rawPassword) {\n \t\t\t\tbyte[] bytes = toBytes(rawPass);\n \t\t\t\ttry {\n \t\t\t\t\treturn new String(Base64.getEncoder().encode(byteEncrypter\n```\n\n```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java\n@@ -20,7 +20,7 @@ package it.geosolutions.geostore.core.security.password;\n \n import org.apache.commons.codec.binary.Base64;\n import org.jasypt.digest.StandardByteDigester;\n-import org.jasypt.spring.security.PasswordEncoder;\n+import org.jasypt.spring3.security.crypto.password.PasswordEncoder;\n import org.jasypt.util.password.StrongPasswordEncryptor;\n import static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\n \n@@ -58,11 +58,11 @@ public class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncod\n \t            }\n \t            \n \t            @Override\n-\t            public String encodePassword(char[] rawPass, Object salt) {\n+\t            public String encode(CharSequence rawPassword) {\n \t                return new String(Base64.encodeBase64(",
            "output": {
                "compilation_has_succeeded": true,
                "test_has_succeeded": false,
                "error_text": "[INFO] Scanning for projects...\n[WARNING]\n[WARNING] Some problems were encountered while building the effective model for it.geosolutions.geostore:geostore-rest-impl:jar:1.9-SNAPSHOT\n[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.mockito:mockito-core:jar -> duplicate declaration of version (?) @ line 231, column 21\n[WARNING]\n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING]\n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING]\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] Master GeoStore POM [pom]\n[INFO] GeoStore - 0 Server Root [pom]\n[INFO] GeoStore - Core [pom]\n[INFO] GeoStore - Core - Model [jar]\n[INFO] GeoStore - Core - Security [jar]\n[INFO] GeoStore - Core - Persistence [jar]\n[INFO] GeoStore - Core - Services API [jar]\n[INFO] GeoStore - Core - Services implementation [jar]\n[INFO] GeoStore - Modules [pom]\n[INFO] GeoStore - Modules - REST root [pom]\n[INFO] GeoStore - Modules - REST API [jar]\n[INFO] GeoStore - Modules - REST services [jar]\n[INFO] GeoStore - Modules - REST client [jar]\n[INFO] GeoStore - Modules - REST EXTJS services [jar]\n[INFO] GeoStore - Modules - REST services test [war]\n[INFO] GeoStore - Modules - REST auditing [jar]\n[INFO] GeoStore - Web [pom]\n[INFO] GeoStore - Webapp [war]\n[INFO]\n[INFO] ----------------------< it.geosolutions:geostore >----------------------\n[INFO] Building Master GeoStore POM 1.9-SNAPSHOT [1/18]\n[INFO] from pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore ---\n[INFO]\n[INFO] ---------------< it.geosolutions.geostore:geostore-root >---------------\n[INFO] Building GeoStore - 0 Server Root 1.9-SNAPSHOT [2/18]\n[INFO] from src/pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-root ---\n[INFO]\n[INFO] ---------------< it.geosolutions.geostore:geostore-core >---------------\n[INFO] Building GeoStore - Core 1.9-SNAPSHOT [3/18]\n[INFO] from src/core/pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-core ---\n[INFO]\n[INFO] --------------< it.geosolutions.geostore:geostore-model >---------------\n[INFO] Building GeoStore - Core - Model 1.9-SNAPSHOT [4/18]\n[INFO] from src/core/model/pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-model ---\n[INFO]\n[INFO] --- resources:3.0.1:resources (default-resources) @ geostore-model ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /mnt/repo/src/core/model/src/main/resources\n[INFO]\n[INFO] --- compiler:3.5.1:compile (default-compile) @ geostore-model ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 20 source files to /mnt/repo/src/core/model/target/classes\n[INFO]\n[INFO] --- resources:3.0.1:testResources (default-testResources) @ geostore-model ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /mnt/repo/src/core/model/src/test/resources\n[INFO]\n[INFO] --- compiler:3.5.1:testCompile (default-testCompile) @ geostore-model ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 7 source files to /mnt/repo/src/core/model/target/test-classes\n[INFO]\n[INFO] --- surefire:2.4.2:test (default-test) @ geostore-model ---\n[INFO] Surefire report directory: /mnt/repo/src/core/model/target/surefire-reports\n-------------------------------------------------------\nT E S T S\n-------------------------------------------------------\nRunning it.geosolutions.geostore.core.model.SecurityRuleTest\nTests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.286 sec <<< FAILURE!\nRunning it.geosolutions.geostore.core.model.UserGroupTest\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.026 sec <<< FAILURE!\nRunning it.geosolutions.geostore.core.model.AttributeTest\nTests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.075 sec <<< FAILURE!\nRunning it.geosolutions.geostore.core.model.UserTest\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.055 sec <<< FAILURE!\nRunning it.geosolutions.geostore.core.model.CategoryTest\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.018 sec <<< FAILURE!\nRunning it.geosolutions.geostore.core.model.GroupReservedNamesTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec\nResults :\nTests in error:\ntestMarshallingUsername(it.geosolutions.geostore.core.model.SecurityRuleTest)\ntestMarshallingGroupname(it.geosolutions.geostore.core.model.SecurityRuleTest)\ntestMarshallingString(it.geosolutions.geostore.core.model.UserGroupTest)\ntestMarshallingNumber(it.geosolutions.geostore.core.model.AttributeTest)\ntestMarshallingString(it.geosolutions.geostore.core.model.AttributeTest)\ntestMarshallingDate(it.geosolutions.geostore.core.model.AttributeTest)\ntestMarshallingString(it.geosolutions.geostore.core.model.UserTest)\ntestMarshallingString(it.geosolutions.geostore.core.model.CategoryTest)\nTests run: 9, Failures: 0, Errors: 8, Skipped: 0\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for Master GeoStore POM 1.9-SNAPSHOT:\n[INFO]\n[INFO] Master GeoStore POM ................................ SUCCESS [ 0.516 s]\n[INFO] GeoStore - 0 Server Root ........................... SUCCESS [ 0.066 s]\n[INFO] GeoStore - Core .................................... SUCCESS [ 0.003 s]\n[INFO] GeoStore - Core - Model ............................ FAILURE [ 10.987 s]\n[INFO] GeoStore - Core - Security ......................... SKIPPED\n[INFO] GeoStore - Core - Persistence ...................... SKIPPED\n[INFO] GeoStore - Core - Services API ..................... SKIPPED\n[INFO] GeoStore - Core - Services implementation .......... SKIPPED\n[INFO] GeoStore - Modules ................................. SKIPPED\n[INFO] GeoStore - Modules - REST root ..................... SKIPPED\n[INFO] GeoStore - Modules - REST API ...................... SKIPPED\n[INFO] GeoStore - Modules - REST services ................. SKIPPED\n[INFO] GeoStore - Modules - REST client ................... SKIPPED\n[INFO] GeoStore - Modules - REST EXTJS services ........... SKIPPED\n[INFO] GeoStore - Modules - REST services test ............ SKIPPED\n[INFO] GeoStore - Modules - REST auditing ................. SKIPPED\n[INFO] GeoStore - Web ..................................... SKIPPED\n[INFO] GeoStore - Webapp .................................. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 13.337 s\n[INFO] Finished at: 2024-08-05T02:06:55Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.4.2:test (default-test) on project geostore-model: There are test failures.\n[ERROR]\n[ERROR] Please refer to /mnt/repo/src/core/model/target/surefire-reports for the individual test results.\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR] mvn <args> -rf :geostore-model",
                "updated_files": {
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java": "package it.geosolutions.geostore.core.security.password;\n\n/*\n *  Copyright (C) 2007 - 2011 GeoSolutions S.A.S.\n *  http://www.geo-solutions.it\n *\n *  GPLv3 + Classpath exception\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.scramble;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toChars;\n\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.Base64;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.jasypt.encryption.pbe.StandardPBEByteEncryptor;\nimport org.jasypt.encryption.pbe.StandardPBEStringEncryptor;\nimport org.jasypt.spring3.security.crypto.password.PasswordEncoder as JasyptPasswordEncoder;\n/**\n * Password Encoder using symmetric encryption\n * \n * The salt parameter is not used, this implementation computes a random salt as\n * default.\n * \n * {@link #isPasswordValid(String, String, Object)}\n * {@link #encodePassword(String, Object)}\n * \n * @author Lorenzo Natali\n * \n */\npublic class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder {\n\n\tStandardPBEStringEncryptor stringEncrypter;\n\tStandardPBEByteEncryptor byteEncrypter;\n\n\tprivate String providerName, algorithm;\n\tprivate String keyAliasInKeyStore = KeyStoreProviderImpl.CONFIGPASSWORDKEY;\n\n\tprivate KeyStoreProvider keystoreProvider;\n\n\tpublic KeyStoreProvider getKeystoreProvider() {\n\t\treturn keystoreProvider;\n\t}\n\n\tpublic void setKeystoreProvider(KeyStoreProvider keystoreProvider) {\n\t\tthis.keystoreProvider = keystoreProvider;\n\t}\n\n\tpublic void setKeyAliasInKeyStore(String keyAliasInKeyStore) {\n\t\tthis.keyAliasInKeyStore = keyAliasInKeyStore;\n\t}\n\n\tpublic String getProviderName() {\n\t\treturn providerName;\n\t}\n\n\tpublic void setProviderName(String providerName) {\n\t\tthis.providerName = providerName;\n\t}\n\n\tpublic String getAlgorithm() {\n\t\treturn algorithm;\n\t}\n\n\tpublic void setAlgorithm(String algorithm) {\n\t\tthis.algorithm = algorithm;\n\t}\n\n\tpublic String getKeyAliasInKeyStore() {\n\t\treturn keyAliasInKeyStore;\n\t}\n\n\t@Override\n\tprotected PasswordEncoder createStringEncoder() {\n\t\tbyte[] password = lookupPasswordFromKeyStore();\n\n\t\tchar[] chars = toChars(password);\n\t\ttry {\n\t\t\tstringEncrypter = new StandardPBEStringEncryptor();\n\t\t\tstringEncrypter.setPasswordCharArray(chars);\n\n\t\t\tif (getProviderName() != null && !getProviderName().isEmpty()) {\n\t\t\t\tstringEncrypter.setProviderName(getProviderName());\n\t\t\t}\n\t\t\tstringEncrypter.setAlgorithm(getAlgorithm());\n\n\t\t\tJasyptPasswordEncoder encoder = new JasyptPasswordEncoder();\n\t\t\tencoder.setPbeStringEncryptor(stringEncrypter);\n\n\t\t\treturn encoder;\n\t\t} finally {\n\t\t\tscramble(password);\n\t\t\tscramble(chars);\n\t\t}\n\t}\n\n\t@Override\n\tprotected CharArrayPasswordEncoder createCharEncoder() {\n\t\tbyte[] password = lookupPasswordFromKeyStore();\n\t\tchar[] chars = toChars(password);\n\n\t\tbyteEncrypter = new StandardPBEByteEncryptor();\n\t\tbyteEncrypter.setPasswordCharArray(chars);\n\n\t\tif (getProviderName() != null && !getProviderName().isEmpty()) {\n\t\t\tbyteEncrypter.setProviderName(getProviderName());\n\t\t}\n\t\tbyteEncrypter.setAlgorithm(getAlgorithm());\n\n\t\treturn new CharArrayPasswordEncoder() {\n\t\t\t@Override\n\t\t\tpublic boolean matches(CharSequence rawPassword, String encodedPassword) {\n\t\t\t\tbyte[] decoded = Base64.getDecoder().decode(encPass.getBytes());\n\t\t\t\tbyte[] decrypted = byteEncrypter.decrypt(decoded);\n\n\t\t\t\tchar[] chars = toChars(decrypted);\n\t\t\t\ttry {\n\t\t\t\t\treturn Arrays.equals(chars, rawPass);\n\t\t\t\t} finally {\n\t\t\t\t\tscramble(decrypted);\n\t\t\t\t\tscramble(chars);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic String encode(CharSequence rawPassword) {\n\t\t\t\tbyte[] bytes = toBytes(rawPass);\n\t\t\t\ttry {\n\t\t\t\t\treturn new String(Base64.getEncoder().encode(byteEncrypter\n\t\t\t\t\t\t\t.encrypt(bytes)));\n\t\t\t\t} finally {\n\t\t\t\t\tscramble(bytes);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tbyte[] lookupPasswordFromKeyStore() {\n\t\ttry {\n\t\t\tif (!keystoreProvider.containsAlias(getKeyAliasInKeyStore())) {\n\t\t\t\tthrow new RuntimeException(\"Keystore: \"\n\t\t\t\t\t\t+ keystoreProvider.getFile() + \" does not\"\n\t\t\t\t\t\t+ \" contain alias: \" + getKeyAliasInKeyStore());\n\t\t\t}\n\t\t\treturn keystoreProvider.getSecretKey(getKeyAliasInKeyStore())\n\t\t\t\t\t.getEncoded();\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(\"Cannot find alias: \"\n\t\t\t\t\t+ getKeyAliasInKeyStore() + \" in \"\n\t\t\t\t\t+ keystoreProvider.getFile().getAbsolutePath());\n\t\t}\n\t}\n\n\t@Override\n\tpublic PasswordEncodingType getEncodingType() {\n\t\treturn PasswordEncodingType.ENCRYPT;\n\t}\n\n\tpublic String decode(String encPass) throws UnsupportedOperationException {\n\t\tif (stringEncrypter == null) {\n\t\t\t// not initialized\n\t\t\tgetStringEncoder();\n\t\t}\n\n\t\treturn stringEncrypter.decrypt(removePrefix(encPass));\n\t}\n\n\t@Override\n\tpublic char[] decodeToCharArray(String encPass)\n\t\t\tthrows UnsupportedOperationException {\n\t\tif (byteEncrypter == null) {\n\t\t\t// not initialized\n\t\t\tgetCharEncoder();\n\t\t}\n\n\t\tbyte[] decoded = Base64.getDecoder().decode(removePrefix(encPass).getBytes());\n\t\tbyte[] bytes = byteEncrypter.decrypt(decoded);\n\t\ttry {\n\t\t\treturn toChars(bytes);\n\t\t} finally {\n\t\t\tscramble(bytes);\n\t\t}\n\t}\n\t\n}\n",
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java": "/*\n *  Copyright (C) 2007 - 2011 GeoSolutions S.A.S.\n *  http://www.geo-solutions.it\n * \n *  GPLv3 + Classpath exception\n * \n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n * \n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n * \n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage it.geosolutions.geostore.core.security.password;\n\nimport org.apache.commons.codec.binary.Base64;\nimport org.jasypt.digest.StandardByteDigester;\nimport org.jasypt.spring3.security.crypto.password.PasswordEncoder;\nimport org.jasypt.util.password.StrongPasswordEncryptor;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\n\n/**\n * This Encoder provide encription and check of password using a digest\n * @author Lorenzo Natali (lorenzo.natali at geo-solutions.it)\n *\n */\npublic class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncoder{\n \n\n  /**\n   * The digest is not reversible\n   */\n     public GeoStoreDigestPasswordEncoder() {\n         setReversible(false);\n     }\n\n     @Override\n     protected PasswordEncoder createStringEncoder() {\n         PasswordEncoder encoder = new PasswordEncoder();\n         encoder.setPasswordEncryptor(new StrongPasswordEncryptor());\n         return encoder;\n     }\n\n     @Override\n     protected CharArrayPasswordEncoder createCharEncoder() {\n         return new CharArrayPasswordEncoder() {\n             StandardByteDigester digester = new StandardByteDigester();\n             {\n                 digester.setAlgorithm(\"SHA-256\");\n                 digester.setIterations(100000);\n                 digester.setSaltSizeBytes(16);\n                 digester.initialize();\n             }\n             \n             @Override\npublic String encode(CharSequence rawPassword) {\n                 return new String(Base64.encodeBase64(digester.digest(toBytes(rawPass))));\n             }\n             @Override\n             public boolean isPasswordValid(String encPass, char[] rawPass, Object salt) {\n                 return digester.matches(toBytes(rawPass), Base64.decodeBase64(encPass.getBytes())); \n             }\n         };\n     }\n\n     @Override\n     public PasswordEncodingType getEncodingType() {\n         return PasswordEncodingType.DIGEST;\n     }\n \n}"
                },
                "compile_error_details": {}
            },
            "error": "[INFO] Scanning for projects...\n[WARNING]\n[WARNING] Some problems were encountered while building the effective model for it.geosolutions.geostore:geostore-rest-impl:jar:1.9-SNAPSHOT\n[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.mockito:mockito-core:jar -> duplicate declaration of version (?) @ line 231, column 21\n[WARNING]\n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING]\n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING]\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] Master GeoStore POM [pom]\n[INFO] GeoStore - 0 Server Root [pom]\n[INFO] GeoStore - Core [pom]\n[INFO] GeoStore - Core - Model [jar]\n[INFO] GeoStore - Core - Security [jar]\n[INFO] GeoStore - Core - Persistence [jar]\n[INFO] GeoStore - Core - Services API [jar]\n[INFO] GeoStore - Core - Services implementation [jar]\n[INFO] GeoStore - Modules [pom]\n[INFO] GeoStore - Modules - REST root [pom]\n[INFO] GeoStore - Modules - REST API [jar]\n[INFO] GeoStore - Modules - REST services [jar]\n[INFO] GeoStore - Modules - REST client [jar]\n[INFO] GeoStore - Modules - REST EXTJS services [jar]\n[INFO] GeoStore - Modules - REST services test [war]\n[INFO] GeoStore - Modules - REST auditing [jar]\n[INFO] GeoStore - Web [pom]\n[INFO] GeoStore - Webapp [war]\n[INFO]\n[INFO] ----------------------< it.geosolutions:geostore >----------------------\n[INFO] Building Master GeoStore POM 1.9-SNAPSHOT [1/18]\n[INFO] from pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore ---\n[INFO]\n[INFO] ---------------< it.geosolutions.geostore:geostore-root >---------------\n[INFO] Building GeoStore - 0 Server Root 1.9-SNAPSHOT [2/18]\n[INFO] from src/pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-root ---\n[INFO]\n[INFO] ---------------< it.geosolutions.geostore:geostore-core >---------------\n[INFO] Building GeoStore - Core 1.9-SNAPSHOT [3/18]\n[INFO] from src/core/pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-core ---\n[INFO]\n[INFO] --------------< it.geosolutions.geostore:geostore-model >---------------\n[INFO] Building GeoStore - Core - Model 1.9-SNAPSHOT [4/18]\n[INFO] from src/core/model/pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-model ---\n[INFO]\n[INFO] --- resources:3.0.1:resources (default-resources) @ geostore-model ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /mnt/repo/src/core/model/src/main/resources\n[INFO]\n[INFO] --- compiler:3.5.1:compile (default-compile) @ geostore-model ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 20 source files to /mnt/repo/src/core/model/target/classes\n[INFO]\n[INFO] --- resources:3.0.1:testResources (default-testResources) @ geostore-model ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /mnt/repo/src/core/model/src/test/resources\n[INFO]\n[INFO] --- compiler:3.5.1:testCompile (default-testCompile) @ geostore-model ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 7 source files to /mnt/repo/src/core/model/target/test-classes\n[INFO]\n[INFO] --- surefire:2.4.2:test (default-test) @ geostore-model ---\n[INFO] Surefire report directory: /mnt/repo/src/core/model/target/surefire-reports\n-------------------------------------------------------\nT E S T S\n-------------------------------------------------------\nRunning it.geosolutions.geostore.core.model.SecurityRuleTest\nTests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.286 sec <<< FAILURE!\nRunning it.geosolutions.geostore.core.model.UserGroupTest\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.026 sec <<< FAILURE!\nRunning it.geosolutions.geostore.core.model.AttributeTest\nTests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.075 sec <<< FAILURE!\nRunning it.geosolutions.geostore.core.model.UserTest\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.055 sec <<< FAILURE!\nRunning it.geosolutions.geostore.core.model.CategoryTest\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.018 sec <<< FAILURE!\nRunning it.geosolutions.geostore.core.model.GroupReservedNamesTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec\nResults :\nTests in error:\ntestMarshallingUsername(it.geosolutions.geostore.core.model.SecurityRuleTest)\ntestMarshallingGroupname(it.geosolutions.geostore.core.model.SecurityRuleTest)\ntestMarshallingString(it.geosolutions.geostore.core.model.UserGroupTest)\ntestMarshallingNumber(it.geosolutions.geostore.core.model.AttributeTest)\ntestMarshallingString(it.geosolutions.geostore.core.model.AttributeTest)\ntestMarshallingDate(it.geosolutions.geostore.core.model.AttributeTest)\ntestMarshallingString(it.geosolutions.geostore.core.model.UserTest)\ntestMarshallingString(it.geosolutions.geostore.core.model.CategoryTest)\nTests run: 9, Failures: 0, Errors: 8, Skipped: 0\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for Master GeoStore POM 1.9-SNAPSHOT:\n[INFO]\n[INFO] Master GeoStore POM ................................ SUCCESS [ 0.516 s]\n[INFO] GeoStore - 0 Server Root ........................... SUCCESS [ 0.066 s]\n[INFO] GeoStore - Core .................................... SUCCESS [ 0.003 s]\n[INFO] GeoStore - Core - Model ............................ FAILURE [ 10.987 s]\n[INFO] GeoStore - Core - Security ......................... SKIPPED\n[INFO] GeoStore - Core - Persistence ...................... SKIPPED\n[INFO] GeoStore - Core - Services API ..................... SKIPPED\n[INFO] GeoStore - Core - Services implementation .......... SKIPPED\n[INFO] GeoStore - Modules ................................. SKIPPED\n[INFO] GeoStore - Modules - REST root ..................... SKIPPED\n[INFO] GeoStore - Modules - REST API ...................... SKIPPED\n[INFO] GeoStore - Modules - REST services ................. SKIPPED\n[INFO] GeoStore - Modules - REST client ................... SKIPPED\n[INFO] GeoStore - Modules - REST EXTJS services ........... SKIPPED\n[INFO] GeoStore - Modules - REST services test ............ SKIPPED\n[INFO] GeoStore - Modules - REST auditing ................. SKIPPED\n[INFO] GeoStore - Web ..................................... SKIPPED\n[INFO] GeoStore - Webapp .................................. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 13.337 s\n[INFO] Finished at: 2024-08-05T02:06:55Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.4.2:test (default-test) on project geostore-model: There are test failures.\n[ERROR]\n[ERROR] Please refer to /mnt/repo/src/core/model/target/surefire-reports for the individual test results.\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR] mvn <args> -rf :geostore-model",
            "span_id": 786681217671287145
        },
        {
            "input": "```diff\n--- a/src/core/model/pom.xml\n+++ b/src/core/model/pom.xml\n@@ -24,11 +24,13 @@\n         <dependency>\n             <groupId>javax.xml.bind</groupId>\n             <artifactId>jaxb-api</artifactId>\n+            <version>2.3.1</version>\n         </dependency>\n         <dependency>\n             <groupId>com.sun.xml.bind</groupId>\n             <artifactId>jaxb-impl</artifactId>\n+            <version>2.3.3</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jaxb</groupId>\n+            <artifactId>jaxb-runtime</artifactId>\n+            <version>2.3.3</version>\n+        </dependency>\n \n         \n \t\t<!-- HIBERNATE-SPATIAL -->\n@@ -65,6 +67,7 @@\n         <dependency>\n             <groupId>jdom</groupId>\n             <artifactId>jdom</artifactId>\n+            <version>1.1.3</version>\n         </dependency>\n \n \n@@ -73,6 +76,12 @@\n             <artifactId>junit</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        \n+        <dependency>\n+            <groupId>javax.activation</groupId>\n+            <artifactId>javax.activation-api</artifactId>\n+            <version>1.2.0</version>\n+        </dependency>\n     </dependencies>\n \n     <build>\n```",
            "output": {
                "compilation_has_succeeded": true,
                "test_has_succeeded": false,
                "error_text": "[INFO] Scanning for projects...\n[WARNING]\n[WARNING] Some problems were encountered while building the effective model for it.geosolutions.geostore:geostore-rest-impl:jar:1.9-SNAPSHOT\n[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.mockito:mockito-core:jar -> duplicate declaration of version (?) @ line 231, column 21\n[WARNING]\n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING]\n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING]\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] Master GeoStore POM [pom]\n[INFO] GeoStore - 0 Server Root [pom]\n[INFO] GeoStore - Core [pom]\n[INFO] GeoStore - Core - Model [jar]\n[INFO] GeoStore - Core - Security [jar]\n[INFO] GeoStore - Core - Persistence [jar]\n[INFO] GeoStore - Core - Services API [jar]\n[INFO] GeoStore - Core - Services implementation [jar]\n[INFO] GeoStore - Modules [pom]\n[INFO] GeoStore - Modules - REST root [pom]\n[INFO] GeoStore - Modules - REST API [jar]\n[INFO] GeoStore - Modules - REST services [jar]\n[INFO] GeoStore - Modules - REST client [jar]\n[INFO] GeoStore - Modules - REST EXTJS services [jar]\n[INFO] GeoStore - Modules - REST services test [war]\n[INFO] GeoStore - Modules - REST auditing [jar]\n[INFO] GeoStore - Web [pom]\n[INFO] GeoStore - Webapp [war]\n[INFO]\n[INFO] ----------------------< it.geosolutions:geostore >----------------------\n[INFO] Building Master GeoStore POM 1.9-SNAPSHOT [1/18]\n[INFO] from pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore ---\n[INFO]\n[INFO] ---------------< it.geosolutions.geostore:geostore-root >---------------\n[INFO] Building GeoStore - 0 Server Root 1.9-SNAPSHOT [2/18]\n[INFO] from src/pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-root ---\n[INFO]\n[INFO] ---------------< it.geosolutions.geostore:geostore-core >---------------\n[INFO] Building GeoStore - Core 1.9-SNAPSHOT [3/18]\n[INFO] from src/core/pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-core ---\n[INFO]\n[INFO] --------------< it.geosolutions.geostore:geostore-model >---------------\n[INFO] Building GeoStore - Core - Model 1.9-SNAPSHOT [4/18]\n[INFO] from src/core/model/pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for Master GeoStore POM 1.9-SNAPSHOT:\n[INFO]\n[INFO] Master GeoStore POM ................................ SUCCESS [ 0.523 s]\n[INFO] GeoStore - 0 Server Root ........................... SUCCESS [ 0.080 s]\n[INFO] GeoStore - Core .................................... SUCCESS [ 0.004 s]\n[INFO] GeoStore - Core - Model ............................ FAILURE [ 3.829 s]\n[INFO] GeoStore - Core - Security ......................... SKIPPED\n[INFO] GeoStore - Core - Persistence ...................... SKIPPED\n[INFO] GeoStore - Core - Services API ..................... SKIPPED\n[INFO] GeoStore - Core - Services implementation .......... SKIPPED\n[INFO] GeoStore - Modules ................................. SKIPPED\n[INFO] GeoStore - Modules - REST root ..................... SKIPPED\n[INFO] GeoStore - Modules - REST API ...................... SKIPPED\n[INFO] GeoStore - Modules - REST services ................. SKIPPED\n[INFO] GeoStore - Modules - REST client ................... SKIPPED\n[INFO] GeoStore - Modules - REST EXTJS services ........... SKIPPED\n[INFO] GeoStore - Modules - REST services test ............ SKIPPED\n[INFO] GeoStore - Modules - REST auditing ................. SKIPPED\n[INFO] GeoStore - Web ..................................... SKIPPED\n[INFO] GeoStore - Webapp .................................. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 6.070 s\n[INFO] Finished at: 2024-08-05T02:07:20Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal on project geostore-model: Could not collect dependencies for project it.geosolutions.geostore:geostore-model:jar:1.9-SNAPSHOT\n[ERROR] Failed to read artifact descriptor for jdom:jdom:jar:1.1.3\n[ERROR] Caused by: The following artifacts could not be resolved: jdom:jdom:pom:1.1.3 (absent): Could not transfer artifact jdom:jdom:pom:1.1.3 from/to maven-default-http-blocker (http://0.0.0.0/): Blocked mirror for repositories: [maven2-repository.dev.java.net (http://download.java.net/maven/2/, default, releases)]\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR] mvn <args> -rf :geostore-model",
                "updated_files": {
                    "src/core/model/pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n Copyright (C) 2007 - 2010 GeoSolutions S.A.S.\n http://www.geo-solutions.it\n\n GPLv3 + Classpath exception\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program.  If not, see <http://www.gnu.org/licenses />.\n -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>it.geosolutions.geostore</groupId>\n        <artifactId>geostore-core</artifactId>\n        <version>1.9-SNAPSHOT</version>\n    </parent>\n\n    <artifactId>geostore-model</artifactId>\n    <packaging>jar</packaging>\n    <name>GeoStore - Core - Model</name>\n\n    <dependencies>\n\n   <!-- JAXB -->\n        <dependency>\n            <groupId>javax.xml.bind</groupId>\n            <artifactId>jaxb-api</artifactId>\n<version>2.3.1</version>\n        </dependency>\n        <dependency>\n            <groupId>com.sun.xml.bind</groupId>\n            <artifactId>jaxb-impl</artifactId>\n<version>2.3.3</version>\n        </dependency>\n        <dependency>\n<groupId>org.glassfish.jaxb</groupId>\n<artifactId>jaxb-runtime</artifactId>\n<version>2.3.3</version>\n        </dependency>\n\n\n  <!-- HIBERNATE-SPATIAL -->\n        <dependency>\n            <groupId>org.hibernatespatial</groupId>\n            <artifactId>hibernate-spatial-postgis</artifactId>\n            <scope>provided</scope> <!-- the dao module should import them for runtime -->\n            <exclusions>\n                <exclusion>\n                    <groupId>org.slf4j</groupId>\n                    <artifactId>slf4j-api</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n     <!-- CGLIB -->\n        <dependency>\n            <groupId>asm</groupId>\n            <artifactId>asm</artifactId>\n            <scope>provided</scope> <!-- the dao module should import them for runtime -->\n        </dependency>\n        <dependency>\n            <groupId>cglib</groupId>\n            <artifactId>cglib-nodep</artifactId>\n            <scope>provided</scope> <!-- the dao module should import them for runtime -->\n        </dependency>\n\n    <!-- Apache Commons -->\n        <dependency>\n            <groupId>commons-beanutils</groupId>\n            <artifactId>commons-beanutils</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>jdom</groupId>\n            <artifactId>jdom</artifactId>\n            <version>1.1.3</version>\n        </dependency>\n\n\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n<groupId>javax.activation</groupId>\n<artifactId>javax.activation-api</artifactId>\n<version>1.2.0</version>\n        </dependency>\n    </dependencies>\n\n<build>\n\n<plugins>\n            <!-- Attach sources ============================================ -->\n<plugin>\n                <inherited>true</inherited>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <configuration>\n                    <attach>true</attach>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>attach-sources</id>\n<goals>\n                            <goal>jar</goal>\n</goals>\n                    </execution>\n                </executions>\n</plugin>\n\n        </plugins>\n</build>\n\n</project>"
                },
                "compile_error_details": {}
            },
            "error": "[INFO] Scanning for projects...\n[WARNING]\n[WARNING] Some problems were encountered while building the effective model for it.geosolutions.geostore:geostore-rest-impl:jar:1.9-SNAPSHOT\n[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.mockito:mockito-core:jar -> duplicate declaration of version (?) @ line 231, column 21\n[WARNING]\n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING]\n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING]\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] Master GeoStore POM [pom]\n[INFO] GeoStore - 0 Server Root [pom]\n[INFO] GeoStore - Core [pom]\n[INFO] GeoStore - Core - Model [jar]\n[INFO] GeoStore - Core - Security [jar]\n[INFO] GeoStore - Core - Persistence [jar]\n[INFO] GeoStore - Core - Services API [jar]\n[INFO] GeoStore - Core - Services implementation [jar]\n[INFO] GeoStore - Modules [pom]\n[INFO] GeoStore - Modules - REST root [pom]\n[INFO] GeoStore - Modules - REST API [jar]\n[INFO] GeoStore - Modules - REST services [jar]\n[INFO] GeoStore - Modules - REST client [jar]\n[INFO] GeoStore - Modules - REST EXTJS services [jar]\n[INFO] GeoStore - Modules - REST services test [war]\n[INFO] GeoStore - Modules - REST auditing [jar]\n[INFO] GeoStore - Web [pom]\n[INFO] GeoStore - Webapp [war]\n[INFO]\n[INFO] ----------------------< it.geosolutions:geostore >----------------------\n[INFO] Building Master GeoStore POM 1.9-SNAPSHOT [1/18]\n[INFO] from pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore ---\n[INFO]\n[INFO] ---------------< it.geosolutions.geostore:geostore-root >---------------\n[INFO] Building GeoStore - 0 Server Root 1.9-SNAPSHOT [2/18]\n[INFO] from src/pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-root ---\n[INFO]\n[INFO] ---------------< it.geosolutions.geostore:geostore-core >---------------\n[INFO] Building GeoStore - Core 1.9-SNAPSHOT [3/18]\n[INFO] from src/core/pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-core ---\n[INFO]\n[INFO] --------------< it.geosolutions.geostore:geostore-model >---------------\n[INFO] Building GeoStore - Core - Model 1.9-SNAPSHOT [4/18]\n[INFO] from src/core/model/pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for Master GeoStore POM 1.9-SNAPSHOT:\n[INFO]\n[INFO] Master GeoStore POM ................................ SUCCESS [ 0.523 s]\n[INFO] GeoStore - 0 Server Root ........................... SUCCESS [ 0.080 s]\n[INFO] GeoStore - Core .................................... SUCCESS [ 0.004 s]\n[INFO] GeoStore - Core - Model ............................ FAILURE [ 3.829 s]\n[INFO] GeoStore - Core - Security ......................... SKIPPED\n[INFO] GeoStore - Core - Persistence ...................... SKIPPED\n[INFO] GeoStore - Core - Services API ..................... SKIPPED\n[INFO] GeoStore - Core - Services implementation .......... SKIPPED\n[INFO] GeoStore - Modules ................................. SKIPPED\n[INFO] GeoStore - Modules - REST root ..................... SKIPPED\n[INFO] GeoStore - Modules - REST API ...................... SKIPPED\n[INFO] GeoStore - Modules - REST services ................. SKIPPED\n[INFO] GeoStore - Modules - REST client ................... SKIPPED\n[INFO] GeoStore - Modules - REST EXTJS services ........... SKIPPED\n[INFO] GeoStore - Modules - REST services test ............ SKIPPED\n[INFO] GeoStore - Modules - REST auditing ................. SKIPPED\n[INFO] GeoStore - Web ..................................... SKIPPED\n[INFO] GeoStore - Webapp .................................. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 6.070 s\n[INFO] Finished at: 2024-08-05T02:07:20Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal on project geostore-model: Could not collect dependencies for project it.geosolutions.geostore:geostore-model:jar:1.9-SNAPSHOT\n[ERROR] Failed to read artifact descriptor for jdom:jdom:jar:1.1.3\n[ERROR] Caused by: The following artifacts could not be resolved: jdom:jdom:pom:1.1.3 (absent): Could not transfer artifact jdom:jdom:pom:1.1.3 from/to maven-default-http-blocker (http://0.0.0.0/): Blocked mirror for repositories: [maven2-repository.dev.java.net (http://download.java.net/maven/2/, default, releases)]\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR] mvn <args> -rf :geostore-model",
            "span_id": 12027079295182599113
        },
        {
            "input": "```diff\n--- a/src/core/model/pom.xml\n+++ b/src/core/model/pom.xml\n@@ -65,9 +65,9 @@\n         </dependency>\n \n         <dependency>\n-            <groupId>jdom</groupId>\n+            <groupId>org.jdom</groupId>\n             <artifactId>jdom</artifactId>\n-            <version>1.1.3</version>\n+            <version>2.0.2</version>\n         </dependency>\n \n \n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: ';' expected\n",
                "updated_files": {
                    "src/core/model/pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n Copyright (C) 2007 - 2010 GeoSolutions S.A.S.\n http://www.geo-solutions.it\n\n GPLv3 + Classpath exception\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program.  If not, see <http://www.gnu.org/licenses />.\n -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>it.geosolutions.geostore</groupId>\n        <artifactId>geostore-core</artifactId>\n        <version>1.9-SNAPSHOT</version>\n    </parent>\n\n    <artifactId>geostore-model</artifactId>\n    <packaging>jar</packaging>\n    <name>GeoStore - Core - Model</name>\n\n    <dependencies>\n\n   <!-- JAXB -->\n        <dependency>\n            <groupId>javax.xml.bind</groupId>\n            <artifactId>jaxb-api</artifactId>\n<version>2.3.1</version>\n        </dependency>\n        <dependency>\n            <groupId>com.sun.xml.bind</groupId>\n            <artifactId>jaxb-impl</artifactId>\n<version>2.3.3</version>\n        </dependency>\n        <dependency>\n<groupId>org.glassfish.jaxb</groupId>\n<artifactId>jaxb-runtime</artifactId>\n<version>2.3.3</version>\n        </dependency>\n\n\n  <!-- HIBERNATE-SPATIAL -->\n        <dependency>\n            <groupId>org.hibernatespatial</groupId>\n            <artifactId>hibernate-spatial-postgis</artifactId>\n            <scope>provided</scope> <!-- the dao module should import them for runtime -->\n            <exclusions>\n                <exclusion>\n                    <groupId>org.slf4j</groupId>\n                    <artifactId>slf4j-api</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n     <!-- CGLIB -->\n        <dependency>\n            <groupId>asm</groupId>\n            <artifactId>asm</artifactId>\n            <scope>provided</scope> <!-- the dao module should import them for runtime -->\n        </dependency>\n        <dependency>\n            <groupId>cglib</groupId>\n            <artifactId>cglib-nodep</artifactId>\n            <scope>provided</scope> <!-- the dao module should import them for runtime -->\n        </dependency>\n\n    <!-- Apache Commons -->\n        <dependency>\n            <groupId>commons-beanutils</groupId>\n            <artifactId>commons-beanutils</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.jdom</groupId>\n            <artifactId>jdom</artifactId>\n            <version>2.0.2</version>\n        </dependency>\n\n\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n<groupId>javax.activation</groupId>\n<artifactId>javax.activation-api</artifactId>\n<version>1.2.0</version>\n        </dependency>\n    </dependencies>\n\n<build>\n\n<plugins>\n            <!-- Attach sources ============================================ -->\n<plugin>\n                <inherited>true</inherited>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <configuration>\n                    <attach>true</attach>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>attach-sources</id>\n<goals>\n                            <goal>jar</goal>\n</goals>\n                    </execution>\n                </executions>\n</plugin>\n\n        </plugins>\n</build>\n\n</project>"
                },
                "compile_error_details": {
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java": {
                        "33": {
                            "lines": [
                                {
                                    "line_no": 32,
                                    "content": "import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;"
                                },
                                {
                                    "line_no": 33,
                                    "content": "import org.jasypt.spring3.security.crypto.password.PasswordEncoder as JasyptPasswordEncoder;"
                                },
                                {
                                    "line_no": 34,
                                    "content": "/**"
                                }
                            ],
                            "error_texts": [
                                "[33,66] error: ';' expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: ';' expected\n",
            "span_id": 1095366181578337414
        },
        {
            "input": "```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n@@ -30,7 +30,7 @@ import java.util.Base64;\n import org.springframework.security.crypto.password.PasswordEncoder;\n import org.jasypt.encryption.pbe.StandardPBEByteEncryptor;\n import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;\n-import org.jasypt.spring3.security.crypto.password.PasswordEncoder as JasyptPasswordEncoder;\n+import org.jasypt.spring3.security.crypto.password.PasswordEncoder;\n /**\n  * Password Encoder using symmetric encryption\n  * \n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: cannot find symbol\n",
                "updated_files": {
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java": "package it.geosolutions.geostore.core.security.password;\n\n/*\n *  Copyright (C) 2007 - 2011 GeoSolutions S.A.S.\n *  http://www.geo-solutions.it\n *\n *  GPLv3 + Classpath exception\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.scramble;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toChars;\n\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.Base64;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.jasypt.encryption.pbe.StandardPBEByteEncryptor;\nimport org.jasypt.encryption.pbe.StandardPBEStringEncryptor;\nimport org.jasypt.spring3.security.crypto.password.PasswordEncoder;\n/**\n * Password Encoder using symmetric encryption\n * \n * The salt parameter is not used, this implementation computes a random salt as\n * default.\n * \n * {@link #isPasswordValid(String, String, Object)}\n * {@link #encodePassword(String, Object)}\n * \n * @author Lorenzo Natali\n * \n */\npublic class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder {\n\n\tStandardPBEStringEncryptor stringEncrypter;\n\tStandardPBEByteEncryptor byteEncrypter;\n\n\tprivate String providerName, algorithm;\n\tprivate String keyAliasInKeyStore = KeyStoreProviderImpl.CONFIGPASSWORDKEY;\n\n\tprivate KeyStoreProvider keystoreProvider;\n\n\tpublic KeyStoreProvider getKeystoreProvider() {\n\t\treturn keystoreProvider;\n\t}\n\n\tpublic void setKeystoreProvider(KeyStoreProvider keystoreProvider) {\n\t\tthis.keystoreProvider = keystoreProvider;\n\t}\n\n\tpublic void setKeyAliasInKeyStore(String keyAliasInKeyStore) {\n\t\tthis.keyAliasInKeyStore = keyAliasInKeyStore;\n\t}\n\n\tpublic String getProviderName() {\n\t\treturn providerName;\n\t}\n\n\tpublic void setProviderName(String providerName) {\n\t\tthis.providerName = providerName;\n\t}\n\n\tpublic String getAlgorithm() {\n\t\treturn algorithm;\n\t}\n\n\tpublic void setAlgorithm(String algorithm) {\n\t\tthis.algorithm = algorithm;\n\t}\n\n\tpublic String getKeyAliasInKeyStore() {\n\t\treturn keyAliasInKeyStore;\n\t}\n\n\t@Override\n\tprotected PasswordEncoder createStringEncoder() {\n\t\tbyte[] password = lookupPasswordFromKeyStore();\n\n\t\tchar[] chars = toChars(password);\n\t\ttry {\n\t\t\tstringEncrypter = new StandardPBEStringEncryptor();\n\t\t\tstringEncrypter.setPasswordCharArray(chars);\n\n\t\t\tif (getProviderName() != null && !getProviderName().isEmpty()) {\n\t\t\t\tstringEncrypter.setProviderName(getProviderName());\n\t\t\t}\n\t\t\tstringEncrypter.setAlgorithm(getAlgorithm());\n\n\t\t\tJasyptPasswordEncoder encoder = new JasyptPasswordEncoder();\n\t\t\tencoder.setPbeStringEncryptor(stringEncrypter);\n\n\t\t\treturn encoder;\n\t\t} finally {\n\t\t\tscramble(password);\n\t\t\tscramble(chars);\n\t\t}\n\t}\n\n\t@Override\n\tprotected CharArrayPasswordEncoder createCharEncoder() {\n\t\tbyte[] password = lookupPasswordFromKeyStore();\n\t\tchar[] chars = toChars(password);\n\n\t\tbyteEncrypter = new StandardPBEByteEncryptor();\n\t\tbyteEncrypter.setPasswordCharArray(chars);\n\n\t\tif (getProviderName() != null && !getProviderName().isEmpty()) {\n\t\t\tbyteEncrypter.setProviderName(getProviderName());\n\t\t}\n\t\tbyteEncrypter.setAlgorithm(getAlgorithm());\n\n\t\treturn new CharArrayPasswordEncoder() {\n\t\t\t@Override\n\t\t\tpublic boolean matches(CharSequence rawPassword, String encodedPassword) {\n\t\t\t\tbyte[] decoded = Base64.getDecoder().decode(encPass.getBytes());\n\t\t\t\tbyte[] decrypted = byteEncrypter.decrypt(decoded);\n\n\t\t\t\tchar[] chars = toChars(decrypted);\n\t\t\t\ttry {\n\t\t\t\t\treturn Arrays.equals(chars, rawPass);\n\t\t\t\t} finally {\n\t\t\t\t\tscramble(decrypted);\n\t\t\t\t\tscramble(chars);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic String encode(CharSequence rawPassword) {\n\t\t\t\tbyte[] bytes = toBytes(rawPass);\n\t\t\t\ttry {\n\t\t\t\t\treturn new String(Base64.getEncoder().encode(byteEncrypter\n\t\t\t\t\t\t\t.encrypt(bytes)));\n\t\t\t\t} finally {\n\t\t\t\t\tscramble(bytes);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tbyte[] lookupPasswordFromKeyStore() {\n\t\ttry {\n\t\t\tif (!keystoreProvider.containsAlias(getKeyAliasInKeyStore())) {\n\t\t\t\tthrow new RuntimeException(\"Keystore: \"\n\t\t\t\t\t\t+ keystoreProvider.getFile() + \" does not\"\n\t\t\t\t\t\t+ \" contain alias: \" + getKeyAliasInKeyStore());\n\t\t\t}\n\t\t\treturn keystoreProvider.getSecretKey(getKeyAliasInKeyStore())\n\t\t\t\t\t.getEncoded();\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(\"Cannot find alias: \"\n\t\t\t\t\t+ getKeyAliasInKeyStore() + \" in \"\n\t\t\t\t\t+ keystoreProvider.getFile().getAbsolutePath());\n\t\t}\n\t}\n\n\t@Override\n\tpublic PasswordEncodingType getEncodingType() {\n\t\treturn PasswordEncodingType.ENCRYPT;\n\t}\n\n\tpublic String decode(String encPass) throws UnsupportedOperationException {\n\t\tif (stringEncrypter == null) {\n\t\t\t// not initialized\n\t\t\tgetStringEncoder();\n\t\t}\n\n\t\treturn stringEncrypter.decrypt(removePrefix(encPass));\n\t}\n\n\t@Override\n\tpublic char[] decodeToCharArray(String encPass)\n\t\t\tthrows UnsupportedOperationException {\n\t\tif (byteEncrypter == null) {\n\t\t\t// not initialized\n\t\t\tgetCharEncoder();\n\t\t}\n\n\t\tbyte[] decoded = Base64.getDecoder().decode(removePrefix(encPass).getBytes());\n\t\tbyte[] bytes = byteEncrypter.decrypt(decoded);\n\t\ttry {\n\t\t\treturn toChars(bytes);\n\t\t} finally {\n\t\t\tscramble(bytes);\n\t\t}\n\t}\n\t\n}\n"
                },
                "compile_error_details": {
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java": {
                        "24": {
                            "lines": [
                                {
                                    "line_no": 23,
                                    "content": "import org.jasypt.digest.StandardByteDigester;"
                                },
                                {
                                    "line_no": 24,
                                    "content": "import org.jasypt.spring3.security.crypto.password.PasswordEncoder;"
                                },
                                {
                                    "line_no": 25,
                                    "content": "import org.jasypt.util.password.StrongPasswordEncryptor;"
                                }
                            ],
                            "error_texts": [
                                "[24,50] error: package org.jasypt.spring3.security.crypto.password does not exist\n"
                            ]
                        },
                        "44": {
                            "lines": [
                                {
                                    "line_no": 43,
                                    "content": "     @Override"
                                },
                                {
                                    "line_no": 44,
                                    "content": "     protected PasswordEncoder createStringEncoder() {"
                                },
                                {
                                    "line_no": 45,
                                    "content": "         PasswordEncoder encoder = new PasswordEncoder();"
                                }
                            ],
                            "error_texts": [
                                "[44,15] error: cannot find symbol\n"
                            ]
                        },
                        "45": {
                            "lines": [
                                {
                                    "line_no": 44,
                                    "content": "     protected PasswordEncoder createStringEncoder() {"
                                },
                                {
                                    "line_no": 45,
                                    "content": "         PasswordEncoder encoder = new PasswordEncoder();"
                                },
                                {
                                    "line_no": 46,
                                    "content": "         encoder.setPasswordEncryptor(new StrongPasswordEncryptor());"
                                }
                            ],
                            "error_texts": [
                                "[45,9] error: cannot find symbol\n",
                                "[45,39] error: cannot find symbol\n"
                            ]
                        },
                        "61": {
                            "lines": [
                                {
                                    "line_no": 60,
                                    "content": "             "
                                },
                                {
                                    "line_no": 61,
                                    "content": "             @Override"
                                },
                                {
                                    "line_no": 62,
                                    "content": "public String encode(CharSequence rawPassword) {"
                                }
                            ],
                            "error_texts": [
                                "[61,13] error: method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "63": {
                            "lines": [
                                {
                                    "line_no": 62,
                                    "content": "public String encode(CharSequence rawPassword) {"
                                },
                                {
                                    "line_no": 63,
                                    "content": "                 return new String(Base64.encodeBase64(digester.digest(toBytes(rawPass))));"
                                },
                                {
                                    "line_no": 64,
                                    "content": "             }"
                                }
                            ],
                            "error_texts": [
                                "[63,79] error: cannot find symbol\n"
                            ]
                        },
                        "52": {
                            "lines": [
                                {
                                    "line_no": 51,
                                    "content": "     protected CharArrayPasswordEncoder createCharEncoder() {"
                                },
                                {
                                    "line_no": 52,
                                    "content": "         return new CharArrayPasswordEncoder() {"
                                },
                                {
                                    "line_no": 53,
                                    "content": "             StandardByteDigester digester = new StandardByteDigester();"
                                }
                            ],
                            "error_texts": [
                                "[52,47] error: <anonymous it.geosolutions.geostore.core.security.password.GeoStoreDigestPasswordEncoder$1> is not abstract and does not override abstract method encodePassword(char[],Object) in CharArrayPasswordEncoder\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: cannot find symbol\n",
            "span_id": 1286545968790195934
        },
        {
            "input": "I apologize for the confusion. It seems that the Jasypt library has undergone significant changes, and the `org.jasypt.spring3.security.crypto.password.PasswordEncoder` class is no longer available. We need to update our code to use the new Jasypt API. Let's make the following changes:\n\n1. Update the `GeoStorePBEPasswordEncoder.java` file:\n\n```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n@@ -30,7 +30,7 @@ import java.util.Base64;\n import org.springframework.security.crypto.password.PasswordEncoder;\n import org.jasypt.encryption.pbe.StandardPBEByteEncryptor;\n import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;\n-import org.jasypt.spring3.security.crypto.password.PasswordEncoder;\n+import org.jasypt.util.password.StrongPasswordEncryptor;\n /**\n  * Password Encoder using symmetric encryption\n  * \n@@ -102,8 +102,8 @@ public class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder\n \t\t\t}\n \t\t\tstringEncrypter.setAlgorithm(getAlgorithm());\n \n-\t\t\tJasyptPasswordEncoder encoder = new JasyptPasswordEncoder();\n-\t\t\tencoder.setPbeStringEncryptor(stringEncrypter);\n+\t\t\tStrongPasswordEncryptor encoder = new StrongPasswordEncryptor();\n+\t\t\t// Note: StrongPasswordEncryptor doesn't have a setPbeStringEncryptor method\n \n \t\t\treturn encoder;\n \t\t} finally {\n```\n\n2. Update the `GeoStoreDigestPasswordEncoder.java` file:\n\n```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java\n@@ -21,7 +21,7 @@ package it.geosolutions.geostore.core.security.password;\n \n import org.apache.commons.codec.binary.Base64;\n import org.jasypt.digest.StandardByteDigester;\n-import org.jasypt.spring3.security.crypto.password.PasswordEncoder;\n+import org.springframework.security.crypto.password.PasswordEncoder;\n import org.jasypt.util.password.StrongPasswordEncryptor;\n import static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\n \n@@ -41,9 +41,9 @@ public class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncod\n     }\n \n     @Override\n-    protected PasswordEncoder createStringEncoder() {\n-        PasswordEncoder encoder = new PasswordEncoder();\n-        encoder.setPasswordEncryptor(new StrongPasswordEncryptor());\n+    protected org.springframework.security.crypto.password.PasswordEncoder createStringEncoder() {\n+        StrongPasswordEncryptor passwordEncryptor = new StrongPasswordEncryptor();\n+        PasswordEncoder encoder = new SpringSecurityPasswordEncoder(passwordEncryptor);\n         return encoder;\n     }\n \n@@ -60,11 +60,11 @@ public class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncod\n             \n             @Override\n             public String encode(CharSequence rawPassword) {\n-                return new String(Base64.encodeBase64(digester.digest(toBytes(rawPass))));\n+                return new String(Base64.encodeBase64(digester.digest(toBytes(rawPassword.toString().toCharArray()))));\n             }\n             @Override\n-            public boolean isPasswordValid(String encPass, char[]",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: method does not override or implement a method from a supertype\n",
                "updated_files": {
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java": "package it.geosolutions.geostore.core.security.password;\n\n/*\n *  Copyright (C) 2007 - 2011 GeoSolutions S.A.S.\n *  http://www.geo-solutions.it\n *\n *  GPLv3 + Classpath exception\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.scramble;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toChars;\n\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.Base64;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.jasypt.encryption.pbe.StandardPBEByteEncryptor;\nimport org.jasypt.encryption.pbe.StandardPBEStringEncryptor;\nimport org.jasypt.util.password.StrongPasswordEncryptor;\n/**\n * Password Encoder using symmetric encryption\n * \n * The salt parameter is not used, this implementation computes a random salt as\n * default.\n * \n * {@link #isPasswordValid(String, String, Object)}\n * {@link #encodePassword(String, Object)}\n * \n * @author Lorenzo Natali\n * \n */\npublic class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder {\n\n\tStandardPBEStringEncryptor stringEncrypter;\n\tStandardPBEByteEncryptor byteEncrypter;\n\n\tprivate String providerName, algorithm;\n\tprivate String keyAliasInKeyStore = KeyStoreProviderImpl.CONFIGPASSWORDKEY;\n\n\tprivate KeyStoreProvider keystoreProvider;\n\n\tpublic KeyStoreProvider getKeystoreProvider() {\n\t\treturn keystoreProvider;\n\t}\n\n\tpublic void setKeystoreProvider(KeyStoreProvider keystoreProvider) {\n\t\tthis.keystoreProvider = keystoreProvider;\n\t}\n\n\tpublic void setKeyAliasInKeyStore(String keyAliasInKeyStore) {\n\t\tthis.keyAliasInKeyStore = keyAliasInKeyStore;\n\t}\n\n\tpublic String getProviderName() {\n\t\treturn providerName;\n\t}\n\n\tpublic void setProviderName(String providerName) {\n\t\tthis.providerName = providerName;\n\t}\n\n\tpublic String getAlgorithm() {\n\t\treturn algorithm;\n\t}\n\n\tpublic void setAlgorithm(String algorithm) {\n\t\tthis.algorithm = algorithm;\n\t}\n\n\tpublic String getKeyAliasInKeyStore() {\n\t\treturn keyAliasInKeyStore;\n\t}\n\n\t@Override\n\tprotected PasswordEncoder createStringEncoder() {\n\t\tbyte[] password = lookupPasswordFromKeyStore();\n\n\t\tchar[] chars = toChars(password);\n\t\ttry {\n\t\t\tstringEncrypter = new StandardPBEStringEncryptor();\n\t\t\tstringEncrypter.setPasswordCharArray(chars);\n\n\t\t\tif (getProviderName() != null && !getProviderName().isEmpty()) {\n\t\t\t\tstringEncrypter.setProviderName(getProviderName());\n\t\t\t}\n\t\t\tstringEncrypter.setAlgorithm(getAlgorithm());\n\n\t\t\tStrongPasswordEncryptor encoder = new StrongPasswordEncryptor();\n\t\t\t// Note: StrongPasswordEncryptor doesn't have a setPbeStringEncryptor method\n\n\t\t\treturn encoder;\n\t\t} finally {\n\t\t\tscramble(password);\n\t\t\tscramble(chars);\n\t\t}\n\t}\n\n\t@Override\n\tprotected CharArrayPasswordEncoder createCharEncoder() {\n\t\tbyte[] password = lookupPasswordFromKeyStore();\n\t\tchar[] chars = toChars(password);\n\n\t\tbyteEncrypter = new StandardPBEByteEncryptor();\n\t\tbyteEncrypter.setPasswordCharArray(chars);\n\n\t\tif (getProviderName() != null && !getProviderName().isEmpty()) {\n\t\t\tbyteEncrypter.setProviderName(getProviderName());\n\t\t}\n\t\tbyteEncrypter.setAlgorithm(getAlgorithm());\n\n\t\treturn new CharArrayPasswordEncoder() {\n\t\t\t@Override\n\t\t\tpublic boolean matches(CharSequence rawPassword, String encodedPassword) {\n\t\t\t\tbyte[] decoded = Base64.getDecoder().decode(encPass.getBytes());\n\t\t\t\tbyte[] decrypted = byteEncrypter.decrypt(decoded);\n\n\t\t\t\tchar[] chars = toChars(decrypted);\n\t\t\t\ttry {\n\t\t\t\t\treturn Arrays.equals(chars, rawPass);\n\t\t\t\t} finally {\n\t\t\t\t\tscramble(decrypted);\n\t\t\t\t\tscramble(chars);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic String encode(CharSequence rawPassword) {\n\t\t\t\tbyte[] bytes = toBytes(rawPass);\n\t\t\t\ttry {\n\t\t\t\t\treturn new String(Base64.getEncoder().encode(byteEncrypter\n\t\t\t\t\t\t\t.encrypt(bytes)));\n\t\t\t\t} finally {\n\t\t\t\t\tscramble(bytes);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tbyte[] lookupPasswordFromKeyStore() {\n\t\ttry {\n\t\t\tif (!keystoreProvider.containsAlias(getKeyAliasInKeyStore())) {\n\t\t\t\tthrow new RuntimeException(\"Keystore: \"\n\t\t\t\t\t\t+ keystoreProvider.getFile() + \" does not\"\n\t\t\t\t\t\t+ \" contain alias: \" + getKeyAliasInKeyStore());\n\t\t\t}\n\t\t\treturn keystoreProvider.getSecretKey(getKeyAliasInKeyStore())\n\t\t\t\t\t.getEncoded();\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(\"Cannot find alias: \"\n\t\t\t\t\t+ getKeyAliasInKeyStore() + \" in \"\n\t\t\t\t\t+ keystoreProvider.getFile().getAbsolutePath());\n\t\t}\n\t}\n\n\t@Override\n\tpublic PasswordEncodingType getEncodingType() {\n\t\treturn PasswordEncodingType.ENCRYPT;\n\t}\n\n\tpublic String decode(String encPass) throws UnsupportedOperationException {\n\t\tif (stringEncrypter == null) {\n\t\t\t// not initialized\n\t\t\tgetStringEncoder();\n\t\t}\n\n\t\treturn stringEncrypter.decrypt(removePrefix(encPass));\n\t}\n\n\t@Override\n\tpublic char[] decodeToCharArray(String encPass)\n\t\t\tthrows UnsupportedOperationException {\n\t\tif (byteEncrypter == null) {\n\t\t\t// not initialized\n\t\t\tgetCharEncoder();\n\t\t}\n\n\t\tbyte[] decoded = Base64.getDecoder().decode(removePrefix(encPass).getBytes());\n\t\tbyte[] bytes = byteEncrypter.decrypt(decoded);\n\t\ttry {\n\t\t\treturn toChars(bytes);\n\t\t} finally {\n\t\t\tscramble(bytes);\n\t\t}\n\t}\n\t\n}\n",
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java": "/*\n *  Copyright (C) 2007 - 2011 GeoSolutions S.A.S.\n *  http://www.geo-solutions.it\n * \n *  GPLv3 + Classpath exception\n * \n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n * \n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n * \n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage it.geosolutions.geostore.core.security.password;\n\nimport org.apache.commons.codec.binary.Base64;\nimport org.jasypt.digest.StandardByteDigester;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.jasypt.util.password.StrongPasswordEncryptor;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\n\n/**\n * This Encoder provide encription and check of password using a digest\n * @author Lorenzo Natali (lorenzo.natali at geo-solutions.it)\n *\n */\npublic class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncoder{\n \n\n  /**\n   * The digest is not reversible\n   */\n     public GeoStoreDigestPasswordEncoder() {\n         setReversible(false);\n     }\n\n     @Override\nprotected org.springframework.security.crypto.password.PasswordEncoder createStringEncoder() {\nStrongPasswordEncryptor passwordEncryptor = new StrongPasswordEncryptor();\nPasswordEncoder encoder = new SpringSecurityPasswordEncoder(passwordEncryptor);\n         return encoder;\n     }\n\n     @Override\n     protected CharArrayPasswordEncoder createCharEncoder() {\n         return new CharArrayPasswordEncoder() {\n             StandardByteDigester digester = new StandardByteDigester();\n             {\n                 digester.setAlgorithm(\"SHA-256\");\n                 digester.setIterations(100000);\n                 digester.setSaltSizeBytes(16);\n                 digester.initialize();\n             }\n             \n             @Override\npublic String encode(CharSequence rawPassword) {\nreturn new String(Base64.encodeBase64(digester.digest(toBytes(rawPassword.toString().toCharArray()))));\n             }\n             @Override\n             public boolean isPasswordValid(String encPass, char[] rawPass, Object salt) {\n                 return digester.matches(toBytes(rawPass), Base64.decodeBase64(encPass.getBytes())); \n             }\n         };\n     }\n\n     @Override\n     public PasswordEncodingType getEncodingType() {\n         return PasswordEncodingType.DIGEST;\n     }\n \n}"
                },
                "compile_error_details": {
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java": {
                        "33": {
                            "lines": [
                                {
                                    "line_no": 32,
                                    "content": " */"
                                },
                                {
                                    "line_no": 33,
                                    "content": "public class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncoder{"
                                },
                                {
                                    "line_no": 34,
                                    "content": " "
                                }
                            ],
                            "error_texts": [
                                "[33,7] error: GeoStoreDigestPasswordEncoder is not abstract and does not override abstract method createStringEncoder() in AbstractGeoStorePasswordEncoder\n"
                            ]
                        },
                        "44": {
                            "lines": [
                                {
                                    "line_no": 43,
                                    "content": "     @Override"
                                },
                                {
                                    "line_no": 44,
                                    "content": "protected org.springframework.security.crypto.password.PasswordEncoder createStringEncoder() {"
                                },
                                {
                                    "line_no": 45,
                                    "content": "StrongPasswordEncryptor passwordEncryptor = new StrongPasswordEncryptor();"
                                }
                            ],
                            "error_texts": [
                                "[44,71] error: createStringEncoder() in GeoStoreDigestPasswordEncoder cannot override createStringEncoder() in AbstractGeoStorePasswordEncoder\n"
                            ]
                        },
                        "46": {
                            "lines": [
                                {
                                    "line_no": 45,
                                    "content": "StrongPasswordEncryptor passwordEncryptor = new StrongPasswordEncryptor();"
                                },
                                {
                                    "line_no": 46,
                                    "content": "PasswordEncoder encoder = new SpringSecurityPasswordEncoder(passwordEncryptor);"
                                },
                                {
                                    "line_no": 47,
                                    "content": "         return encoder;"
                                }
                            ],
                            "error_texts": [
                                "[46,30] error: cannot find symbol\n"
                            ]
                        },
                        "61": {
                            "lines": [
                                {
                                    "line_no": 60,
                                    "content": "             "
                                },
                                {
                                    "line_no": 61,
                                    "content": "             @Override"
                                },
                                {
                                    "line_no": 62,
                                    "content": "public String encode(CharSequence rawPassword) {"
                                }
                            ],
                            "error_texts": [
                                "[61,13] error: method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "43": {
                            "lines": [
                                {
                                    "line_no": 42,
                                    "content": ""
                                },
                                {
                                    "line_no": 43,
                                    "content": "     @Override"
                                },
                                {
                                    "line_no": 44,
                                    "content": "protected org.springframework.security.crypto.password.PasswordEncoder createStringEncoder() {"
                                }
                            ],
                            "error_texts": [
                                "[43,5] error: method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "52": {
                            "lines": [
                                {
                                    "line_no": 51,
                                    "content": "     protected CharArrayPasswordEncoder createCharEncoder() {"
                                },
                                {
                                    "line_no": 52,
                                    "content": "         return new CharArrayPasswordEncoder() {"
                                },
                                {
                                    "line_no": 53,
                                    "content": "             StandardByteDigester digester = new StandardByteDigester();"
                                }
                            ],
                            "error_texts": [
                                "[52,47] error: <anonymous it.geosolutions.geostore.core.security.password.GeoStoreDigestPasswordEncoder$1> is not abstract and does not override abstract method encodePassword(char[],Object) in CharArrayPasswordEncoder\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: method does not override or implement a method from a supertype\n",
            "span_id": 7422528126169968434
        },
        {
            "input": "I apologize for the confusion. It seems that the `AbstractGeoStorePasswordEncoder` class has a different structure than we initially assumed. Let's modify our approach to make it compatible with the existing structure. We'll update both `GeoStorePBEPasswordEncoder` and `GeoStoreDigestPasswordEncoder` classes:\n\n1. Update `GeoStorePBEPasswordEncoder.java`:\n\n```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n@@ -27,10 +27,10 @@ import static it.geosolutions.geostore.core.security.password.SecurityUtils.toCh\n import java.io.IOException;\n import java.util.Arrays;\n import java.util.Base64;\n-import org.springframework.security.crypto.password.PasswordEncoder;\n import org.jasypt.encryption.pbe.StandardPBEByteEncryptor;\n import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;\n import org.jasypt.util.password.StrongPasswordEncryptor;\n+import org.springframework.security.crypto.password.PasswordEncoder;\n /**\n  * Password Encoder using symmetric encryption\n  * \n@@ -82,7 +82,7 @@ public class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder\n \t}\n \n \t@Override\n-\tprotected PasswordEncoder createStringEncoder() {\n+\tprotected org.acegisecurity.providers.encoding.PasswordEncoder createStringEncoder() {\n \t\tbyte[] password = lookupPasswordFromKeyStore();\n \n \t\tchar[] chars = toChars(password);\n@@ -95,10 +95,17 @@ public class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder\n \t\t\t}\n \t\t\tstringEncrypter.setAlgorithm(getAlgorithm());\n \n-\t\t\tStrongPasswordEncryptor encoder = new StrongPasswordEncryptor();\n-\t\t\t// Note: StrongPasswordEncryptor doesn't have a setPbeStringEncryptor method\n-\n-\t\t\treturn encoder;\n+\t\t\treturn new org.acegisecurity.providers.encoding.PasswordEncoder() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic String encodePassword(String rawPass, Object salt) {\n+\t\t\t\t\treturn stringEncrypter.encrypt(rawPass);\n+\t\t\t\t}\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic boolean isPasswordValid(String encPass, String rawPass, Object salt) {\n+\t\t\t\t\treturn stringEncrypter.decrypt(encPass).equals(rawPass);\n+\t\t\t\t}\n+\t\t\t};\n \t\t} finally {\n \t\t\tscramble(password);\n \t\t\tscramble(chars);\n```\n\n2. Update `GeoStoreDigestPasswordEncoder.java`:\n\n```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java\n@@ -21,7 +21,7 @@ package it.geosolutions.geostore.core.security.password;\n \n import org.apache.commons.codec.binary.Base64;\n import org.jasypt.digest.StandardByteDigester;\n-import org.springframework.security.crypto.password.PasswordEncoder;\n+import org.acegisecurity.providers.encoding.PasswordEncoder;\n import org.jasypt.util.password.StrongPasswordEncryptor;\n import static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\n \n@@ -41,10 +41,18 @@ public class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncod\n     }\n \n     @Override\n-    protected org.springframework.security.crypto.password.",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: method does not override or implement a method from a supertype\n",
                "updated_files": {
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java": "package it.geosolutions.geostore.core.security.password;\n\n/*\n *  Copyright (C) 2007 - 2011 GeoSolutions S.A.S.\n *  http://www.geo-solutions.it\n *\n *  GPLv3 + Classpath exception\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.scramble;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toChars;\n\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.Base64;\nimport org.jasypt.encryption.pbe.StandardPBEByteEncryptor;\nimport org.jasypt.encryption.pbe.StandardPBEStringEncryptor;\nimport org.jasypt.util.password.StrongPasswordEncryptor;\nimport org.springframework.security.crypto.password.PasswordEncoder;\n/**\n * Password Encoder using symmetric encryption\n * \n * The salt parameter is not used, this implementation computes a random salt as\n * default.\n * \n * {@link #isPasswordValid(String, String, Object)}\n * {@link #encodePassword(String, Object)}\n * \n * @author Lorenzo Natali\n * \n */\npublic class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder {\n\n\tStandardPBEStringEncryptor stringEncrypter;\n\tStandardPBEByteEncryptor byteEncrypter;\n\n\tprivate String providerName, algorithm;\n\tprivate String keyAliasInKeyStore = KeyStoreProviderImpl.CONFIGPASSWORDKEY;\n\n\tprivate KeyStoreProvider keystoreProvider;\n\n\tpublic KeyStoreProvider getKeystoreProvider() {\n\t\treturn keystoreProvider;\n\t}\n\n\tpublic void setKeystoreProvider(KeyStoreProvider keystoreProvider) {\n\t\tthis.keystoreProvider = keystoreProvider;\n\t}\n\n\tpublic void setKeyAliasInKeyStore(String keyAliasInKeyStore) {\n\t\tthis.keyAliasInKeyStore = keyAliasInKeyStore;\n\t}\n\n\tpublic String getProviderName() {\n\t\treturn providerName;\n\t}\n\n\tpublic void setProviderName(String providerName) {\n\t\tthis.providerName = providerName;\n\t}\n\n\tpublic String getAlgorithm() {\n\t\treturn algorithm;\n\t}\n\n\tpublic void setAlgorithm(String algorithm) {\n\t\tthis.algorithm = algorithm;\n\t}\n\n\tpublic String getKeyAliasInKeyStore() {\n\t\treturn keyAliasInKeyStore;\n\t}\n\n\t@Override\n\tprotected org.acegisecurity.providers.encoding.PasswordEncoder createStringEncoder() {\n\t\tbyte[] password = lookupPasswordFromKeyStore();\n\n\t\tchar[] chars = toChars(password);\n\t\ttry {\n\t\t\tstringEncrypter = new StandardPBEStringEncryptor();\n\t\t\tstringEncrypter.setPasswordCharArray(chars);\n\n\t\t\tif (getProviderName() != null && !getProviderName().isEmpty()) {\n\t\t\t\tstringEncrypter.setProviderName(getProviderName());\n\t\t\t}\n\t\t\tstringEncrypter.setAlgorithm(getAlgorithm());\n\n\t\t\treturn new org.acegisecurity.providers.encoding.PasswordEncoder() {\n\t\t\t\t@Override\n\t\t\t\tpublic String encodePassword(String rawPass, Object salt) {\n\t\t\t\t\treturn stringEncrypter.encrypt(rawPass);\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic boolean isPasswordValid(String encPass, String rawPass, Object salt) {\n\t\t\t\t\treturn stringEncrypter.decrypt(encPass).equals(rawPass);\n\t\t\t\t}\n\t\t\t};\n\t\t} finally {\n\t\t\tscramble(password);\n\t\t\tscramble(chars);\n\t\t}\n\t}\n\n\t@Override\n\tprotected CharArrayPasswordEncoder createCharEncoder() {\n\t\tbyte[] password = lookupPasswordFromKeyStore();\n\t\tchar[] chars = toChars(password);\n\n\t\tbyteEncrypter = new StandardPBEByteEncryptor();\n\t\tbyteEncrypter.setPasswordCharArray(chars);\n\n\t\tif (getProviderName() != null && !getProviderName().isEmpty()) {\n\t\t\tbyteEncrypter.setProviderName(getProviderName());\n\t\t}\n\t\tbyteEncrypter.setAlgorithm(getAlgorithm());\n\n\t\treturn new CharArrayPasswordEncoder() {\n\t\t\t@Override\n\t\t\tpublic boolean matches(CharSequence rawPassword, String encodedPassword) {\n\t\t\t\tbyte[] decoded = Base64.getDecoder().decode(encPass.getBytes());\n\t\t\t\tbyte[] decrypted = byteEncrypter.decrypt(decoded);\n\n\t\t\t\tchar[] chars = toChars(decrypted);\n\t\t\t\ttry {\n\t\t\t\t\treturn Arrays.equals(chars, rawPass);\n\t\t\t\t} finally {\n\t\t\t\t\tscramble(decrypted);\n\t\t\t\t\tscramble(chars);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic String encode(CharSequence rawPassword) {\n\t\t\t\tbyte[] bytes = toBytes(rawPass);\n\t\t\t\ttry {\n\t\t\t\t\treturn new String(Base64.getEncoder().encode(byteEncrypter\n\t\t\t\t\t\t\t.encrypt(bytes)));\n\t\t\t\t} finally {\n\t\t\t\t\tscramble(bytes);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tbyte[] lookupPasswordFromKeyStore() {\n\t\ttry {\n\t\t\tif (!keystoreProvider.containsAlias(getKeyAliasInKeyStore())) {\n\t\t\t\tthrow new RuntimeException(\"Keystore: \"\n\t\t\t\t\t\t+ keystoreProvider.getFile() + \" does not\"\n\t\t\t\t\t\t+ \" contain alias: \" + getKeyAliasInKeyStore());\n\t\t\t}\n\t\t\treturn keystoreProvider.getSecretKey(getKeyAliasInKeyStore())\n\t\t\t\t\t.getEncoded();\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(\"Cannot find alias: \"\n\t\t\t\t\t+ getKeyAliasInKeyStore() + \" in \"\n\t\t\t\t\t+ keystoreProvider.getFile().getAbsolutePath());\n\t\t}\n\t}\n\n\t@Override\n\tpublic PasswordEncodingType getEncodingType() {\n\t\treturn PasswordEncodingType.ENCRYPT;\n\t}\n\n\tpublic String decode(String encPass) throws UnsupportedOperationException {\n\t\tif (stringEncrypter == null) {\n\t\t\t// not initialized\n\t\t\tgetStringEncoder();\n\t\t}\n\n\t\treturn stringEncrypter.decrypt(removePrefix(encPass));\n\t}\n\n\t@Override\n\tpublic char[] decodeToCharArray(String encPass)\n\t\t\tthrows UnsupportedOperationException {\n\t\tif (byteEncrypter == null) {\n\t\t\t// not initialized\n\t\t\tgetCharEncoder();\n\t\t}\n\n\t\tbyte[] decoded = Base64.getDecoder().decode(removePrefix(encPass).getBytes());\n\t\tbyte[] bytes = byteEncrypter.decrypt(decoded);\n\t\ttry {\n\t\t\treturn toChars(bytes);\n\t\t} finally {\n\t\t\tscramble(bytes);\n\t\t}\n\t}\n\t\n}\n",
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java": "/*\n *  Copyright (C) 2007 - 2011 GeoSolutions S.A.S.\n *  http://www.geo-solutions.it\n * \n *  GPLv3 + Classpath exception\n * \n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n * \n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n * \n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage it.geosolutions.geostore.core.security.password;\n\nimport org.apache.commons.codec.binary.Base64;\nimport org.jasypt.digest.StandardByteDigester;\nimport org.acegisecurity.providers.encoding.PasswordEncoder;\nimport org.jasypt.util.password.StrongPasswordEncryptor;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\n\n/**\n * This Encoder provide encription and check of password using a digest\n * @author Lorenzo Natali (lorenzo.natali at geo-solutions.it)\n *\n */\npublic class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncoder{\n \n\n  /**\n   * The digest is not reversible\n   */\n     public GeoStoreDigestPasswordEncoder() {\n         setReversible(false);\n     }\n\n     @Override\nprotected org.springframework.security.crypto.password.PasswordEncoder createStringEncoder() {\nStrongPasswordEncryptor passwordEncryptor = new StrongPasswordEncryptor();\nPasswordEncoder encoder = new SpringSecurityPasswordEncoder(passwordEncryptor);\n         return encoder;\n     }\n\n     @Override\n     protected CharArrayPasswordEncoder createCharEncoder() {\n         return new CharArrayPasswordEncoder() {\n             StandardByteDigester digester = new StandardByteDigester();\n             {\n                 digester.setAlgorithm(\"SHA-256\");\n                 digester.setIterations(100000);\n                 digester.setSaltSizeBytes(16);\n                 digester.initialize();\n             }\n             \n             @Override\npublic String encode(CharSequence rawPassword) {\nreturn new String(Base64.encodeBase64(digester.digest(toBytes(rawPassword.toString().toCharArray()))));\n             }\n             @Override\n             public boolean isPasswordValid(String encPass, char[] rawPass, Object salt) {\n                 return digester.matches(toBytes(rawPass), Base64.decodeBase64(encPass.getBytes())); \n             }\n         };\n     }\n\n     @Override\n     public PasswordEncodingType getEncodingType() {\n         return PasswordEncodingType.DIGEST;\n     }\n \n}"
                },
                "compile_error_details": {
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java": {
                        "33": {
                            "lines": [
                                {
                                    "line_no": 32,
                                    "content": " */"
                                },
                                {
                                    "line_no": 33,
                                    "content": "public class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncoder{"
                                },
                                {
                                    "line_no": 34,
                                    "content": " "
                                }
                            ],
                            "error_texts": [
                                "[33,7] error: GeoStoreDigestPasswordEncoder is not abstract and does not override abstract method createStringEncoder() in AbstractGeoStorePasswordEncoder\n"
                            ]
                        },
                        "44": {
                            "lines": [
                                {
                                    "line_no": 43,
                                    "content": "     @Override"
                                },
                                {
                                    "line_no": 44,
                                    "content": "protected org.springframework.security.crypto.password.PasswordEncoder createStringEncoder() {"
                                },
                                {
                                    "line_no": 45,
                                    "content": "StrongPasswordEncryptor passwordEncryptor = new StrongPasswordEncryptor();"
                                }
                            ],
                            "error_texts": [
                                "[44,71] error: createStringEncoder() in GeoStoreDigestPasswordEncoder cannot override createStringEncoder() in AbstractGeoStorePasswordEncoder\n"
                            ]
                        },
                        "46": {
                            "lines": [
                                {
                                    "line_no": 45,
                                    "content": "StrongPasswordEncryptor passwordEncryptor = new StrongPasswordEncryptor();"
                                },
                                {
                                    "line_no": 46,
                                    "content": "PasswordEncoder encoder = new SpringSecurityPasswordEncoder(passwordEncryptor);"
                                },
                                {
                                    "line_no": 47,
                                    "content": "         return encoder;"
                                }
                            ],
                            "error_texts": [
                                "[46,30] error: cannot find symbol\n"
                            ]
                        },
                        "52": {
                            "lines": [
                                {
                                    "line_no": 51,
                                    "content": "     protected CharArrayPasswordEncoder createCharEncoder() {"
                                },
                                {
                                    "line_no": 52,
                                    "content": "         return new CharArrayPasswordEncoder() {"
                                },
                                {
                                    "line_no": 53,
                                    "content": "             StandardByteDigester digester = new StandardByteDigester();"
                                }
                            ],
                            "error_texts": [
                                "[52,47] error: <anonymous it.geosolutions.geostore.core.security.password.GeoStoreDigestPasswordEncoder$1> is not abstract and does not override abstract method encodePassword(char[],Object) in CharArrayPasswordEncoder\n"
                            ]
                        },
                        "61": {
                            "lines": [
                                {
                                    "line_no": 60,
                                    "content": "             "
                                },
                                {
                                    "line_no": 61,
                                    "content": "             @Override"
                                },
                                {
                                    "line_no": 62,
                                    "content": "public String encode(CharSequence rawPassword) {"
                                }
                            ],
                            "error_texts": [
                                "[61,13] error: method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "43": {
                            "lines": [
                                {
                                    "line_no": 42,
                                    "content": ""
                                },
                                {
                                    "line_no": 43,
                                    "content": "     @Override"
                                },
                                {
                                    "line_no": 44,
                                    "content": "protected org.springframework.security.crypto.password.PasswordEncoder createStringEncoder() {"
                                }
                            ],
                            "error_texts": [
                                "[43,5] error: method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "47": {
                            "lines": [
                                {
                                    "line_no": 46,
                                    "content": "PasswordEncoder encoder = new SpringSecurityPasswordEncoder(passwordEncryptor);"
                                },
                                {
                                    "line_no": 47,
                                    "content": "         return encoder;"
                                },
                                {
                                    "line_no": 48,
                                    "content": "     }"
                                }
                            ],
                            "error_texts": [
                                "[47,16] error: incompatible types: org.acegisecurity.providers.encoding.PasswordEncoder cannot be converted to org.springframework.security.crypto.password.PasswordEncoder\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: method does not override or implement a method from a supertype\n",
            "span_id": 14587806954831967216
        },
        {
            "input": "```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java\n@@ -41,10 +41,17 @@ public class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncod\n     }\n \n     @Override\n-    protected org.springframework.security.crypto.password.PasswordEncoder createStringEncoder() {\n-        StrongPasswordEncryptor passwordEncryptor = new StrongPasswordEncryptor();\n-        PasswordEncoder encoder = new SpringSecurityPasswordEncoder(passwordEncryptor);\n-        return encoder;\n+    protected org.acegisecurity.providers.encoding.PasswordEncoder createStringEncoder() {\n+        final StrongPasswordEncryptor passwordEncryptor = new StrongPasswordEncryptor();\n+        return new org.acegisecurity.providers.encoding.PasswordEncoder() {\n+            @Override\n+            public String encodePassword(String rawPass, Object salt) {\n+                return passwordEncryptor.encryptPassword(rawPass);\n+            }\n+            @Override\n+            public boolean isPasswordValid(String encPass, String rawPass, Object salt) {\n+                return passwordEncryptor.checkPassword(rawPass, encPass);\n+            }\n+        };\n     }\n \n     @Override\n@@ -58,12 +65,12 @@ public class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncod\n                 digester.initialize();\n             }\n             \n-            @Override\n-            public String encode(CharSequence rawPassword) {\n-                return new String(Base64.encodeBase64(digester.digest(toBytes(rawPassword.toString().toCharArray()))));\n+            public String encodePassword(char[] rawPass, Object salt) {\n+                return new String(Base64.encodeBase64(digester.digest(toBytes(rawPass))));\n             }\n-            @Override\n-            public boolean isPasswordValid(String encPass, char[] rawPass, Object salt) {\n+\n+            public boolean isPasswordValid(String encPass, char[] rawPass,\n+                    Object salt) {\n                 return digester.matches(toBytes(rawPass), Base64.decodeBase64(encPass.getBytes())); \n             }\n         };\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: cannot find symbol\n",
                "updated_files": {
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java": "/*\n *  Copyright (C) 2007 - 2011 GeoSolutions S.A.S.\n *  http://www.geo-solutions.it\n * \n *  GPLv3 + Classpath exception\n * \n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n * \n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n * \n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage it.geosolutions.geostore.core.security.password;\n\nimport org.apache.commons.codec.binary.Base64;\nimport org.jasypt.digest.StandardByteDigester;\nimport org.acegisecurity.providers.encoding.PasswordEncoder;\nimport org.jasypt.util.password.StrongPasswordEncryptor;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\n\n/**\n * This Encoder provide encription and check of password using a digest\n * @author Lorenzo Natali (lorenzo.natali at geo-solutions.it)\n *\n */\npublic class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncoder{\n \n\n  /**\n   * The digest is not reversible\n   */\n     public GeoStoreDigestPasswordEncoder() {\n         setReversible(false);\n     }\n\n     @Override\nprotected org.acegisecurity.providers.encoding.PasswordEncoder createStringEncoder() {\nfinal StrongPasswordEncryptor passwordEncryptor = new StrongPasswordEncryptor();\nreturn new org.acegisecurity.providers.encoding.PasswordEncoder() {\n@Override\npublic String encodePassword(String rawPass, Object salt) {\nreturn passwordEncryptor.encryptPassword(rawPass);\n}\n@Override\npublic boolean isPasswordValid(String encPass, String rawPass, Object salt) {\nreturn passwordEncryptor.checkPassword(rawPass, encPass);\n}\n};\n}\n\n@Override\n     protected CharArrayPasswordEncoder createCharEncoder() {\n         return new CharArrayPasswordEncoder() {\n             StandardByteDigester digester = new StandardByteDigester();\n{\n                 digester.setAlgorithm(\"SHA-256\");\n                 digester.setIterations(100000);\n                 digester.setSaltSizeBytes(16);\n                 digester.initialize();\n}\n\npublic String encodePassword(char[] rawPass, Object salt) {\nreturn new String(Base64.encodeBase64(digester.digest(toBytes(rawPass))));\n}\n\npublic boolean isPasswordValid(String encPass, char[] rawPass,\nObject salt) {\n                 return digester.matches(toBytes(rawPass), Base64.decodeBase64(encPass.getBytes())); \n}\n};\n}\n\n@Override\n     public PasswordEncodingType getEncodingType() {\n         return PasswordEncodingType.DIGEST;\n}\n\n}"
                },
                "compile_error_details": {
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java": {
                        "132": {
                            "lines": [
                                {
                                    "line_no": 131,
                                    "content": ""
                                },
                                {
                                    "line_no": 132,
                                    "content": "\t\treturn new CharArrayPasswordEncoder() {"
                                },
                                {
                                    "line_no": 133,
                                    "content": "\t\t\t@Override"
                                }
                            ],
                            "error_texts": [
                                "[132,40] error: <anonymous it.geosolutions.geostore.core.security.password.GeoStorePBEPasswordEncoder$2> is not abstract and does not override abstract method isPasswordValid(String,char[],Object) in CharArrayPasswordEncoder\n"
                            ]
                        },
                        "133": {
                            "lines": [
                                {
                                    "line_no": 132,
                                    "content": "\t\treturn new CharArrayPasswordEncoder() {"
                                },
                                {
                                    "line_no": 133,
                                    "content": "\t\t\t@Override"
                                },
                                {
                                    "line_no": 134,
                                    "content": "\t\t\tpublic boolean matches(CharSequence rawPassword, String encodedPassword) {"
                                }
                            ],
                            "error_texts": [
                                "[133,3] error: method does not override or implement a method from a supertype\n"
                            ]
                        },
                        "135": {
                            "lines": [
                                {
                                    "line_no": 134,
                                    "content": "\t\t\tpublic boolean matches(CharSequence rawPassword, String encodedPassword) {"
                                },
                                {
                                    "line_no": 135,
                                    "content": "\t\t\t\tbyte[] decoded = Base64.getDecoder().decode(encPass.getBytes());"
                                },
                                {
                                    "line_no": 136,
                                    "content": "\t\t\t\tbyte[] decrypted = byteEncrypter.decrypt(decoded);"
                                }
                            ],
                            "error_texts": [
                                "[135,48] error: cannot find symbol\n"
                            ]
                        },
                        "149": {
                            "lines": [
                                {
                                    "line_no": 148,
                                    "content": "\t\t\tpublic String encode(CharSequence rawPassword) {"
                                },
                                {
                                    "line_no": 149,
                                    "content": "\t\t\t\tbyte[] bytes = toBytes(rawPass);"
                                },
                                {
                                    "line_no": 150,
                                    "content": "\t\t\t\ttry {"
                                }
                            ],
                            "error_texts": [
                                "[149,27] error: cannot find symbol\n"
                            ]
                        },
                        "140": {
                            "lines": [
                                {
                                    "line_no": 139,
                                    "content": "\t\t\t\ttry {"
                                },
                                {
                                    "line_no": 140,
                                    "content": "\t\t\t\t\treturn Arrays.equals(chars, rawPass);"
                                },
                                {
                                    "line_no": 141,
                                    "content": "\t\t\t\t} finally {"
                                }
                            ],
                            "error_texts": [
                                "[140,33] error: cannot find symbol\n"
                            ]
                        },
                        "147": {
                            "lines": [
                                {
                                    "line_no": 146,
                                    "content": ""
                                },
                                {
                                    "line_no": 147,
                                    "content": "\t\t\t@Override"
                                },
                                {
                                    "line_no": 148,
                                    "content": "\t\t\tpublic String encode(CharSequence rawPassword) {"
                                }
                            ],
                            "error_texts": [
                                "[147,3] error: method does not override or implement a method from a supertype\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: cannot find symbol\n",
            "span_id": 6042482018125615291
        },
        {
            "input": "```diff\n--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java\n@@ -130,23 +130,22 @@ public class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder\n \t\tbyteEncrypter.setAlgorithm(getAlgorithm());\n \n \t\treturn new CharArrayPasswordEncoder() {\n-\t\t\t@Override\n-\t\t\tpublic boolean matches(CharSequence rawPassword, String encodedPassword) {\n-\t\t\t\tbyte[] decoded = Base64.getDecoder().decode(encPass.getBytes());\n+\t\t\tpublic boolean isPasswordValid(String encPass, char[] rawPass, Object salt) {\n+\t\t\t\tbyte[] decoded = Base64.getDecoder().decode(encPass.getBytes());\n \t\t\t\tbyte[] decrypted = byteEncrypter.decrypt(decoded);\n \n \t\t\t\tchar[] chars = toChars(decrypted);\n \t\t\t\ttry {\n-\t\t\t\t\treturn Arrays.equals(chars, rawPass);\n+\t\t\t\t\treturn Arrays.equals(chars, rawPass);\n \t\t\t\t} finally {\n \t\t\t\t\tscramble(decrypted);\n \t\t\t\t\tscramble(chars);\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\t@Override\n-\t\t\tpublic String encode(CharSequence rawPassword) {\n-\t\t\t\tbyte[] bytes = toBytes(rawPass);\n+\t\t\tpublic String encodePassword(char[] rawPass, Object salt) {\n+\t\t\t\tbyte[] bytes = toBytes(rawPass);\n \t\t\t\ttry {\n \t\t\t\t\treturn new String(Base64.getEncoder().encode(byteEncrypter\n \t\t\t\t\t\t\t.encrypt(bytes)));\n```",
            "output": {
                "compilation_has_succeeded": true,
                "test_has_succeeded": false,
                "error_text": "[INFO] Scanning for projects...\n[WARNING]\n[WARNING] Some problems were encountered while building the effective model for it.geosolutions.geostore:geostore-rest-impl:jar:1.9-SNAPSHOT\n[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.mockito:mockito-core:jar -> duplicate declaration of version (?) @ line 231, column 21\n[WARNING]\n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING]\n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING]\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] Master GeoStore POM [pom]\n[INFO] GeoStore - 0 Server Root [pom]\n[INFO] GeoStore - Core [pom]\n[INFO] GeoStore - Core - Model [jar]\n[INFO] GeoStore - Core - Security [jar]\n[INFO] GeoStore - Core - Persistence [jar]\n[INFO] GeoStore - Core - Services API [jar]\n[INFO] GeoStore - Core - Services implementation [jar]\n[INFO] GeoStore - Modules [pom]\n[INFO] GeoStore - Modules - REST root [pom]\n[INFO] GeoStore - Modules - REST API [jar]\n[INFO] GeoStore - Modules - REST services [jar]\n[INFO] GeoStore - Modules - REST client [jar]\n[INFO] GeoStore - Modules - REST EXTJS services [jar]\n[INFO] GeoStore - Modules - REST services test [war]\n[INFO] GeoStore - Modules - REST auditing [jar]\n[INFO] GeoStore - Web [pom]\n[INFO] GeoStore - Webapp [war]\n[INFO]\n[INFO] ----------------------< it.geosolutions:geostore >----------------------\n[INFO] Building Master GeoStore POM 1.9-SNAPSHOT [1/18]\n[INFO] from pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore ---\n[INFO]\n[INFO] ---------------< it.geosolutions.geostore:geostore-root >---------------\n[INFO] Building GeoStore - 0 Server Root 1.9-SNAPSHOT [2/18]\n[INFO] from src/pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-root ---\n[INFO]\n[INFO] ---------------< it.geosolutions.geostore:geostore-core >---------------\n[INFO] Building GeoStore - Core 1.9-SNAPSHOT [3/18]\n[INFO] from src/core/pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-core ---\n[INFO]\n[INFO] --------------< it.geosolutions.geostore:geostore-model >---------------\n[INFO] Building GeoStore - Core - Model 1.9-SNAPSHOT [4/18]\n[INFO] from src/core/model/pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-model ---\n[INFO] Deleting /mnt/repo/src/core/model/target\n[INFO]\n[INFO] --- resources:3.0.1:resources (default-resources) @ geostore-model ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /mnt/repo/src/core/model/src/main/resources\n[INFO]\n[INFO] --- compiler:3.5.1:compile (default-compile) @ geostore-model ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 20 source files to /mnt/repo/src/core/model/target/classes\n[INFO]\n[INFO] --- resources:3.0.1:testResources (default-testResources) @ geostore-model ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /mnt/repo/src/core/model/src/test/resources\n[INFO]\n[INFO] --- compiler:3.5.1:testCompile (default-testCompile) @ geostore-model ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 7 source files to /mnt/repo/src/core/model/target/test-classes\n[INFO]\n[INFO] --- surefire:2.4.2:test (default-test) @ geostore-model ---\n[INFO] Surefire report directory: /mnt/repo/src/core/model/target/surefire-reports\n-------------------------------------------------------\nT E S T S\n-------------------------------------------------------\nRunning it.geosolutions.geostore.core.model.SecurityRuleTest\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.313 sec\nRunning it.geosolutions.geostore.core.model.UserGroupTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec\nRunning it.geosolutions.geostore.core.model.AttributeTest\nAttribute[id is null, name=testatt, numberValue=42.0, type=NUMBER]\nAttribute[id is null, name=testatt, numberValue=42.0, type=NUMBER]\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Attribute type=\"NUMBER\">\n<name>testatt</name>\n<value>42.0</value>\n</Attribute>\nAttribute[id is null, name=testatt, textValue=test, type=STRING]\nAttribute[id is null, name=testatt, textValue=test, type=STRING]\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Attribute type=\"STRING\">\n<name>testatt</name>\n<value>test</value>\n</Attribute>\nAttribute[id is null, name=testatt, dateValue=Mon Aug 05 02:11:18 UTC 2024, type=DATE]\nAttribute[id is null, name=testatt, dateValue=Mon Aug 05 02:11:18 UTC 2024, type=DATE]\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Attribute type=\"DATE\">\n<name>testatt</name>\n<value>2024-08-05T02:11:18.432+0000</value>\n</Attribute>\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 sec\nRunning it.geosolutions.geostore.core.model.UserTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.046 sec\nRunning it.geosolutions.geostore.core.model.CategoryTest\nCategory[id=1, name=testatt]\nCategory[id=1, name=testatt]\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Category>\n<id>1</id>\n<name>testatt</name>\n</Category>\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec\nRunning it.geosolutions.geostore.core.model.GroupReservedNamesTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec\nResults :\nTests run: 9, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] -------------< it.geosolutions.geostore:geostore-security >-------------\n[INFO] Building GeoStore - Core - Security 1.9-SNAPSHOT [5/18]\n[INFO] from src/core/security/pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-security ---\n[INFO] Deleting /mnt/repo/src/core/security/target\n[INFO]\n[INFO] --- resources:3.0.1:resources (default-resources) @ geostore-security ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 3 resources\n[INFO]\n[INFO] --- compiler:3.5.1:compile (default-compile) @ geostore-security ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 26 source files to /mnt/repo/src/core/security/target/classes\n[INFO]\n[INFO] --- resources:3.0.1:testResources (default-testResources) @ geostore-security ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 4 resources\n[INFO]\n[INFO] --- compiler:3.5.1:testCompile (default-testCompile) @ geostore-security ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 7 source files to /mnt/repo/src/core/security/target/test-classes\n[INFO]\n[INFO] --- surefire:2.4.2:test (default-test) @ geostore-security ---\n[INFO] Surefire report directory: /mnt/repo/src/core/security/target/surefire-reports\n-------------------------------------------------------\nT E S T S\n-------------------------------------------------------\nRunning it.geosolutions.geostore.core.security.password.PwEncoderTest\nENC --> 0LCtD7xXqhi8G/QApqKOOYxmNUjHcLudPdj3dWLs+m7ufAWuoXdf/+3KSUw4sSO+\nENC --> 3KQFAuXOUYT72wYFtwiT35ySFKS3ssqX3ZFgPmnTGYoMuFOEQVbtx63Q9bHQn9Vw\nENC --> Vz98in3ViU/J2Zo8JUp00DdDzMB2KCQ0dD6IPh2HUcViC9UKVPSz2+up36U4TAeW\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.339 sec\nRunning it.geosolutions.geostore.core.security.ldap.CustomAttributesLdapUserDetailsMapperTest\nlog4j:WARN No appenders could be found for logger (org.springframework.security.ldap.userdetails.LdapUserDetailsMapper).\nlog4j:WARN Please initialize the log4j system properly.\nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec\nRunning it.geosolutions.geostore.core.security.ExpressionUserMapperTest\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.076 sec\nRunning it.geosolutions.geostore.core.security.password.EncodingTest\n/mnt/repo/src/core/security/geostore.jceks@SLTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.046 sec\nRunning it.geosolutions.geostore.core.security.SimpleGrantedAuthoritiesMapperTest\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec\nRunning it.geosolutions.geostore.core.security.password.MasterPasswordProviderTest\ngeostore\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec\nResults :\nTests run: 12, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] -----------< it.geosolutions.geostore:geostore-persistence >------------\n[INFO] Building GeoStore - Core - Persistence 1.9-SNAPSHOT [6/18]\n[INFO] from src/core/persistence/pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-persistence ---\n[INFO]\n[INFO] --- resources:3.0.1:resources (default-resources) @ geostore-persistence ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 6 resources\n[INFO]\n[INFO] --- compiler:3.5.1:compile (default-compile) @ geostore-persistence ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 23 source files to /mnt/repo/src/core/persistence/target/classes\n[INFO]\n[INFO] >>> hibernate3:2.2:hbm2ddl (default) > process-resources @ geostore-persistence >>>\n[INFO]\n[INFO] --- resources:3.0.1:resources (default-resources) @ geostore-persistence ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 6 resources\n[INFO]\n[INFO] <<< hibernate3:2.2:hbm2ddl (default) < process-resources @ geostore-persistence <<<\n[INFO]\n[INFO]\n[INFO] --- hibernate3:2.2:hbm2ddl (default) @ geostore-persistence ---\n[INFO] Artifact dom4j:dom4j:jar:1.6.1 is present in the local repository, but cached from a remote repository ID that is unavailable in current build context, verifying that is downloadable from [repo1.maven.org-maven2 (https://repo1.maven.org/maven2/, default, releases+snapshots), central (https://repo.maven.apache.org/maven2, default, releases), maven-default-http-blocker (http://0.0.0.0/, default, snapshots, blocked)]\n[INFO] Artifact xml-apis:xml-apis:jar:1.0.b2 is present in the local repository, but cached from a remote repository ID that is unavailable in current build context, verifying that is downloadable from [repo1.maven.org-maven2 (https://repo1.maven.org/maven2/, default, releases+snapshots), central (https://repo.maven.apache.org/maven2, default, releases), maven-default-http-blocker (http://0.0.0.0/, default, snapshots, blocked)]\n[INFO] Artifact dom4j:dom4j:jar:1.6.1 is present in the local repository, but cached from a remote repository ID that is unavailable in current build context, verifying that is downloadable from [repo1.maven.org-maven2 (https://repo1.maven.org/maven2/, default, releases+snapshots), central (https://repo.maven.apache.org/maven2, default, releases), maven-default-http-blocker (http://0.0.0.0/, default, snapshots, blocked)]\n[INFO] Artifact xml-apis:xml-apis:jar:1.0.b2 is present in the local repository, but cached from a remote repository ID that is unavailable in current build context, verifying that is downloadable from [repo1.maven.org-maven2 (https://repo1.maven.org/maven2/, default, releases+snapshots), central (https://repo.maven.apache.org/maven2, default, releases), maven-default-http-blocker (http://0.0.0.0/, default, snapshots, blocked)]\n[INFO] Configuration XML file loaded: file:/mnt/repo/src/core/persistence/src/test/resources/hibernate.cfg.xml\n[INFO] Hibernate Annotations 3.4.0.GA\n[INFO] Hibernate 3.3.1.GA\n[INFO] hibernate.properties not found\n[INFO] Bytecode provider name : javassist\n[INFO] using JDK 1.4 java.sql.Timestamp handling\n[INFO] Hibernate Commons Annotations 3.1.0.GA\n[INFO] Configuration XML file loaded: file:/mnt/repo/src/core/persistence/src/test/resources/hibernate.cfg.xml\n[INFO] configuring from url: file:/mnt/repo/src/core/persistence/src/test/resources/hibernate.cfg.xml\n[INFO] Configured SessionFactory: null\n[INFO] No hibernate properties file loaded.\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.Attribute\n[INFO] Bind entity it.geosolutions.geostore.core.model.Attribute on table gs_attribute\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.Category\n[INFO] Bind entity it.geosolutions.geostore.core.model.Category on table gs_category\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.Resource\n[INFO] Bind entity it.geosolutions.geostore.core.model.Resource on table gs_resource\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.SecurityRule\n[INFO] Bind entity it.geosolutions.geostore.core.model.SecurityRule on table gs_security\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.StoredData\n[INFO] Bind entity it.geosolutions.geostore.core.model.StoredData on table gs_stored_data\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.User\n[INFO] Bind entity it.geosolutions.geostore.core.model.User on table gs_user\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.UserAttribute\n[INFO] Bind entity it.geosolutions.geostore.core.model.UserAttribute on table gs_user_attribute\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.UserGroup\n[INFO] Bind entity it.geosolutions.geostore.core.model.UserGroup on table gs_usergroup\n[INFO] Mapping collection: it.geosolutions.geostore.core.model.Category.resource -> gs_resource\n[INFO] Mapping collection: it.geosolutions.geostore.core.model.Resource.attribute -> gs_attribute\n[INFO] Mapping collection: it.geosolutions.geostore.core.model.Resource.security -> gs_security\n[INFO] Mapping collection: it.geosolutions.geostore.core.model.User.attribute -> gs_user_attribute\n[INFO] Mapping collection: it.geosolutions.geostore.core.model.User.security -> gs_security\n[INFO] Mapping collection: it.geosolutions.geostore.core.model.UserGroup.security -> gs_security\n[INFO] Hibernate Validator not found: ignoring\n[INFO] Using dialect: org.hibernate.dialect.H2Dialect\n[INFO] Running hbm2ddl schema export\n[INFO] writing generated schema to file: /mnt/repo/src/core/persistence/target/classes/geostore.ddl\ncreate table gs_attribute (\nid bigint generated by default as identity,\nattribute_date timestamp,\nname varchar(255) not null,\nattribute_number double,\nattribute_text varchar(255),\nattribute_type varchar(255) not null,\nresource_id bigint not null,\nprimary key (id),\nunique (name, resource_id)\n);\ncreate table gs_category (\nid bigint generated by default as identity,\nname varchar(255) not null,\nprimary key (id),\nunique (name)\n);\ncreate table gs_resource (\nid bigint generated by default as identity,\ncreation timestamp not null,\ndescription varchar(10000),\nlastUpdate timestamp,\nmetadata varchar(30000),\nname varchar(255) not null,\ncategory_id bigint not null,\nprimary key (id),\nunique (name)\n);\ncreate table gs_security (\nid bigint generated by default as identity,\ncanRead bit not null,\ncanWrite bit not null,\ngroupname varchar(255),\nusername varchar(255),\ngroup_id bigint,\nresource_id bigint,\nuser_id bigint,\nprimary key (id),\nunique (resource_id, group_id),\nunique (user_id, resource_id)\n);\ncreate table gs_stored_data (\nid bigint not null,\nstored_data varchar(10000000) not null,\nresource_id bigint not null,\nprimary key (id),\nunique (resource_id)\n);\ncreate table gs_user (\nid bigint generated by default as identity,\nenabled char(255) not null,\nname varchar(255) not null,\nuser_password varchar(255),\nuser_role varchar(255) not null,\nprimary key (id),\nunique (name)\n);\ncreate table gs_user_attribute (\nid bigint generated by default as identity,\nname varchar(255) not null,\nstring varchar(255),\nuser_id bigint not null,\nprimary key (id),\nunique (name, user_id)\n);\ncreate table gs_usergroup (\nid bigint generated by default as identity,\ndescription varchar(255),\nenabled char(255) not null,\ngroupName varchar(255) not null,\nprimary key (id),\nunique (groupName)\n);\ncreate table gs_usergroup_members (\nuser_id bigint not null,\ngroup_id bigint not null,\nprimary key (user_id, group_id)\n);\nalter table gs_attribute\nadd constraint FKA33E7B09410D3892\nforeign key (resource_id)\nreferences gs_resource;\nalter table gs_resource\nadd constraint FK9612B2016A775292\nforeign key (category_id)\nreferences gs_category;\nalter table gs_security\nadd constraint FKE2F965339EC981B7\nforeign key (group_id)\nreferences gs_usergroup;\nalter table gs_security\nadd constraint FKE2F9653362224F72\nforeign key (user_id)\nreferences gs_user;\nalter table gs_security\nadd constraint FKE2F96533410D3892\nforeign key (resource_id)\nreferences gs_resource;\nalter table gs_stored_data\nadd constraint FK8EDDBBF3410D3892\nforeign key (resource_id)\nreferences gs_resource;\nalter table gs_user_attribute\nadd constraint FK7F7AFADB62224F72\nforeign key (user_id)\nreferences gs_user;\nalter table gs_usergroup_members\nadd constraint FKFDE460DB9EC981B7\nforeign key (group_id)\nreferences gs_usergroup;\nalter table gs_usergroup_members\nadd constraint FKFDE460DB62224F72\nforeign key (user_id)\nreferences gs_user;\n[INFO] schema export complete\n[INFO]\n[INFO] --- resources:3.0.1:testResources (default-testResources) @ geostore-persistence ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 7 resources\n[INFO]\n[INFO] --- compiler:3.5.1:testCompile (default-testCompile) @ geostore-persistence ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 13 source files to /mnt/repo/src/core/persistence/target/test-classes\n[INFO]\n[INFO] --- surefire:2.4.2:test (default-test) @ geostore-persistence ---\n[INFO] Surefire report directory: /mnt/repo/src/core/persistence/target/surefire-reports\nINFO 2024-08-05 02:11:34.170 org.hibernate.jpa.internal.util.LogHelper::logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: geostore]\nINFO 2024-08-05 02:11:34.244 org.hibernate.Version::logVersion - HHH000412: Hibernate ORM core version 5.4.33.Final\nWARN 2024-08-05 02:11:34.453 org.hibernate.orm.deprecation::<init> - HHH020100: The Ehcache second-level cache provider for Hibernate is deprecated. See https://hibernate.atlassian.net/browse/HHH-12441 for details.\nINFO 2024-08-05 02:11:34.478 org.hibernate.annotations.common.Version::<clinit> - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}\nINFO 2024-08-05 02:11:34.900 org.hibernate.dialect.Dialect::<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect\nWARN 2024-08-05 02:11:35.315 net.sf.ehcache.config.ConfigurationFactory::parseConfiguration - No configuration found. Configuring ehcache from ehcache-failsafe.xml found in the classpath: jar:file:/root/.m2/repository/net/sf/ehcache/ehcache/2.10.6/ehcache-2.10.6.jar!/ehcache-failsafe.xml\nHibernate: drop table if exists public.gs_attribute CASCADE\nHibernate: drop table if exists public.gs_category CASCADE\nHibernate: drop table if exists public.gs_resource CASCADE\nHibernate: drop table if exists public.gs_security CASCADE\nHibernate: drop table if exists public.gs_stored_data CASCADE\nHibernate: drop table if exists public.gs_user CASCADE\nHibernate: drop table if exists public.gs_user_attribute CASCADE\nHibernate: drop table if exists public.gs_usergroup CASCADE\nHibernate: drop table if exists public.gs_usergroup_members CASCADE\nHibernate: drop sequence if exists public.hibernate_sequence\nHibernate: create sequence public.hibernate_sequence start with 1 increment by 1\nHibernate: create table public.gs_attribute (id bigint not null, attribute_date timestamp, name varchar(255) not null, attribute_number double, attribute_text varchar(255), attribute_type varchar(255) not null, resource_id bigint not null, primary key (id))\nHibernate: create table public.gs_category (id bigint not null, name varchar(255) not null, primary key (id))\nHibernate: create table public.gs_resource (id bigint not null, creation timestamp not null, description varchar(10000), lastUpdate timestamp, metadata varchar(30000), name varchar(255) not null, category_id bigint not null, primary key (id))\nHibernate: create table public.gs_security (id bigint not null, canRead boolean not null, canWrite boolean not null, groupname varchar(255), username varchar(255), group_id bigint, resource_id bigint, user_id bigint, primary key (id))\nHibernate: create table public.gs_stored_data (id bigint not null, stored_data varchar(10000000) not null, resource_id bigint not null, primary key (id))\nHibernate: create table public.gs_user (id bigint not null, enabled char(255) not null, name varchar(255) not null, user_password varchar(255), user_role varchar(255) not null, primary key (id))\nHibernate: create table public.gs_user_attribute (id bigint not null, name varchar(255) not null, string varchar(255), user_id bigint not null, primary key (id))\nHibernate: create table public.gs_usergroup (id bigint not null, description varchar(255), enabled char(255) not null, groupName varchar(255) not null, primary key (id))\nHibernate: create table public.gs_usergroup_members (user_id bigint not null, group_id bigint not null, primary key (user_id, group_id))\nHibernate: create index public.idx_attribute_name on public.gs_attribute (name)\nHibernate: create index public.idx_attribute_text on public.gs_attribute (attribute_text)\nHibernate: create index public.idx_attribute_number on public.gs_attribute (attribute_number)\nHibernate: create index public.idx_attribute_date on public.gs_attribute (attribute_date)\nHibernate: create index public.idx_attribute_type on public.gs_attribute (attribute_type)\nHibernate: create index public.idx_attribute_resource on public.gs_attribute (resource_id)\nHibernate: alter table public.gs_attribute add constraint UKpt7148tvfohj7dgmxyyq5tjre unique (name, resource_id)\nHibernate: create index public.idx_category_type on public.gs_category (name)\nHibernate: alter table public.gs_category add constraint UK5c8d20r6bikucjcapdd7i36ly unique (name)\nHibernate: create index public.idx_resource_name on public.gs_resource (name)\nHibernate: create index public.idx_resource_description on public.gs_resource (description)\nHibernate: create index public.idx_resource_creation on public.gs_resource (creation)\nHibernate: create index public.idx_resource_update on public.gs_resource (lastUpdate)\nHibernate: create index public.idx_resource_metadata on public.gs_resource (metadata)\nHibernate: create index public.idx_resource_category on public.gs_resource (category_id)\nHibernate: alter table public.gs_resource add constraint UKn024mqjdq1o53j3p7v1if9f0w unique (name)\nHibernate: create index public.idx_security_resource on public.gs_security (resource_id)\nHibernate: create index public.idx_security_user on public.gs_security (user_id)\nHibernate: create index public.idx_security_group on public.gs_security (group_id)\nHibernate: create index public.idx_security_read on public.gs_security (canRead)\nHibernate: create index public.idx_security_write on public.gs_security (canWrite)\nHibernate: create index public.idx_security_username on public.gs_security (username)\nHibernate: create index public.idx_security_groupname on public.gs_security (groupname)\nHibernate: alter table public.gs_security add constraint UKt82wtcwf67q3jkn51ew63gbii unique (user_id, resource_id)\nHibernate: alter table public.gs_security add constraint UKi79yiku7yldr157qelfu78rfo unique (resource_id, group_id)\nHibernate: alter table public.gs_stored_data add constraint UK_repsy09e1h92i6tcjk6o24oh6 unique (resource_id)\nHibernate: create index public.idx_user_name on public.gs_user (name)\nHibernate: create index public.idx_user_password on public.gs_user (user_password)\nHibernate: create index public.idx_user_role on public.gs_user (user_role)\nHibernate: alter table public.gs_user add constraint UK1nvdvro5ffh89vhe8ut546xcn unique (name)\nHibernate: create index public.idx_user_attribute_name on public.gs_user_attribute (name)\nHibernate: create index public.idx_user_attribute_text on public.gs_user_attribute (string)\nHibernate: create index public.idx_attribute_user on public.gs_user_attribute (user_id)\nHibernate: alter table public.gs_user_attribute add constraint UKmp2h35ne4c79xoj5jfs4jtvse unique (name, user_id)\nHibernate: create index public.idx_usergroup_name on public.gs_usergroup (groupName)\nHibernate: alter table public.gs_usergroup add constraint UKtd6p0q8hs1np9b6mphn1l4msx unique (groupName)\nHibernate: alter table public.gs_attribute add constraint fk_attribute_resource foreign key (resource_id) references public.gs_resource\nHibernate: alter table public.gs_resource add constraint FK4k4vivg9ombpq35y3rwvbvj5a foreign key (category_id) references public.gs_category\nHibernate: alter table public.gs_security add constraint fk_security_group foreign key (group_id) references public.gs_usergroup\nHibernate: alter table public.gs_security add constraint fk_security_resource foreign key (resource_id) references public.gs_resource\nHibernate: alter table public.gs_security add constraint fk_security_user foreign key (user_id) references public.gs_user\nHibernate: alter table public.gs_stored_data add constraint fk_data_resource foreign key (resource_id) references public.gs_resource\nHibernate: alter table public.gs_user_attribute add constraint fk_uattrib_user foreign key (user_id) references public.gs_user\nHibernate: alter table public.gs_usergroup_members add constraint FKcuodcud01kw3cqy0emcmh5mgj foreign key (group_id) references public.gs_usergroup\nHibernate: alter table public.gs_usergroup_members add constraint FKoitmticc812u1mao3g7ki1f5y foreign key (user_id) references public.gs_user\nINFO 2024-08-05 02:11:36.020 org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator::initiateService - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]\nINFO 2024-08-05 02:11:36.032 org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean::buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'geostore'\n-------------------------------------------------------\nT E S T S\n-------------------------------------------------------\nRunning it.geosolutions.geostore.core.dao.AttributeDAOTest\nINFO 2024-08-05 02:11:36.337 it.geosolutions.geostore.core.dao.AttributeDAOTest::setUp - ################ Running AttributeDAOTest::testSearchAttribute\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:36.579 it.geosolutions.geostore.core.dao.AttributeDAOTest::setUp - ##### Ending setup for testSearchAttribute ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: insert into public.gs_stored_data (stored_data, resource_id, id) values (?, ?, ?)\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_ where attribute0_.attribute_type=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_ where attribute0_.attribute_type<>?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_ where attribute0_.attribute_type=? and attribute0_.attribute_number>? and attribute0_.attribute_number<? and (lower(attribute0_.name) like lower(?))\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_ where attribute0_.attribute_type=? and attribute0_.attribute_date<? and (lower(attribute0_.name) like lower(?))\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_ where attribute0_.attribute_type<>? or attribute0_.attribute_type=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_stored_data where id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nINFO 2024-08-05 02:11:36.951 it.geosolutions.geostore.core.dao.AttributeDAOTest::setUp - ################ Running AttributeDAOTest::testPersistAttribute\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:36.964 it.geosolutions.geostore.core.dao.AttributeDAOTest::removeAllCategory - Removing 1\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:36.978 it.geosolutions.geostore.core.dao.AttributeDAOTest::setUp - ##### Ending setup for testPersistAttribute ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: insert into public.gs_stored_data (stored_data, resource_id, id) values (?, ?, ?)\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, category2_.id as id1_1_2_, category2_.name as name2_1_2_ from public.gs_attribute attribute0_ inner join public.gs_resource resource1_ on attribute0_.resource_id=resource1_.id inner join public.gs_category category2_ on resource1_.category_id=category2_.id where attribute0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, category2_.id as id1_1_2_, category2_.name as name2_1_2_ from public.gs_attribute attribute0_ inner join public.gs_resource resource1_ on attribute0_.resource_id=resource1_.id inner join public.gs_category category2_ on resource1_.category_id=category2_.id where attribute0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_ from public.gs_attribute attribute0_ where attribute0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, category2_.id as id1_1_2_, category2_.name as name2_1_2_ from public.gs_attribute attribute0_ inner join public.gs_resource resource1_ on attribute0_.resource_id=resource1_.id inner join public.gs_category category2_ on resource1_.category_id=category2_.id where attribute0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_ from public.gs_attribute attribute0_ where attribute0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: update public.gs_attribute set attribute_date=?, name=?, attribute_number=?, resource_id=?, attribute_text=? where id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, category2_.id as id1_1_2_, category2_.name as name2_1_2_ from public.gs_attribute attribute0_ inner join public.gs_resource resource1_ on attribute0_.resource_id=resource1_.id inner join public.gs_category category2_ on resource1_.category_id=category2_.id where attribute0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as col_0_0_ from public.gs_attribute attribute0_ where attribute0_.id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, category2_.id as id1_1_2_, category2_.name as name2_1_2_ from public.gs_attribute attribute0_ inner join public.gs_resource resource1_ on attribute0_.resource_id=resource1_.id inner join public.gs_category category2_ on resource1_.category_id=category2_.id where attribute0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, category2_.id as id1_1_2_, category2_.name as name2_1_2_ from public.gs_attribute attribute0_ inner join public.gs_resource resource1_ on attribute0_.resource_id=resource1_.id inner join public.gs_category category2_ on resource1_.category_id=category2_.id where attribute0_.id=?\nINFO 2024-08-05 02:11:37.087 it.geosolutions.geostore.core.dao.AttributeDAOTest::setUp - ################ Running AttributeDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nINFO 2024-08-05 02:11:37.092 it.geosolutions.geostore.core.dao.AttributeDAOTest::removeAllResource - Removing 34\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_stored_data where id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:37.109 it.geosolutions.geostore.core.dao.AttributeDAOTest::removeAllCategory - Removing 33\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.120 it.geosolutions.geostore.core.dao.AttributeDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.797 sec\nRunning it.geosolutions.geostore.core.dao.UserGroupDAOTest\nINFO 2024-08-05 02:11:37.128 it.geosolutions.geostore.core.dao.UserGroupDAOTest::setUp - ################ Running UserGroupDAOTest::testPersistUserGroup\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.144 it.geosolutions.geostore.core.dao.UserGroupDAOTest::setUp - ##### Ending setup for testPersistUserGroup ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user (enabled, name, user_password, user_role, id) values (?, ?, ?, ?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user (enabled, name, user_password, user_role, id) values (?, ?, ?, ?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select user0_.id as col_0_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select security0_.user_id as user_id8_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, resource2_.id as id1_2_3_, resource2_.category_id as category7_2_3_, resource2_.creation as creation2_2_3_, resource2_.description as descript3_2_3_, resource2_.lastUpdate as lastupda4_2_3_, resource2_.metadata as metadata5_2_3_, resource2_.name as name6_2_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on security0_.resource_id=resource2_.id left outer join public.gs_category category3_ on resource2_.category_id=category3_.id where security0_.user_id=?\nHibernate: delete from public.gs_usergroup_members where user_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: delete from public.gs_user where id=?\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_ where exists (select usergroup2_.id from public.gs_usergroup_members groups1_, public.gs_usergroup usergroup2_ where user0_.id=groups1_.user_id and groups1_.group_id=usergroup2_.id and usergroup2_.id=?)\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nINFO 2024-08-05 02:11:37.437 it.geosolutions.geostore.core.dao.UserGroupDAOTest::testPersistUserGroup - Removing group UserGroup[id=39, groupName=GROUP2] from user User[id=42, name=USER2_NAME, group=[UserGroup[id=38, groupName=GROUP1], UserGroup[id=39, groupName=GROUP2]], role=USER]\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: delete from public.gs_usergroup_members where user_id=? and group_id=?\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_ where exists (select usergroup2_.id from public.gs_usergroup_members groups1_, public.gs_usergroup usergroup2_ where user0_.id=groups1_.user_id and groups1_.group_id=usergroup2_.id and usergroup2_.id=?)\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: delete from public.gs_usergroup where id=?\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select user0_.id as col_0_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select security0_.user_id as user_id8_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, resource2_.id as id1_2_3_, resource2_.category_id as category7_2_3_, resource2_.creation as creation2_2_3_, resource2_.description as descript3_2_3_, resource2_.lastUpdate as lastupda4_2_3_, resource2_.metadata as metadata5_2_3_, resource2_.name as name6_2_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on security0_.resource_id=resource2_.id left outer join public.gs_category category3_ on resource2_.category_id=category3_.id where security0_.user_id=?\nHibernate: delete from public.gs_usergroup_members where user_id=?\nHibernate: delete from public.gs_user where id=?\nINFO 2024-08-05 02:11:37.466 it.geosolutions.geostore.core.dao.UserGroupDAOTest::setUp - ################ Running UserGroupDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:37.471 it.geosolutions.geostore.core.dao.UserGroupDAOTest::removeAllCategory - Removing 36\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.477 it.geosolutions.geostore.core.dao.UserGroupDAOTest::removeAllUserGroup - Removing 37\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nINFO 2024-08-05 02:11:37.479 it.geosolutions.geostore.core.dao.UserGroupDAOTest::removeAllUserGroup - Removing 38\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.482 it.geosolutions.geostore.core.dao.UserGroupDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.357 sec\nRunning it.geosolutions.geostore.core.dao.ldap.UserDAOTest\nTests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.083 sec\nRunning it.geosolutions.geostore.core.dao.CategoryDAOTest\nINFO 2024-08-05 02:11:37.568 it.geosolutions.geostore.core.dao.CategoryDAOTest::setUp - ################ Running CategoryDAOTest::testPersistCategory\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.577 it.geosolutions.geostore.core.dao.CategoryDAOTest::setUp - ##### Ending setup for testPersistCategory ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nINFO 2024-08-05 02:11:37.591 it.geosolutions.geostore.core.dao.CategoryDAOTest::setUp - ################ Running CategoryDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.598 it.geosolutions.geostore.core.dao.CategoryDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec\nRunning it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest\nINFO 2024-08-05 02:11:37.600 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::setUp - ################ Running ExternalSecurityDAOTest::testPersistSecurityUsingNames\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.607 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::setUp - ##### Ending setup for testPersistSecurityUsingNames ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user (enabled, name, user_password, user_role, id) values (?, ?, ?, ?, ?)\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: update public.gs_security set canRead=?, canWrite=?, group_id=?, groupname=?, resource_id=?, user_id=?, username=? where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nINFO 2024-08-05 02:11:37.690 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::setUp - ################ Running ExternalSecurityDAOTest::testPersistSecurity\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nINFO 2024-08-05 02:11:37.694 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::removeAllResource - Removing 49\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:37.704 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::removeAllCategory - Removing 46\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nINFO 2024-08-05 02:11:37.711 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::removeAllUser - Removing 47\nHibernate: select user0_.id as col_0_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select security0_.user_id as user_id8_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, resource2_.id as id1_2_3_, resource2_.category_id as category7_2_3_, resource2_.creation as creation2_2_3_, resource2_.description as descript3_2_3_, resource2_.lastUpdate as lastupda4_2_3_, resource2_.metadata as metadata5_2_3_, resource2_.name as name6_2_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on security0_.resource_id=resource2_.id left outer join public.gs_category category3_ on resource2_.category_id=category3_.id where security0_.user_id=?\nHibernate: delete from public.gs_user where id=?\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.722 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::removeAllUserGroup - Removing 48\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.729 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::setUp - ##### Ending setup for testPersistSecurity ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: update public.gs_security set canRead=?, canWrite=?, group_id=?, groupname=?, resource_id=?, user_id=?, username=? where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nINFO 2024-08-05 02:11:37.758 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::setUp - ################ Running ExternalSecurityDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nINFO 2024-08-05 02:11:37.760 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::removeAllResource - Removing 55\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:37.769 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::removeAllCategory - Removing 54\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.775 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.177 sec\nRunning it.geosolutions.geostore.core.dao.UserAttributeDAOTest\nINFO 2024-08-05 02:11:37.778 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::setUp - ################ Running UserAttributeDAOTest::testPersistRole\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.786 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::setUp - ##### Ending setup for testPersistRole ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user (enabled, name, user_password, user_role, id) values (?, ?, ?, ?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user_attribute (name, user_id, string, id) values (?, ?, ?, ?)\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_, user1_.id as id1_5_1_, user1_.enabled as enabled2_5_1_, user1_.name as name3_5_1_, user1_.user_password as user_pas4_5_1_, user1_.user_role as user_rol5_5_1_, groups2_.user_id as user_id1_8_2_, usergroup3_.id as group_id2_8_2_, usergroup3_.id as id1_7_3_, usergroup3_.description as descript2_7_3_, usergroup3_.enabled as enabled3_7_3_, usergroup3_.groupName as groupnam4_7_3_ from public.gs_user_attribute userattrib0_ inner join public.gs_user user1_ on userattrib0_.user_id=user1_.id left outer join public.gs_usergroup_members groups2_ on user1_.id=groups2_.user_id left outer join public.gs_usergroup usergroup3_ on groups2_.group_id=usergroup3_.id where userattrib0_.id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_ from public.gs_user_attribute userattrib0_ where userattrib0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: update public.gs_user_attribute set name=?, user_id=?, string=? where id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_, user1_.id as id1_5_1_, user1_.enabled as enabled2_5_1_, user1_.name as name3_5_1_, user1_.user_password as user_pas4_5_1_, user1_.user_role as user_rol5_5_1_, groups2_.user_id as user_id1_8_2_, usergroup3_.id as group_id2_8_2_, usergroup3_.id as id1_7_3_, usergroup3_.description as descript2_7_3_, usergroup3_.enabled as enabled3_7_3_, usergroup3_.groupName as groupnam4_7_3_ from public.gs_user_attribute userattrib0_ inner join public.gs_user user1_ on userattrib0_.user_id=user1_.id left outer join public.gs_usergroup_members groups2_ on user1_.id=groups2_.user_id left outer join public.gs_usergroup usergroup3_ on groups2_.group_id=usergroup3_.id where userattrib0_.id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_, user1_.id as id1_5_1_, user1_.enabled as enabled2_5_1_, user1_.name as name3_5_1_, user1_.user_password as user_pas4_5_1_, user1_.user_role as user_rol5_5_1_, groups2_.user_id as user_id1_8_2_, usergroup3_.id as group_id2_8_2_, usergroup3_.id as id1_7_3_, usergroup3_.description as descript2_7_3_, usergroup3_.enabled as enabled3_7_3_, usergroup3_.groupName as groupnam4_7_3_ from public.gs_user_attribute userattrib0_ inner join public.gs_user user1_ on userattrib0_.user_id=user1_.id left outer join public.gs_usergroup_members groups2_ on user1_.id=groups2_.user_id left outer join public.gs_usergroup usergroup3_ on groups2_.group_id=usergroup3_.id where userattrib0_.id=?\nHibernate: select userattrib0_.id as col_0_0_ from public.gs_user_attribute userattrib0_ where userattrib0_.id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_, user1_.id as id1_5_1_, user1_.enabled as enabled2_5_1_, user1_.name as name3_5_1_, user1_.user_password as user_pas4_5_1_, user1_.user_role as user_rol5_5_1_, groups2_.user_id as user_id1_8_2_, usergroup3_.id as group_id2_8_2_, usergroup3_.id as id1_7_3_, usergroup3_.description as descript2_7_3_, usergroup3_.enabled as enabled3_7_3_, usergroup3_.groupName as groupnam4_7_3_ from public.gs_user_attribute userattrib0_ inner join public.gs_user user1_ on userattrib0_.user_id=user1_.id left outer join public.gs_usergroup_members groups2_ on user1_.id=groups2_.user_id left outer join public.gs_usergroup usergroup3_ on groups2_.group_id=usergroup3_.id where userattrib0_.id=?\nHibernate: delete from public.gs_user_attribute where id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_, user1_.id as id1_5_1_, user1_.enabled as enabled2_5_1_, user1_.name as name3_5_1_, user1_.user_password as user_pas4_5_1_, user1_.user_role as user_rol5_5_1_, groups2_.user_id as user_id1_8_2_, usergroup3_.id as group_id2_8_2_, usergroup3_.id as id1_7_3_, usergroup3_.description as descript2_7_3_, usergroup3_.enabled as enabled3_7_3_, usergroup3_.groupName as groupnam4_7_3_ from public.gs_user_attribute userattrib0_ inner join public.gs_user user1_ on userattrib0_.user_id=user1_.id left outer join public.gs_usergroup_members groups2_ on user1_.id=groups2_.user_id left outer join public.gs_usergroup usergroup3_ on groups2_.group_id=usergroup3_.id where userattrib0_.id=?\nINFO 2024-08-05 02:11:37.871 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::setUp - ################ Running UserAttributeDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nINFO 2024-08-05 02:11:37.880 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::removeAllUser - Removing 59\nHibernate: select user0_.id as col_0_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select security0_.user_id as user_id8_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, resource2_.id as id1_2_3_, resource2_.category_id as category7_2_3_, resource2_.creation as creation2_2_3_, resource2_.description as descript3_2_3_, resource2_.lastUpdate as lastupda4_2_3_, resource2_.metadata as metadata5_2_3_, resource2_.name as name6_2_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on security0_.resource_id=resource2_.id left outer join public.gs_category category3_ on resource2_.category_id=category3_.id where security0_.user_id=?\nHibernate: delete from public.gs_usergroup_members where user_id=?\nHibernate: delete from public.gs_user where id=?\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.887 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::removeAllUserGroup - Removing 57\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nINFO 2024-08-05 02:11:37.889 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::removeAllUserGroup - Removing 58\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.891 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.115 sec\nRunning it.geosolutions.geostore.core.dao.SecurityDAOTest\nINFO 2024-08-05 02:11:37.893 it.geosolutions.geostore.core.dao.SecurityDAOTest::setUp - ################ Running SecurityDAOTest::testPersistSecurityUsingNames\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.899 it.geosolutions.geostore.core.dao.SecurityDAOTest::setUp - ##### Ending setup for testPersistSecurityUsingNames ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user (enabled, name, user_password, user_role, id) values (?, ?, ?, ?, ?)\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: update public.gs_security set canRead=?, canWrite=?, group_id=?, groupname=?, resource_id=?, user_id=?, username=? where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nINFO 2024-08-05 02:11:37.941 it.geosolutions.geostore.core.dao.SecurityDAOTest::setUp - ################ Running SecurityDAOTest::testPersistSecurity\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nINFO 2024-08-05 02:11:37.942 it.geosolutions.geostore.core.dao.SecurityDAOTest::removeAllResource - Removing 64\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:37.948 it.geosolutions.geostore.core.dao.SecurityDAOTest::removeAllCategory - Removing 61\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nINFO 2024-08-05 02:11:37.952 it.geosolutions.geostore.core.dao.SecurityDAOTest::removeAllUser - Removing 62\nHibernate: select user0_.id as col_0_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select security0_.user_id as user_id8_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, resource2_.id as id1_2_3_, resource2_.category_id as category7_2_3_, resource2_.creation as creation2_2_3_, resource2_.description as descript3_2_3_, resource2_.lastUpdate as lastupda4_2_3_, resource2_.metadata as metadata5_2_3_, resource2_.name as name6_2_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on security0_.resource_id=resource2_.id left outer join public.gs_category category3_ on resource2_.category_id=category3_.id where security0_.user_id=?\nHibernate: delete from public.gs_user where id=?\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.955 it.geosolutions.geostore.core.dao.SecurityDAOTest::removeAllUserGroup - Removing 63\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.957 it.geosolutions.geostore.core.dao.SecurityDAOTest::setUp - ##### Ending setup for testPersistSecurity ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: update public.gs_security set canRead=?, canWrite=?, group_id=?, groupname=?, resource_id=?, user_id=?, username=? where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nINFO 2024-08-05 02:11:37.973 it.geosolutions.geostore.core.dao.SecurityDAOTest::setUp - ################ Running SecurityDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nINFO 2024-08-05 02:11:37.975 it.geosolutions.geostore.core.dao.SecurityDAOTest::removeAllResource - Removing 70\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:37.980 it.geosolutions.geostore.core.dao.SecurityDAOTest::removeAllCategory - Removing 69\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.984 it.geosolutions.geostore.core.dao.SecurityDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.093 sec\nRunning it.geosolutions.geostore.core.dao.StoredDataDAOTest\nINFO 2024-08-05 02:11:37.986 it.geosolutions.geostore.core.dao.StoredDataDAOTest::setUp - ################ Running StoredDataDAOTest::testPersistData\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.992 it.geosolutions.geostore.core.dao.StoredDataDAOTest::setUp - ##### Ending setup for testPersistData ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: insert into public.gs_stored_data (stored_data, resource_id, id) values (?, ?, ?)\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, attribute2_.resource_id as resource7_0_2_, attribute2_.id as id1_0_2_, attribute2_.id as id1_0_3_, attribute2_.attribute_date as attribut2_0_3_, attribute2_.name as name3_0_3_, attribute2_.attribute_number as attribut4_0_3_, attribute2_.resource_id as resource7_0_3_, attribute2_.attribute_text as attribut5_0_3_, attribute2_.attribute_type as attribut6_0_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id inner join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.id=?\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_ from public.gs_stored_data storeddata0_ where storeddata0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: update public.gs_stored_data set stored_data=?, resource_id=? where id=?\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, attribute2_.resource_id as resource7_0_2_, attribute2_.id as id1_0_2_, attribute2_.id as id1_0_3_, attribute2_.attribute_date as attribut2_0_3_, attribute2_.name as name3_0_3_, attribute2_.attribute_number as attribut4_0_3_, attribute2_.resource_id as resource7_0_3_, attribute2_.attribute_text as attribut5_0_3_, attribute2_.attribute_type as attribut6_0_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id inner join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.id=?\nHibernate: select storeddata0_.id as col_0_0_ from public.gs_stored_data storeddata0_ where storeddata0_.id=?\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, attribute2_.resource_id as resource7_0_2_, attribute2_.id as id1_0_2_, attribute2_.id as id1_0_3_, attribute2_.attribute_date as attribut2_0_3_, attribute2_.name as name3_0_3_, attribute2_.attribute_number as attribut4_0_3_, attribute2_.resource_id as resource7_0_3_, attribute2_.attribute_text as attribut5_0_3_, attribute2_.attribute_type as attribut6_0_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id inner join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.id=?\nHibernate: delete from public.gs_stored_data where id=?\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, attribute2_.resource_id as resource7_0_2_, attribute2_.id as id1_0_2_, attribute2_.id as id1_0_3_, attribute2_.attribute_date as attribut2_0_3_, attribute2_.name as name3_0_3_, attribute2_.attribute_number as attribut4_0_3_, attribute2_.resource_id as resource7_0_3_, attribute2_.attribute_text as attribut5_0_3_, attribute2_.attribute_type as attribut6_0_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id inner join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.id=?\nINFO 2024-08-05 02:11:38.008 it.geosolutions.geostore.core.dao.StoredDataDAOTest::setUp - ################ Running StoredDataDAOTest::testBigData\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nINFO 2024-08-05 02:11:38.010 it.geosolutions.geostore.core.dao.StoredDataDAOTest::removeAllResource - Removing 73\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:38.017 it.geosolutions.geostore.core.dao.StoredDataDAOTest::removeAllCategory - Removing 72\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.021 it.geosolutions.geostore.core.dao.StoredDataDAOTest::setUp - ##### Ending setup for testBigData ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nSB is 500000 chars long\nHibernate: insert into public.gs_stored_data (stored_data, resource_id, id) values (?, ?, ?)\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, attribute2_.resource_id as resource7_0_2_, attribute2_.id as id1_0_2_, attribute2_.id as id1_0_3_, attribute2_.attribute_date as attribut2_0_3_, attribute2_.name as name3_0_3_, attribute2_.attribute_number as attribut4_0_3_, attribute2_.resource_id as resource7_0_3_, attribute2_.attribute_text as attribut5_0_3_, attribute2_.attribute_type as attribut6_0_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id inner join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.id=?\nINFO 2024-08-05 02:11:38.044 it.geosolutions.geostore.core.dao.StoredDataDAOTest::setUp - ################ Running StoredDataDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nINFO 2024-08-05 02:11:38.046 it.geosolutions.geostore.core.dao.StoredDataDAOTest::removeAllResource - Removing 75\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_stored_data where id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:38.053 it.geosolutions.geostore.core.dao.StoredDataDAOTest::removeAllCategory - Removing 74\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.056 it.geosolutions.geostore.core.dao.StoredDataDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 sec\nRunning it.geosolutions.geostore.core.dao.ldap.UserGroupDAOTest\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec\nRunning it.geosolutions.geostore.core.dao.UserDAOTest\nINFO 2024-08-05 02:11:38.062 it.geosolutions.geostore.core.dao.UserDAOTest::setUp - ################ Running UserDAOTest::testPersistUser\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.068 it.geosolutions.geostore.core.dao.UserDAOTest::setUp - ##### Ending setup for testPersistUser ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user (enabled, name, user_password, user_role, id) values (?, ?, ?, ?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user_attribute (name, user_id, string, id) values (?, ?, ?, ?)\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select user0_.id as col_0_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select security0_.user_id as user_id8_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, resource2_.id as id1_2_3_, resource2_.category_id as category7_2_3_, resource2_.creation as creation2_2_3_, resource2_.description as descript3_2_3_, resource2_.lastUpdate as lastupda4_2_3_, resource2_.metadata as metadata5_2_3_, resource2_.name as name6_2_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on security0_.resource_id=resource2_.id left outer join public.gs_category category3_ on resource2_.category_id=category3_.id where security0_.user_id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: delete from public.gs_usergroup_members where user_id=?\nHibernate: delete from public.gs_user_attribute where id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: delete from public.gs_user where id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_, user1_.id as id1_5_1_, user1_.enabled as enabled2_5_1_, user1_.name as name3_5_1_, user1_.user_password as user_pas4_5_1_, user1_.user_role as user_rol5_5_1_, groups2_.user_id as user_id1_8_2_, usergroup3_.id as group_id2_8_2_, usergroup3_.id as id1_7_3_, usergroup3_.description as descript2_7_3_, usergroup3_.enabled as enabled3_7_3_, usergroup3_.groupName as groupnam4_7_3_ from public.gs_user_attribute userattrib0_ inner join public.gs_user user1_ on userattrib0_.user_id=user1_.id left outer join public.gs_usergroup_members groups2_ on user1_.id=groups2_.user_id left outer join public.gs_usergroup usergroup3_ on groups2_.group_id=usergroup3_.id where userattrib0_.id=?\nINFO 2024-08-05 02:11:38.160 it.geosolutions.geostore.core.dao.UserDAOTest::setUp - ################ Running UserDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nINFO 2024-08-05 02:11:38.162 it.geosolutions.geostore.core.dao.UserDAOTest::removeAllResource - Removing 77\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:38.169 it.geosolutions.geostore.core.dao.UserDAOTest::removeAllCategory - Removing 76\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.173 it.geosolutions.geostore.core.dao.UserDAOTest::removeAllUserGroup - Removing 78\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nINFO 2024-08-05 02:11:38.175 it.geosolutions.geostore.core.dao.UserDAOTest::removeAllUserGroup - Removing 79\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.178 it.geosolutions.geostore.core.dao.UserDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.118 sec\nRunning it.geosolutions.geostore.core.dao.ResourceDAOTest\nINFO 2024-08-05 02:11:38.180 it.geosolutions.geostore.core.dao.ResourceDAOTest::setUp - ################ Running ResourceDAOTest::testPersistResource\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.186 it.geosolutions.geostore.core.dao.ResourceDAOTest::setUp - ##### Ending setup for testPersistResource ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: insert into public.gs_stored_data (stored_data, resource_id, id) values (?, ?, ?)\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: update public.gs_resource set category_id=?, description=?, lastUpdate=?, metadata=?, name=? where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: delete from public.gs_stored_data where id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, attribute2_.resource_id as resource7_0_2_, attribute2_.id as id1_0_2_, attribute2_.id as id1_0_3_, attribute2_.attribute_date as attribut2_0_3_, attribute2_.name as name3_0_3_, attribute2_.attribute_number as attribut4_0_3_, attribute2_.resource_id as resource7_0_3_, attribute2_.attribute_text as attribut5_0_3_, attribute2_.attribute_type as attribut6_0_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id inner join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.id=?\nINFO 2024-08-05 02:11:38.211 it.geosolutions.geostore.core.dao.ResourceDAOTest::setUp - ################ Running ResourceDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:38.216 it.geosolutions.geostore.core.dao.ResourceDAOTest::removeAllCategory - Removing 84\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.220 it.geosolutions.geostore.core.dao.ResourceDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec\nResults :\nTests run: 33, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] -----------< it.geosolutions.geostore:geostore-services-api >-----------\n[INFO] Building GeoStore - Core - Services API 1.9-SNAPSHOT [7/18]\n[INFO] from src/core/services-api/pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-services-api ---\n[INFO]\n[INFO] --- resources:3.0.1:resources (default-resources) @ geostore-services-api ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /mnt/repo/src/core/services-api/src/main/resources\n[INFO]\n[INFO] --- compiler:3.5.1:compile (default-compile) @ geostore-services-api ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 27 source files to /mnt/repo/src/core/services-api/target/classes\n[INFO]\n[INFO] --- resources:3.0.1:testResources (default-testResources) @ geostore-services-api ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /mnt/repo/src/core/services-api/src/test/resources\n[INFO]\n[INFO] --- compiler:3.5.1:testCompile (default-testCompile) @ geostore-services-api ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 2 source files to /mnt/repo/src/core/services-api/target/test-classes\n[INFO]\n[INFO] --- surefire:2.4.2:test (default-test) @ geostore-services-api ---\n[INFO] Surefire report directory: /mnt/repo/src/core/services-api/target/surefire-reports\n-------------------------------------------------------\nT E S T S\n-------------------------------------------------------\nRunning it.geosolutions.geostore.services.dto.search.SearchFilterTest\nlog4j:WARN No appenders could be found for logger (it.geosolutions.geostore.services.dto.search.SearchFilterTest).\nlog4j:WARN Please initialize the log4j system properly.\nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\nTests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.266 sec <<< FAILURE!\nRunning it.geosolutions.geostore.services.dto.search.UserSessionTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec\nResults :\nTests in error:\ntestXMLParsing(it.geosolutions.geostore.services.dto.search.SearchFilterTest)\ntestAndMarshallUnmarshall(it.geosolutions.geostore.services.dto.search.SearchFilterTest)\ntestFieldMarshallUnmarshall(it.geosolutions.geostore.services.dto.search.SearchFilterTest)\nTests run: 4, Failures: 0, Errors: 3, Skipped: 0\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for Master GeoStore POM 1.9-SNAPSHOT:\n[INFO]\n[INFO] Master GeoStore POM ................................ SUCCESS [ 0.521 s]\n[INFO] GeoStore - 0 Server Root ........................... SUCCESS [ 0.049 s]\n[INFO] GeoStore - Core .................................... SUCCESS [ 0.003 s]\n[INFO] GeoStore - Core - Model ............................ SUCCESS [ 10.891 s]\n[INFO] GeoStore - Core - Security ......................... SUCCESS [ 8.015 s]\n[INFO] GeoStore - Core - Persistence ...................... SUCCESS [ 11.722 s]\n[INFO] GeoStore - Core - Services API ..................... FAILURE [ 3.853 s]\n[INFO] GeoStore - Core - Services implementation .......... SKIPPED\n[INFO] GeoStore - Modules ................................. SKIPPED\n[INFO] GeoStore - Modules - REST root ..................... SKIPPED\n[INFO] GeoStore - Modules - REST API ...................... SKIPPED\n[INFO] GeoStore - Modules - REST services ................. SKIPPED\n[INFO] GeoStore - Modules - REST client ................... SKIPPED\n[INFO] GeoStore - Modules - REST EXTJS services ........... SKIPPED\n[INFO] GeoStore - Modules - REST services test ............ SKIPPED\n[INFO] GeoStore - Modules - REST auditing ................. SKIPPED\n[INFO] GeoStore - Web ..................................... SKIPPED\n[INFO] GeoStore - Webapp .................................. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 36.696 s\n[INFO] Finished at: 2024-08-05T02:11:42Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.4.2:test (default-test) on project geostore-services-api: There are test failures.\n[ERROR]\n[ERROR] Please refer to /mnt/repo/src/core/services-api/target/surefire-reports for the individual test results.\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR] mvn <args> -rf :geostore-services-api",
                "updated_files": {
                    "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java": "package it.geosolutions.geostore.core.security.password;\n\n/*\n *  Copyright (C) 2007 - 2011 GeoSolutions S.A.S.\n *  http://www.geo-solutions.it\n *\n *  GPLv3 + Classpath exception\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.scramble;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toChars;\n\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.Base64;\nimport org.jasypt.encryption.pbe.StandardPBEByteEncryptor;\nimport org.jasypt.encryption.pbe.StandardPBEStringEncryptor;\nimport org.jasypt.util.password.StrongPasswordEncryptor;\nimport org.springframework.security.crypto.password.PasswordEncoder;\n/**\n * Password Encoder using symmetric encryption\n * \n * The salt parameter is not used, this implementation computes a random salt as\n * default.\n * \n * {@link #isPasswordValid(String, String, Object)}\n * {@link #encodePassword(String, Object)}\n * \n * @author Lorenzo Natali\n * \n */\npublic class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder {\n\n\tStandardPBEStringEncryptor stringEncrypter;\n\tStandardPBEByteEncryptor byteEncrypter;\n\n\tprivate String providerName, algorithm;\n\tprivate String keyAliasInKeyStore = KeyStoreProviderImpl.CONFIGPASSWORDKEY;\n\n\tprivate KeyStoreProvider keystoreProvider;\n\n\tpublic KeyStoreProvider getKeystoreProvider() {\n\t\treturn keystoreProvider;\n\t}\n\n\tpublic void setKeystoreProvider(KeyStoreProvider keystoreProvider) {\n\t\tthis.keystoreProvider = keystoreProvider;\n\t}\n\n\tpublic void setKeyAliasInKeyStore(String keyAliasInKeyStore) {\n\t\tthis.keyAliasInKeyStore = keyAliasInKeyStore;\n\t}\n\n\tpublic String getProviderName() {\n\t\treturn providerName;\n\t}\n\n\tpublic void setProviderName(String providerName) {\n\t\tthis.providerName = providerName;\n\t}\n\n\tpublic String getAlgorithm() {\n\t\treturn algorithm;\n\t}\n\n\tpublic void setAlgorithm(String algorithm) {\n\t\tthis.algorithm = algorithm;\n\t}\n\n\tpublic String getKeyAliasInKeyStore() {\n\t\treturn keyAliasInKeyStore;\n\t}\n\n\t@Override\n\tprotected org.acegisecurity.providers.encoding.PasswordEncoder createStringEncoder() {\n\t\tbyte[] password = lookupPasswordFromKeyStore();\n\n\t\tchar[] chars = toChars(password);\n\t\ttry {\n\t\t\tstringEncrypter = new StandardPBEStringEncryptor();\n\t\t\tstringEncrypter.setPasswordCharArray(chars);\n\n\t\t\tif (getProviderName() != null && !getProviderName().isEmpty()) {\n\t\t\t\tstringEncrypter.setProviderName(getProviderName());\n\t\t\t}\n\t\t\tstringEncrypter.setAlgorithm(getAlgorithm());\n\n\t\t\treturn new org.acegisecurity.providers.encoding.PasswordEncoder() {\n\t\t\t\t@Override\n\t\t\t\tpublic String encodePassword(String rawPass, Object salt) {\n\t\t\t\t\treturn stringEncrypter.encrypt(rawPass);\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic boolean isPasswordValid(String encPass, String rawPass, Object salt) {\n\t\t\t\t\treturn stringEncrypter.decrypt(encPass).equals(rawPass);\n\t\t\t\t}\n\t\t\t};\n\t\t} finally {\n\t\t\tscramble(password);\n\t\t\tscramble(chars);\n\t\t}\n\t}\n\n\t@Override\n\tprotected CharArrayPasswordEncoder createCharEncoder() {\n\t\tbyte[] password = lookupPasswordFromKeyStore();\n\t\tchar[] chars = toChars(password);\n\n\t\tbyteEncrypter = new StandardPBEByteEncryptor();\n\t\tbyteEncrypter.setPasswordCharArray(chars);\n\n\t\tif (getProviderName() != null && !getProviderName().isEmpty()) {\n\t\t\tbyteEncrypter.setProviderName(getProviderName());\n\t\t}\n\t\tbyteEncrypter.setAlgorithm(getAlgorithm());\n\n\t\treturn new CharArrayPasswordEncoder() {\n\t\t\tpublic boolean isPasswordValid(String encPass, char[] rawPass, Object salt) {\n\t\t\t\tbyte[] decoded = Base64.getDecoder().decode(encPass.getBytes());\n\t\t\t\tbyte[] decrypted = byteEncrypter.decrypt(decoded);\n\n\t\t\t\tchar[] chars = toChars(decrypted);\n\t\t\t\ttry {\n\t\t\t\t\treturn Arrays.equals(chars, rawPass);\n\t\t\t\t} finally {\n\t\t\t\t\tscramble(decrypted);\n\t\t\t\t\tscramble(chars);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpublic String encodePassword(char[] rawPass, Object salt) {\n\t\t\t\tbyte[] bytes = toBytes(rawPass);\n\t\t\t\ttry {\n\t\t\t\t\treturn new String(Base64.getEncoder().encode(byteEncrypter\n\t\t\t\t\t\t\t.encrypt(bytes)));\n\t\t\t\t} finally {\n\t\t\t\t\tscramble(bytes);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tbyte[] lookupPasswordFromKeyStore() {\n\t\ttry {\n\t\t\tif (!keystoreProvider.containsAlias(getKeyAliasInKeyStore())) {\n\t\t\t\tthrow new RuntimeException(\"Keystore: \"\n\t\t\t\t\t\t+ keystoreProvider.getFile() + \" does not\"\n\t\t\t\t\t\t+ \" contain alias: \" + getKeyAliasInKeyStore());\n\t\t\t}\n\t\t\treturn keystoreProvider.getSecretKey(getKeyAliasInKeyStore())\n\t\t\t\t\t.getEncoded();\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(\"Cannot find alias: \"\n\t\t\t\t\t+ getKeyAliasInKeyStore() + \" in \"\n\t\t\t\t\t+ keystoreProvider.getFile().getAbsolutePath());\n\t\t}\n\t}\n\n\t@Override\n\tpublic PasswordEncodingType getEncodingType() {\n\t\treturn PasswordEncodingType.ENCRYPT;\n\t}\n\n\tpublic String decode(String encPass) throws UnsupportedOperationException {\n\t\tif (stringEncrypter == null) {\n\t\t\t// not initialized\n\t\t\tgetStringEncoder();\n\t\t}\n\n\t\treturn stringEncrypter.decrypt(removePrefix(encPass));\n\t}\n\n\t@Override\n\tpublic char[] decodeToCharArray(String encPass)\n\t\t\tthrows UnsupportedOperationException {\n\t\tif (byteEncrypter == null) {\n\t\t\t// not initialized\n\t\t\tgetCharEncoder();\n\t\t}\n\n\t\tbyte[] decoded = Base64.getDecoder().decode(removePrefix(encPass).getBytes());\n\t\tbyte[] bytes = byteEncrypter.decrypt(decoded);\n\t\ttry {\n\t\t\treturn toChars(bytes);\n\t\t} finally {\n\t\t\tscramble(bytes);\n\t\t}\n\t}\n\t\n}\n"
                },
                "compile_error_details": {}
            },
            "error": "[INFO] Scanning for projects...\n[WARNING]\n[WARNING] Some problems were encountered while building the effective model for it.geosolutions.geostore:geostore-rest-impl:jar:1.9-SNAPSHOT\n[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.mockito:mockito-core:jar -> duplicate declaration of version (?) @ line 231, column 21\n[WARNING]\n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING]\n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING]\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] Master GeoStore POM [pom]\n[INFO] GeoStore - 0 Server Root [pom]\n[INFO] GeoStore - Core [pom]\n[INFO] GeoStore - Core - Model [jar]\n[INFO] GeoStore - Core - Security [jar]\n[INFO] GeoStore - Core - Persistence [jar]\n[INFO] GeoStore - Core - Services API [jar]\n[INFO] GeoStore - Core - Services implementation [jar]\n[INFO] GeoStore - Modules [pom]\n[INFO] GeoStore - Modules - REST root [pom]\n[INFO] GeoStore - Modules - REST API [jar]\n[INFO] GeoStore - Modules - REST services [jar]\n[INFO] GeoStore - Modules - REST client [jar]\n[INFO] GeoStore - Modules - REST EXTJS services [jar]\n[INFO] GeoStore - Modules - REST services test [war]\n[INFO] GeoStore - Modules - REST auditing [jar]\n[INFO] GeoStore - Web [pom]\n[INFO] GeoStore - Webapp [war]\n[INFO]\n[INFO] ----------------------< it.geosolutions:geostore >----------------------\n[INFO] Building Master GeoStore POM 1.9-SNAPSHOT [1/18]\n[INFO] from pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore ---\n[INFO]\n[INFO] ---------------< it.geosolutions.geostore:geostore-root >---------------\n[INFO] Building GeoStore - 0 Server Root 1.9-SNAPSHOT [2/18]\n[INFO] from src/pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-root ---\n[INFO]\n[INFO] ---------------< it.geosolutions.geostore:geostore-core >---------------\n[INFO] Building GeoStore - Core 1.9-SNAPSHOT [3/18]\n[INFO] from src/core/pom.xml\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-core ---\n[INFO]\n[INFO] --------------< it.geosolutions.geostore:geostore-model >---------------\n[INFO] Building GeoStore - Core - Model 1.9-SNAPSHOT [4/18]\n[INFO] from src/core/model/pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-model ---\n[INFO] Deleting /mnt/repo/src/core/model/target\n[INFO]\n[INFO] --- resources:3.0.1:resources (default-resources) @ geostore-model ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /mnt/repo/src/core/model/src/main/resources\n[INFO]\n[INFO] --- compiler:3.5.1:compile (default-compile) @ geostore-model ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 20 source files to /mnt/repo/src/core/model/target/classes\n[INFO]\n[INFO] --- resources:3.0.1:testResources (default-testResources) @ geostore-model ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /mnt/repo/src/core/model/src/test/resources\n[INFO]\n[INFO] --- compiler:3.5.1:testCompile (default-testCompile) @ geostore-model ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 7 source files to /mnt/repo/src/core/model/target/test-classes\n[INFO]\n[INFO] --- surefire:2.4.2:test (default-test) @ geostore-model ---\n[INFO] Surefire report directory: /mnt/repo/src/core/model/target/surefire-reports\n-------------------------------------------------------\nT E S T S\n-------------------------------------------------------\nRunning it.geosolutions.geostore.core.model.SecurityRuleTest\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.313 sec\nRunning it.geosolutions.geostore.core.model.UserGroupTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec\nRunning it.geosolutions.geostore.core.model.AttributeTest\nAttribute[id is null, name=testatt, numberValue=42.0, type=NUMBER]\nAttribute[id is null, name=testatt, numberValue=42.0, type=NUMBER]\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Attribute type=\"NUMBER\">\n<name>testatt</name>\n<value>42.0</value>\n</Attribute>\nAttribute[id is null, name=testatt, textValue=test, type=STRING]\nAttribute[id is null, name=testatt, textValue=test, type=STRING]\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Attribute type=\"STRING\">\n<name>testatt</name>\n<value>test</value>\n</Attribute>\nAttribute[id is null, name=testatt, dateValue=Mon Aug 05 02:11:18 UTC 2024, type=DATE]\nAttribute[id is null, name=testatt, dateValue=Mon Aug 05 02:11:18 UTC 2024, type=DATE]\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Attribute type=\"DATE\">\n<name>testatt</name>\n<value>2024-08-05T02:11:18.432+0000</value>\n</Attribute>\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 sec\nRunning it.geosolutions.geostore.core.model.UserTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.046 sec\nRunning it.geosolutions.geostore.core.model.CategoryTest\nCategory[id=1, name=testatt]\nCategory[id=1, name=testatt]\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Category>\n<id>1</id>\n<name>testatt</name>\n</Category>\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec\nRunning it.geosolutions.geostore.core.model.GroupReservedNamesTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec\nResults :\nTests run: 9, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] -------------< it.geosolutions.geostore:geostore-security >-------------\n[INFO] Building GeoStore - Core - Security 1.9-SNAPSHOT [5/18]\n[INFO] from src/core/security/pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-security ---\n[INFO] Deleting /mnt/repo/src/core/security/target\n[INFO]\n[INFO] --- resources:3.0.1:resources (default-resources) @ geostore-security ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 3 resources\n[INFO]\n[INFO] --- compiler:3.5.1:compile (default-compile) @ geostore-security ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 26 source files to /mnt/repo/src/core/security/target/classes\n[INFO]\n[INFO] --- resources:3.0.1:testResources (default-testResources) @ geostore-security ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 4 resources\n[INFO]\n[INFO] --- compiler:3.5.1:testCompile (default-testCompile) @ geostore-security ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 7 source files to /mnt/repo/src/core/security/target/test-classes\n[INFO]\n[INFO] --- surefire:2.4.2:test (default-test) @ geostore-security ---\n[INFO] Surefire report directory: /mnt/repo/src/core/security/target/surefire-reports\n-------------------------------------------------------\nT E S T S\n-------------------------------------------------------\nRunning it.geosolutions.geostore.core.security.password.PwEncoderTest\nENC --> 0LCtD7xXqhi8G/QApqKOOYxmNUjHcLudPdj3dWLs+m7ufAWuoXdf/+3KSUw4sSO+\nENC --> 3KQFAuXOUYT72wYFtwiT35ySFKS3ssqX3ZFgPmnTGYoMuFOEQVbtx63Q9bHQn9Vw\nENC --> Vz98in3ViU/J2Zo8JUp00DdDzMB2KCQ0dD6IPh2HUcViC9UKVPSz2+up36U4TAeW\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.339 sec\nRunning it.geosolutions.geostore.core.security.ldap.CustomAttributesLdapUserDetailsMapperTest\nlog4j:WARN No appenders could be found for logger (org.springframework.security.ldap.userdetails.LdapUserDetailsMapper).\nlog4j:WARN Please initialize the log4j system properly.\nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec\nRunning it.geosolutions.geostore.core.security.ExpressionUserMapperTest\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.076 sec\nRunning it.geosolutions.geostore.core.security.password.EncodingTest\n/mnt/repo/src/core/security/geostore.jceks@SLTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.046 sec\nRunning it.geosolutions.geostore.core.security.SimpleGrantedAuthoritiesMapperTest\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec\nRunning it.geosolutions.geostore.core.security.password.MasterPasswordProviderTest\ngeostore\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec\nResults :\nTests run: 12, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] -----------< it.geosolutions.geostore:geostore-persistence >------------\n[INFO] Building GeoStore - Core - Persistence 1.9-SNAPSHOT [6/18]\n[INFO] from src/core/persistence/pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-persistence ---\n[INFO]\n[INFO] --- resources:3.0.1:resources (default-resources) @ geostore-persistence ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 6 resources\n[INFO]\n[INFO] --- compiler:3.5.1:compile (default-compile) @ geostore-persistence ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 23 source files to /mnt/repo/src/core/persistence/target/classes\n[INFO]\n[INFO] >>> hibernate3:2.2:hbm2ddl (default) > process-resources @ geostore-persistence >>>\n[INFO]\n[INFO] --- resources:3.0.1:resources (default-resources) @ geostore-persistence ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 6 resources\n[INFO]\n[INFO] <<< hibernate3:2.2:hbm2ddl (default) < process-resources @ geostore-persistence <<<\n[INFO]\n[INFO]\n[INFO] --- hibernate3:2.2:hbm2ddl (default) @ geostore-persistence ---\n[INFO] Artifact dom4j:dom4j:jar:1.6.1 is present in the local repository, but cached from a remote repository ID that is unavailable in current build context, verifying that is downloadable from [repo1.maven.org-maven2 (https://repo1.maven.org/maven2/, default, releases+snapshots), central (https://repo.maven.apache.org/maven2, default, releases), maven-default-http-blocker (http://0.0.0.0/, default, snapshots, blocked)]\n[INFO] Artifact xml-apis:xml-apis:jar:1.0.b2 is present in the local repository, but cached from a remote repository ID that is unavailable in current build context, verifying that is downloadable from [repo1.maven.org-maven2 (https://repo1.maven.org/maven2/, default, releases+snapshots), central (https://repo.maven.apache.org/maven2, default, releases), maven-default-http-blocker (http://0.0.0.0/, default, snapshots, blocked)]\n[INFO] Artifact dom4j:dom4j:jar:1.6.1 is present in the local repository, but cached from a remote repository ID that is unavailable in current build context, verifying that is downloadable from [repo1.maven.org-maven2 (https://repo1.maven.org/maven2/, default, releases+snapshots), central (https://repo.maven.apache.org/maven2, default, releases), maven-default-http-blocker (http://0.0.0.0/, default, snapshots, blocked)]\n[INFO] Artifact xml-apis:xml-apis:jar:1.0.b2 is present in the local repository, but cached from a remote repository ID that is unavailable in current build context, verifying that is downloadable from [repo1.maven.org-maven2 (https://repo1.maven.org/maven2/, default, releases+snapshots), central (https://repo.maven.apache.org/maven2, default, releases), maven-default-http-blocker (http://0.0.0.0/, default, snapshots, blocked)]\n[INFO] Configuration XML file loaded: file:/mnt/repo/src/core/persistence/src/test/resources/hibernate.cfg.xml\n[INFO] Hibernate Annotations 3.4.0.GA\n[INFO] Hibernate 3.3.1.GA\n[INFO] hibernate.properties not found\n[INFO] Bytecode provider name : javassist\n[INFO] using JDK 1.4 java.sql.Timestamp handling\n[INFO] Hibernate Commons Annotations 3.1.0.GA\n[INFO] Configuration XML file loaded: file:/mnt/repo/src/core/persistence/src/test/resources/hibernate.cfg.xml\n[INFO] configuring from url: file:/mnt/repo/src/core/persistence/src/test/resources/hibernate.cfg.xml\n[INFO] Configured SessionFactory: null\n[INFO] No hibernate properties file loaded.\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.Attribute\n[INFO] Bind entity it.geosolutions.geostore.core.model.Attribute on table gs_attribute\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.Category\n[INFO] Bind entity it.geosolutions.geostore.core.model.Category on table gs_category\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.Resource\n[INFO] Bind entity it.geosolutions.geostore.core.model.Resource on table gs_resource\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.SecurityRule\n[INFO] Bind entity it.geosolutions.geostore.core.model.SecurityRule on table gs_security\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.StoredData\n[INFO] Bind entity it.geosolutions.geostore.core.model.StoredData on table gs_stored_data\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.User\n[INFO] Bind entity it.geosolutions.geostore.core.model.User on table gs_user\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.UserAttribute\n[INFO] Bind entity it.geosolutions.geostore.core.model.UserAttribute on table gs_user_attribute\n[INFO] Binding entity from annotated class: it.geosolutions.geostore.core.model.UserGroup\n[INFO] Bind entity it.geosolutions.geostore.core.model.UserGroup on table gs_usergroup\n[INFO] Mapping collection: it.geosolutions.geostore.core.model.Category.resource -> gs_resource\n[INFO] Mapping collection: it.geosolutions.geostore.core.model.Resource.attribute -> gs_attribute\n[INFO] Mapping collection: it.geosolutions.geostore.core.model.Resource.security -> gs_security\n[INFO] Mapping collection: it.geosolutions.geostore.core.model.User.attribute -> gs_user_attribute\n[INFO] Mapping collection: it.geosolutions.geostore.core.model.User.security -> gs_security\n[INFO] Mapping collection: it.geosolutions.geostore.core.model.UserGroup.security -> gs_security\n[INFO] Hibernate Validator not found: ignoring\n[INFO] Using dialect: org.hibernate.dialect.H2Dialect\n[INFO] Running hbm2ddl schema export\n[INFO] writing generated schema to file: /mnt/repo/src/core/persistence/target/classes/geostore.ddl\ncreate table gs_attribute (\nid bigint generated by default as identity,\nattribute_date timestamp,\nname varchar(255) not null,\nattribute_number double,\nattribute_text varchar(255),\nattribute_type varchar(255) not null,\nresource_id bigint not null,\nprimary key (id),\nunique (name, resource_id)\n);\ncreate table gs_category (\nid bigint generated by default as identity,\nname varchar(255) not null,\nprimary key (id),\nunique (name)\n);\ncreate table gs_resource (\nid bigint generated by default as identity,\ncreation timestamp not null,\ndescription varchar(10000),\nlastUpdate timestamp,\nmetadata varchar(30000),\nname varchar(255) not null,\ncategory_id bigint not null,\nprimary key (id),\nunique (name)\n);\ncreate table gs_security (\nid bigint generated by default as identity,\ncanRead bit not null,\ncanWrite bit not null,\ngroupname varchar(255),\nusername varchar(255),\ngroup_id bigint,\nresource_id bigint,\nuser_id bigint,\nprimary key (id),\nunique (resource_id, group_id),\nunique (user_id, resource_id)\n);\ncreate table gs_stored_data (\nid bigint not null,\nstored_data varchar(10000000) not null,\nresource_id bigint not null,\nprimary key (id),\nunique (resource_id)\n);\ncreate table gs_user (\nid bigint generated by default as identity,\nenabled char(255) not null,\nname varchar(255) not null,\nuser_password varchar(255),\nuser_role varchar(255) not null,\nprimary key (id),\nunique (name)\n);\ncreate table gs_user_attribute (\nid bigint generated by default as identity,\nname varchar(255) not null,\nstring varchar(255),\nuser_id bigint not null,\nprimary key (id),\nunique (name, user_id)\n);\ncreate table gs_usergroup (\nid bigint generated by default as identity,\ndescription varchar(255),\nenabled char(255) not null,\ngroupName varchar(255) not null,\nprimary key (id),\nunique (groupName)\n);\ncreate table gs_usergroup_members (\nuser_id bigint not null,\ngroup_id bigint not null,\nprimary key (user_id, group_id)\n);\nalter table gs_attribute\nadd constraint FKA33E7B09410D3892\nforeign key (resource_id)\nreferences gs_resource;\nalter table gs_resource\nadd constraint FK9612B2016A775292\nforeign key (category_id)\nreferences gs_category;\nalter table gs_security\nadd constraint FKE2F965339EC981B7\nforeign key (group_id)\nreferences gs_usergroup;\nalter table gs_security\nadd constraint FKE2F9653362224F72\nforeign key (user_id)\nreferences gs_user;\nalter table gs_security\nadd constraint FKE2F96533410D3892\nforeign key (resource_id)\nreferences gs_resource;\nalter table gs_stored_data\nadd constraint FK8EDDBBF3410D3892\nforeign key (resource_id)\nreferences gs_resource;\nalter table gs_user_attribute\nadd constraint FK7F7AFADB62224F72\nforeign key (user_id)\nreferences gs_user;\nalter table gs_usergroup_members\nadd constraint FKFDE460DB9EC981B7\nforeign key (group_id)\nreferences gs_usergroup;\nalter table gs_usergroup_members\nadd constraint FKFDE460DB62224F72\nforeign key (user_id)\nreferences gs_user;\n[INFO] schema export complete\n[INFO]\n[INFO] --- resources:3.0.1:testResources (default-testResources) @ geostore-persistence ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] Copying 7 resources\n[INFO]\n[INFO] --- compiler:3.5.1:testCompile (default-testCompile) @ geostore-persistence ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 13 source files to /mnt/repo/src/core/persistence/target/test-classes\n[INFO]\n[INFO] --- surefire:2.4.2:test (default-test) @ geostore-persistence ---\n[INFO] Surefire report directory: /mnt/repo/src/core/persistence/target/surefire-reports\nINFO 2024-08-05 02:11:34.170 org.hibernate.jpa.internal.util.LogHelper::logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: geostore]\nINFO 2024-08-05 02:11:34.244 org.hibernate.Version::logVersion - HHH000412: Hibernate ORM core version 5.4.33.Final\nWARN 2024-08-05 02:11:34.453 org.hibernate.orm.deprecation::<init> - HHH020100: The Ehcache second-level cache provider for Hibernate is deprecated. See https://hibernate.atlassian.net/browse/HHH-12441 for details.\nINFO 2024-08-05 02:11:34.478 org.hibernate.annotations.common.Version::<clinit> - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}\nINFO 2024-08-05 02:11:34.900 org.hibernate.dialect.Dialect::<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect\nWARN 2024-08-05 02:11:35.315 net.sf.ehcache.config.ConfigurationFactory::parseConfiguration - No configuration found. Configuring ehcache from ehcache-failsafe.xml found in the classpath: jar:file:/root/.m2/repository/net/sf/ehcache/ehcache/2.10.6/ehcache-2.10.6.jar!/ehcache-failsafe.xml\nHibernate: drop table if exists public.gs_attribute CASCADE\nHibernate: drop table if exists public.gs_category CASCADE\nHibernate: drop table if exists public.gs_resource CASCADE\nHibernate: drop table if exists public.gs_security CASCADE\nHibernate: drop table if exists public.gs_stored_data CASCADE\nHibernate: drop table if exists public.gs_user CASCADE\nHibernate: drop table if exists public.gs_user_attribute CASCADE\nHibernate: drop table if exists public.gs_usergroup CASCADE\nHibernate: drop table if exists public.gs_usergroup_members CASCADE\nHibernate: drop sequence if exists public.hibernate_sequence\nHibernate: create sequence public.hibernate_sequence start with 1 increment by 1\nHibernate: create table public.gs_attribute (id bigint not null, attribute_date timestamp, name varchar(255) not null, attribute_number double, attribute_text varchar(255), attribute_type varchar(255) not null, resource_id bigint not null, primary key (id))\nHibernate: create table public.gs_category (id bigint not null, name varchar(255) not null, primary key (id))\nHibernate: create table public.gs_resource (id bigint not null, creation timestamp not null, description varchar(10000), lastUpdate timestamp, metadata varchar(30000), name varchar(255) not null, category_id bigint not null, primary key (id))\nHibernate: create table public.gs_security (id bigint not null, canRead boolean not null, canWrite boolean not null, groupname varchar(255), username varchar(255), group_id bigint, resource_id bigint, user_id bigint, primary key (id))\nHibernate: create table public.gs_stored_data (id bigint not null, stored_data varchar(10000000) not null, resource_id bigint not null, primary key (id))\nHibernate: create table public.gs_user (id bigint not null, enabled char(255) not null, name varchar(255) not null, user_password varchar(255), user_role varchar(255) not null, primary key (id))\nHibernate: create table public.gs_user_attribute (id bigint not null, name varchar(255) not null, string varchar(255), user_id bigint not null, primary key (id))\nHibernate: create table public.gs_usergroup (id bigint not null, description varchar(255), enabled char(255) not null, groupName varchar(255) not null, primary key (id))\nHibernate: create table public.gs_usergroup_members (user_id bigint not null, group_id bigint not null, primary key (user_id, group_id))\nHibernate: create index public.idx_attribute_name on public.gs_attribute (name)\nHibernate: create index public.idx_attribute_text on public.gs_attribute (attribute_text)\nHibernate: create index public.idx_attribute_number on public.gs_attribute (attribute_number)\nHibernate: create index public.idx_attribute_date on public.gs_attribute (attribute_date)\nHibernate: create index public.idx_attribute_type on public.gs_attribute (attribute_type)\nHibernate: create index public.idx_attribute_resource on public.gs_attribute (resource_id)\nHibernate: alter table public.gs_attribute add constraint UKpt7148tvfohj7dgmxyyq5tjre unique (name, resource_id)\nHibernate: create index public.idx_category_type on public.gs_category (name)\nHibernate: alter table public.gs_category add constraint UK5c8d20r6bikucjcapdd7i36ly unique (name)\nHibernate: create index public.idx_resource_name on public.gs_resource (name)\nHibernate: create index public.idx_resource_description on public.gs_resource (description)\nHibernate: create index public.idx_resource_creation on public.gs_resource (creation)\nHibernate: create index public.idx_resource_update on public.gs_resource (lastUpdate)\nHibernate: create index public.idx_resource_metadata on public.gs_resource (metadata)\nHibernate: create index public.idx_resource_category on public.gs_resource (category_id)\nHibernate: alter table public.gs_resource add constraint UKn024mqjdq1o53j3p7v1if9f0w unique (name)\nHibernate: create index public.idx_security_resource on public.gs_security (resource_id)\nHibernate: create index public.idx_security_user on public.gs_security (user_id)\nHibernate: create index public.idx_security_group on public.gs_security (group_id)\nHibernate: create index public.idx_security_read on public.gs_security (canRead)\nHibernate: create index public.idx_security_write on public.gs_security (canWrite)\nHibernate: create index public.idx_security_username on public.gs_security (username)\nHibernate: create index public.idx_security_groupname on public.gs_security (groupname)\nHibernate: alter table public.gs_security add constraint UKt82wtcwf67q3jkn51ew63gbii unique (user_id, resource_id)\nHibernate: alter table public.gs_security add constraint UKi79yiku7yldr157qelfu78rfo unique (resource_id, group_id)\nHibernate: alter table public.gs_stored_data add constraint UK_repsy09e1h92i6tcjk6o24oh6 unique (resource_id)\nHibernate: create index public.idx_user_name on public.gs_user (name)\nHibernate: create index public.idx_user_password on public.gs_user (user_password)\nHibernate: create index public.idx_user_role on public.gs_user (user_role)\nHibernate: alter table public.gs_user add constraint UK1nvdvro5ffh89vhe8ut546xcn unique (name)\nHibernate: create index public.idx_user_attribute_name on public.gs_user_attribute (name)\nHibernate: create index public.idx_user_attribute_text on public.gs_user_attribute (string)\nHibernate: create index public.idx_attribute_user on public.gs_user_attribute (user_id)\nHibernate: alter table public.gs_user_attribute add constraint UKmp2h35ne4c79xoj5jfs4jtvse unique (name, user_id)\nHibernate: create index public.idx_usergroup_name on public.gs_usergroup (groupName)\nHibernate: alter table public.gs_usergroup add constraint UKtd6p0q8hs1np9b6mphn1l4msx unique (groupName)\nHibernate: alter table public.gs_attribute add constraint fk_attribute_resource foreign key (resource_id) references public.gs_resource\nHibernate: alter table public.gs_resource add constraint FK4k4vivg9ombpq35y3rwvbvj5a foreign key (category_id) references public.gs_category\nHibernate: alter table public.gs_security add constraint fk_security_group foreign key (group_id) references public.gs_usergroup\nHibernate: alter table public.gs_security add constraint fk_security_resource foreign key (resource_id) references public.gs_resource\nHibernate: alter table public.gs_security add constraint fk_security_user foreign key (user_id) references public.gs_user\nHibernate: alter table public.gs_stored_data add constraint fk_data_resource foreign key (resource_id) references public.gs_resource\nHibernate: alter table public.gs_user_attribute add constraint fk_uattrib_user foreign key (user_id) references public.gs_user\nHibernate: alter table public.gs_usergroup_members add constraint FKcuodcud01kw3cqy0emcmh5mgj foreign key (group_id) references public.gs_usergroup\nHibernate: alter table public.gs_usergroup_members add constraint FKoitmticc812u1mao3g7ki1f5y foreign key (user_id) references public.gs_user\nINFO 2024-08-05 02:11:36.020 org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator::initiateService - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]\nINFO 2024-08-05 02:11:36.032 org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean::buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'geostore'\n-------------------------------------------------------\nT E S T S\n-------------------------------------------------------\nRunning it.geosolutions.geostore.core.dao.AttributeDAOTest\nINFO 2024-08-05 02:11:36.337 it.geosolutions.geostore.core.dao.AttributeDAOTest::setUp - ################ Running AttributeDAOTest::testSearchAttribute\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:36.579 it.geosolutions.geostore.core.dao.AttributeDAOTest::setUp - ##### Ending setup for testSearchAttribute ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: insert into public.gs_stored_data (stored_data, resource_id, id) values (?, ?, ?)\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_ where attribute0_.attribute_type=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_ where attribute0_.attribute_type<>?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_ where attribute0_.attribute_type=? and attribute0_.attribute_number>? and attribute0_.attribute_number<? and (lower(attribute0_.name) like lower(?))\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_ where attribute0_.attribute_type=? and attribute0_.attribute_date<? and (lower(attribute0_.name) like lower(?))\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_ where attribute0_.attribute_type<>? or attribute0_.attribute_type=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: delete from public.gs_stored_data where id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nINFO 2024-08-05 02:11:36.951 it.geosolutions.geostore.core.dao.AttributeDAOTest::setUp - ################ Running AttributeDAOTest::testPersistAttribute\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:36.964 it.geosolutions.geostore.core.dao.AttributeDAOTest::removeAllCategory - Removing 1\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:36.978 it.geosolutions.geostore.core.dao.AttributeDAOTest::setUp - ##### Ending setup for testPersistAttribute ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: insert into public.gs_stored_data (stored_data, resource_id, id) values (?, ?, ?)\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_attribute (attribute_date, name, attribute_number, resource_id, attribute_text, attribute_type, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, category2_.id as id1_1_2_, category2_.name as name2_1_2_ from public.gs_attribute attribute0_ inner join public.gs_resource resource1_ on attribute0_.resource_id=resource1_.id inner join public.gs_category category2_ on resource1_.category_id=category2_.id where attribute0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, category2_.id as id1_1_2_, category2_.name as name2_1_2_ from public.gs_attribute attribute0_ inner join public.gs_resource resource1_ on attribute0_.resource_id=resource1_.id inner join public.gs_category category2_ on resource1_.category_id=category2_.id where attribute0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_ from public.gs_attribute attribute0_ where attribute0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, category2_.id as id1_1_2_, category2_.name as name2_1_2_ from public.gs_attribute attribute0_ inner join public.gs_resource resource1_ on attribute0_.resource_id=resource1_.id inner join public.gs_category category2_ on resource1_.category_id=category2_.id where attribute0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_ from public.gs_attribute attribute0_ where attribute0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: update public.gs_attribute set attribute_date=?, name=?, attribute_number=?, resource_id=?, attribute_text=? where id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, category2_.id as id1_1_2_, category2_.name as name2_1_2_ from public.gs_attribute attribute0_ inner join public.gs_resource resource1_ on attribute0_.resource_id=resource1_.id inner join public.gs_category category2_ on resource1_.category_id=category2_.id where attribute0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.id as col_0_0_ from public.gs_attribute attribute0_ where attribute0_.id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, category2_.id as id1_1_2_, category2_.name as name2_1_2_ from public.gs_attribute attribute0_ inner join public.gs_resource resource1_ on attribute0_.resource_id=resource1_.id inner join public.gs_category category2_ on resource1_.category_id=category2_.id where attribute0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_attribute where id=?\nHibernate: select attribute0_.id as id1_0_0_, attribute0_.attribute_date as attribut2_0_0_, attribute0_.name as name3_0_0_, attribute0_.attribute_number as attribut4_0_0_, attribute0_.resource_id as resource7_0_0_, attribute0_.attribute_text as attribut5_0_0_, attribute0_.attribute_type as attribut6_0_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, category2_.id as id1_1_2_, category2_.name as name2_1_2_ from public.gs_attribute attribute0_ inner join public.gs_resource resource1_ on attribute0_.resource_id=resource1_.id inner join public.gs_category category2_ on resource1_.category_id=category2_.id where attribute0_.id=?\nINFO 2024-08-05 02:11:37.087 it.geosolutions.geostore.core.dao.AttributeDAOTest::setUp - ################ Running AttributeDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nINFO 2024-08-05 02:11:37.092 it.geosolutions.geostore.core.dao.AttributeDAOTest::removeAllResource - Removing 34\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_stored_data where id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:37.109 it.geosolutions.geostore.core.dao.AttributeDAOTest::removeAllCategory - Removing 33\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.120 it.geosolutions.geostore.core.dao.AttributeDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.797 sec\nRunning it.geosolutions.geostore.core.dao.UserGroupDAOTest\nINFO 2024-08-05 02:11:37.128 it.geosolutions.geostore.core.dao.UserGroupDAOTest::setUp - ################ Running UserGroupDAOTest::testPersistUserGroup\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.144 it.geosolutions.geostore.core.dao.UserGroupDAOTest::setUp - ##### Ending setup for testPersistUserGroup ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user (enabled, name, user_password, user_role, id) values (?, ?, ?, ?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user (enabled, name, user_password, user_role, id) values (?, ?, ?, ?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select user0_.id as col_0_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select security0_.user_id as user_id8_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, resource2_.id as id1_2_3_, resource2_.category_id as category7_2_3_, resource2_.creation as creation2_2_3_, resource2_.description as descript3_2_3_, resource2_.lastUpdate as lastupda4_2_3_, resource2_.metadata as metadata5_2_3_, resource2_.name as name6_2_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on security0_.resource_id=resource2_.id left outer join public.gs_category category3_ on resource2_.category_id=category3_.id where security0_.user_id=?\nHibernate: delete from public.gs_usergroup_members where user_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: delete from public.gs_user where id=?\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_ where exists (select usergroup2_.id from public.gs_usergroup_members groups1_, public.gs_usergroup usergroup2_ where user0_.id=groups1_.user_id and groups1_.group_id=usergroup2_.id and usergroup2_.id=?)\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nINFO 2024-08-05 02:11:37.437 it.geosolutions.geostore.core.dao.UserGroupDAOTest::testPersistUserGroup - Removing group UserGroup[id=39, groupName=GROUP2] from user User[id=42, name=USER2_NAME, group=[UserGroup[id=38, groupName=GROUP1], UserGroup[id=39, groupName=GROUP2]], role=USER]\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: delete from public.gs_usergroup_members where user_id=? and group_id=?\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_ where exists (select usergroup2_.id from public.gs_usergroup_members groups1_, public.gs_usergroup usergroup2_ where user0_.id=groups1_.user_id and groups1_.group_id=usergroup2_.id and usergroup2_.id=?)\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: delete from public.gs_usergroup where id=?\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select user0_.id as col_0_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select security0_.user_id as user_id8_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, resource2_.id as id1_2_3_, resource2_.category_id as category7_2_3_, resource2_.creation as creation2_2_3_, resource2_.description as descript3_2_3_, resource2_.lastUpdate as lastupda4_2_3_, resource2_.metadata as metadata5_2_3_, resource2_.name as name6_2_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on security0_.resource_id=resource2_.id left outer join public.gs_category category3_ on resource2_.category_id=category3_.id where security0_.user_id=?\nHibernate: delete from public.gs_usergroup_members where user_id=?\nHibernate: delete from public.gs_user where id=?\nINFO 2024-08-05 02:11:37.466 it.geosolutions.geostore.core.dao.UserGroupDAOTest::setUp - ################ Running UserGroupDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:37.471 it.geosolutions.geostore.core.dao.UserGroupDAOTest::removeAllCategory - Removing 36\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.477 it.geosolutions.geostore.core.dao.UserGroupDAOTest::removeAllUserGroup - Removing 37\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nINFO 2024-08-05 02:11:37.479 it.geosolutions.geostore.core.dao.UserGroupDAOTest::removeAllUserGroup - Removing 38\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.482 it.geosolutions.geostore.core.dao.UserGroupDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.357 sec\nRunning it.geosolutions.geostore.core.dao.ldap.UserDAOTest\nTests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.083 sec\nRunning it.geosolutions.geostore.core.dao.CategoryDAOTest\nINFO 2024-08-05 02:11:37.568 it.geosolutions.geostore.core.dao.CategoryDAOTest::setUp - ################ Running CategoryDAOTest::testPersistCategory\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.577 it.geosolutions.geostore.core.dao.CategoryDAOTest::setUp - ##### Ending setup for testPersistCategory ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nINFO 2024-08-05 02:11:37.591 it.geosolutions.geostore.core.dao.CategoryDAOTest::setUp - ################ Running CategoryDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.598 it.geosolutions.geostore.core.dao.CategoryDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec\nRunning it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest\nINFO 2024-08-05 02:11:37.600 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::setUp - ################ Running ExternalSecurityDAOTest::testPersistSecurityUsingNames\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.607 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::setUp - ##### Ending setup for testPersistSecurityUsingNames ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user (enabled, name, user_password, user_role, id) values (?, ?, ?, ?, ?)\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: update public.gs_security set canRead=?, canWrite=?, group_id=?, groupname=?, resource_id=?, user_id=?, username=? where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nINFO 2024-08-05 02:11:37.690 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::setUp - ################ Running ExternalSecurityDAOTest::testPersistSecurity\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nINFO 2024-08-05 02:11:37.694 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::removeAllResource - Removing 49\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:37.704 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::removeAllCategory - Removing 46\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nINFO 2024-08-05 02:11:37.711 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::removeAllUser - Removing 47\nHibernate: select user0_.id as col_0_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select security0_.user_id as user_id8_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, resource2_.id as id1_2_3_, resource2_.category_id as category7_2_3_, resource2_.creation as creation2_2_3_, resource2_.description as descript3_2_3_, resource2_.lastUpdate as lastupda4_2_3_, resource2_.metadata as metadata5_2_3_, resource2_.name as name6_2_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on security0_.resource_id=resource2_.id left outer join public.gs_category category3_ on resource2_.category_id=category3_.id where security0_.user_id=?\nHibernate: delete from public.gs_user where id=?\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.722 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::removeAllUserGroup - Removing 48\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.729 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::setUp - ##### Ending setup for testPersistSecurity ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: update public.gs_security set canRead=?, canWrite=?, group_id=?, groupname=?, resource_id=?, user_id=?, username=? where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nINFO 2024-08-05 02:11:37.758 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::setUp - ################ Running ExternalSecurityDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nINFO 2024-08-05 02:11:37.760 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::removeAllResource - Removing 55\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:37.769 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::removeAllCategory - Removing 54\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.775 it.geosolutions.geostore.core.dao.ExternalSecurityDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.177 sec\nRunning it.geosolutions.geostore.core.dao.UserAttributeDAOTest\nINFO 2024-08-05 02:11:37.778 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::setUp - ################ Running UserAttributeDAOTest::testPersistRole\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.786 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::setUp - ##### Ending setup for testPersistRole ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user (enabled, name, user_password, user_role, id) values (?, ?, ?, ?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user_attribute (name, user_id, string, id) values (?, ?, ?, ?)\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_, user1_.id as id1_5_1_, user1_.enabled as enabled2_5_1_, user1_.name as name3_5_1_, user1_.user_password as user_pas4_5_1_, user1_.user_role as user_rol5_5_1_, groups2_.user_id as user_id1_8_2_, usergroup3_.id as group_id2_8_2_, usergroup3_.id as id1_7_3_, usergroup3_.description as descript2_7_3_, usergroup3_.enabled as enabled3_7_3_, usergroup3_.groupName as groupnam4_7_3_ from public.gs_user_attribute userattrib0_ inner join public.gs_user user1_ on userattrib0_.user_id=user1_.id left outer join public.gs_usergroup_members groups2_ on user1_.id=groups2_.user_id left outer join public.gs_usergroup usergroup3_ on groups2_.group_id=usergroup3_.id where userattrib0_.id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_ from public.gs_user_attribute userattrib0_ where userattrib0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: update public.gs_user_attribute set name=?, user_id=?, string=? where id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_, user1_.id as id1_5_1_, user1_.enabled as enabled2_5_1_, user1_.name as name3_5_1_, user1_.user_password as user_pas4_5_1_, user1_.user_role as user_rol5_5_1_, groups2_.user_id as user_id1_8_2_, usergroup3_.id as group_id2_8_2_, usergroup3_.id as id1_7_3_, usergroup3_.description as descript2_7_3_, usergroup3_.enabled as enabled3_7_3_, usergroup3_.groupName as groupnam4_7_3_ from public.gs_user_attribute userattrib0_ inner join public.gs_user user1_ on userattrib0_.user_id=user1_.id left outer join public.gs_usergroup_members groups2_ on user1_.id=groups2_.user_id left outer join public.gs_usergroup usergroup3_ on groups2_.group_id=usergroup3_.id where userattrib0_.id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_, user1_.id as id1_5_1_, user1_.enabled as enabled2_5_1_, user1_.name as name3_5_1_, user1_.user_password as user_pas4_5_1_, user1_.user_role as user_rol5_5_1_, groups2_.user_id as user_id1_8_2_, usergroup3_.id as group_id2_8_2_, usergroup3_.id as id1_7_3_, usergroup3_.description as descript2_7_3_, usergroup3_.enabled as enabled3_7_3_, usergroup3_.groupName as groupnam4_7_3_ from public.gs_user_attribute userattrib0_ inner join public.gs_user user1_ on userattrib0_.user_id=user1_.id left outer join public.gs_usergroup_members groups2_ on user1_.id=groups2_.user_id left outer join public.gs_usergroup usergroup3_ on groups2_.group_id=usergroup3_.id where userattrib0_.id=?\nHibernate: select userattrib0_.id as col_0_0_ from public.gs_user_attribute userattrib0_ where userattrib0_.id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_, user1_.id as id1_5_1_, user1_.enabled as enabled2_5_1_, user1_.name as name3_5_1_, user1_.user_password as user_pas4_5_1_, user1_.user_role as user_rol5_5_1_, groups2_.user_id as user_id1_8_2_, usergroup3_.id as group_id2_8_2_, usergroup3_.id as id1_7_3_, usergroup3_.description as descript2_7_3_, usergroup3_.enabled as enabled3_7_3_, usergroup3_.groupName as groupnam4_7_3_ from public.gs_user_attribute userattrib0_ inner join public.gs_user user1_ on userattrib0_.user_id=user1_.id left outer join public.gs_usergroup_members groups2_ on user1_.id=groups2_.user_id left outer join public.gs_usergroup usergroup3_ on groups2_.group_id=usergroup3_.id where userattrib0_.id=?\nHibernate: delete from public.gs_user_attribute where id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_, user1_.id as id1_5_1_, user1_.enabled as enabled2_5_1_, user1_.name as name3_5_1_, user1_.user_password as user_pas4_5_1_, user1_.user_role as user_rol5_5_1_, groups2_.user_id as user_id1_8_2_, usergroup3_.id as group_id2_8_2_, usergroup3_.id as id1_7_3_, usergroup3_.description as descript2_7_3_, usergroup3_.enabled as enabled3_7_3_, usergroup3_.groupName as groupnam4_7_3_ from public.gs_user_attribute userattrib0_ inner join public.gs_user user1_ on userattrib0_.user_id=user1_.id left outer join public.gs_usergroup_members groups2_ on user1_.id=groups2_.user_id left outer join public.gs_usergroup usergroup3_ on groups2_.group_id=usergroup3_.id where userattrib0_.id=?\nINFO 2024-08-05 02:11:37.871 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::setUp - ################ Running UserAttributeDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nINFO 2024-08-05 02:11:37.880 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::removeAllUser - Removing 59\nHibernate: select user0_.id as col_0_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select security0_.user_id as user_id8_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, resource2_.id as id1_2_3_, resource2_.category_id as category7_2_3_, resource2_.creation as creation2_2_3_, resource2_.description as descript3_2_3_, resource2_.lastUpdate as lastupda4_2_3_, resource2_.metadata as metadata5_2_3_, resource2_.name as name6_2_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on security0_.resource_id=resource2_.id left outer join public.gs_category category3_ on resource2_.category_id=category3_.id where security0_.user_id=?\nHibernate: delete from public.gs_usergroup_members where user_id=?\nHibernate: delete from public.gs_user where id=?\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.887 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::removeAllUserGroup - Removing 57\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nINFO 2024-08-05 02:11:37.889 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::removeAllUserGroup - Removing 58\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.891 it.geosolutions.geostore.core.dao.UserAttributeDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.115 sec\nRunning it.geosolutions.geostore.core.dao.SecurityDAOTest\nINFO 2024-08-05 02:11:37.893 it.geosolutions.geostore.core.dao.SecurityDAOTest::setUp - ################ Running SecurityDAOTest::testPersistSecurityUsingNames\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.899 it.geosolutions.geostore.core.dao.SecurityDAOTest::setUp - ##### Ending setup for testPersistSecurityUsingNames ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user (enabled, name, user_password, user_role, id) values (?, ?, ?, ?, ?)\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: update public.gs_security set canRead=?, canWrite=?, group_id=?, groupname=?, resource_id=?, user_id=?, username=? where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nINFO 2024-08-05 02:11:37.941 it.geosolutions.geostore.core.dao.SecurityDAOTest::setUp - ################ Running SecurityDAOTest::testPersistSecurity\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nINFO 2024-08-05 02:11:37.942 it.geosolutions.geostore.core.dao.SecurityDAOTest::removeAllResource - Removing 64\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:37.948 it.geosolutions.geostore.core.dao.SecurityDAOTest::removeAllCategory - Removing 61\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nINFO 2024-08-05 02:11:37.952 it.geosolutions.geostore.core.dao.SecurityDAOTest::removeAllUser - Removing 62\nHibernate: select user0_.id as col_0_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select security0_.user_id as user_id8_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, resource2_.id as id1_2_3_, resource2_.category_id as category7_2_3_, resource2_.creation as creation2_2_3_, resource2_.description as descript3_2_3_, resource2_.lastUpdate as lastupda4_2_3_, resource2_.metadata as metadata5_2_3_, resource2_.name as name6_2_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on security0_.resource_id=resource2_.id left outer join public.gs_category category3_ on resource2_.category_id=category3_.id where security0_.user_id=?\nHibernate: delete from public.gs_user where id=?\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.955 it.geosolutions.geostore.core.dao.SecurityDAOTest::removeAllUserGroup - Removing 63\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.957 it.geosolutions.geostore.core.dao.SecurityDAOTest::setUp - ##### Ending setup for testPersistSecurity ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: update public.gs_security set canRead=?, canWrite=?, group_id=?, groupname=?, resource_id=?, user_id=?, username=? where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select securityru0_.id as col_0_0_ from public.gs_security securityru0_ where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nINFO 2024-08-05 02:11:37.973 it.geosolutions.geostore.core.dao.SecurityDAOTest::setUp - ################ Running SecurityDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nINFO 2024-08-05 02:11:37.975 it.geosolutions.geostore.core.dao.SecurityDAOTest::removeAllResource - Removing 70\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:37.980 it.geosolutions.geostore.core.dao.SecurityDAOTest::removeAllCategory - Removing 69\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.984 it.geosolutions.geostore.core.dao.SecurityDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.093 sec\nRunning it.geosolutions.geostore.core.dao.StoredDataDAOTest\nINFO 2024-08-05 02:11:37.986 it.geosolutions.geostore.core.dao.StoredDataDAOTest::setUp - ################ Running StoredDataDAOTest::testPersistData\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:37.992 it.geosolutions.geostore.core.dao.StoredDataDAOTest::setUp - ##### Ending setup for testPersistData ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: insert into public.gs_stored_data (stored_data, resource_id, id) values (?, ?, ?)\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, attribute2_.resource_id as resource7_0_2_, attribute2_.id as id1_0_2_, attribute2_.id as id1_0_3_, attribute2_.attribute_date as attribut2_0_3_, attribute2_.name as name3_0_3_, attribute2_.attribute_number as attribut4_0_3_, attribute2_.resource_id as resource7_0_3_, attribute2_.attribute_text as attribut5_0_3_, attribute2_.attribute_type as attribut6_0_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id inner join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.id=?\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_ from public.gs_stored_data storeddata0_ where storeddata0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: update public.gs_stored_data set stored_data=?, resource_id=? where id=?\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, attribute2_.resource_id as resource7_0_2_, attribute2_.id as id1_0_2_, attribute2_.id as id1_0_3_, attribute2_.attribute_date as attribut2_0_3_, attribute2_.name as name3_0_3_, attribute2_.attribute_number as attribut4_0_3_, attribute2_.resource_id as resource7_0_3_, attribute2_.attribute_text as attribut5_0_3_, attribute2_.attribute_type as attribut6_0_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id inner join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.id=?\nHibernate: select storeddata0_.id as col_0_0_ from public.gs_stored_data storeddata0_ where storeddata0_.id=?\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, attribute2_.resource_id as resource7_0_2_, attribute2_.id as id1_0_2_, attribute2_.id as id1_0_3_, attribute2_.attribute_date as attribut2_0_3_, attribute2_.name as name3_0_3_, attribute2_.attribute_number as attribut4_0_3_, attribute2_.resource_id as resource7_0_3_, attribute2_.attribute_text as attribut5_0_3_, attribute2_.attribute_type as attribut6_0_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id inner join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.id=?\nHibernate: delete from public.gs_stored_data where id=?\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, attribute2_.resource_id as resource7_0_2_, attribute2_.id as id1_0_2_, attribute2_.id as id1_0_3_, attribute2_.attribute_date as attribut2_0_3_, attribute2_.name as name3_0_3_, attribute2_.attribute_number as attribut4_0_3_, attribute2_.resource_id as resource7_0_3_, attribute2_.attribute_text as attribut5_0_3_, attribute2_.attribute_type as attribut6_0_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id inner join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.id=?\nINFO 2024-08-05 02:11:38.008 it.geosolutions.geostore.core.dao.StoredDataDAOTest::setUp - ################ Running StoredDataDAOTest::testBigData\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nINFO 2024-08-05 02:11:38.010 it.geosolutions.geostore.core.dao.StoredDataDAOTest::removeAllResource - Removing 73\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:38.017 it.geosolutions.geostore.core.dao.StoredDataDAOTest::removeAllCategory - Removing 72\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.021 it.geosolutions.geostore.core.dao.StoredDataDAOTest::setUp - ##### Ending setup for testBigData ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nSB is 500000 chars long\nHibernate: insert into public.gs_stored_data (stored_data, resource_id, id) values (?, ?, ?)\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, attribute2_.resource_id as resource7_0_2_, attribute2_.id as id1_0_2_, attribute2_.id as id1_0_3_, attribute2_.attribute_date as attribut2_0_3_, attribute2_.name as name3_0_3_, attribute2_.attribute_number as attribut4_0_3_, attribute2_.resource_id as resource7_0_3_, attribute2_.attribute_text as attribut5_0_3_, attribute2_.attribute_type as attribut6_0_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id inner join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.id=?\nINFO 2024-08-05 02:11:38.044 it.geosolutions.geostore.core.dao.StoredDataDAOTest::setUp - ################ Running StoredDataDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nINFO 2024-08-05 02:11:38.046 it.geosolutions.geostore.core.dao.StoredDataDAOTest::removeAllResource - Removing 75\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_stored_data where id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:38.053 it.geosolutions.geostore.core.dao.StoredDataDAOTest::removeAllCategory - Removing 74\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.056 it.geosolutions.geostore.core.dao.StoredDataDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 sec\nRunning it.geosolutions.geostore.core.dao.ldap.UserGroupDAOTest\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec\nRunning it.geosolutions.geostore.core.dao.UserDAOTest\nINFO 2024-08-05 02:11:38.062 it.geosolutions.geostore.core.dao.UserDAOTest::setUp - ################ Running UserDAOTest::testPersistUser\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.068 it.geosolutions.geostore.core.dao.UserDAOTest::setUp - ##### Ending setup for testPersistUser ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_usergroup (description, enabled, groupName, id) values (?, ?, ?, ?)\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user (enabled, name, user_password, user_role, id) values (?, ?, ?, ?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: insert into public.gs_usergroup_members (user_id, group_id) values (?, ?)\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select groups0_.user_id as user_id1_8_0_, groups0_.group_id as group_id2_8_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_ from public.gs_usergroup_members groups0_ inner join public.gs_usergroup usergroup1_ on groups0_.group_id=usergroup1_.id where groups0_.user_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_user_attribute (name, user_id, string, id) values (?, ?, ?, ?)\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select user0_.id as col_0_0_ from public.gs_user user0_ where user0_.id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select attribute0_.user_id as user_id4_6_0_, attribute0_.id as id1_6_0_, attribute0_.id as id1_6_1_, attribute0_.name as name2_6_1_, attribute0_.user_id as user_id4_6_1_, attribute0_.string as string3_6_1_ from public.gs_user_attribute attribute0_ where attribute0_.user_id=?\nHibernate: select security0_.user_id as user_id8_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, resource2_.id as id1_2_3_, resource2_.category_id as category7_2_3_, resource2_.creation as creation2_2_3_, resource2_.description as descript3_2_3_, resource2_.lastUpdate as lastupda4_2_3_, resource2_.metadata as metadata5_2_3_, resource2_.name as name6_2_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on security0_.resource_id=resource2_.id left outer join public.gs_category category3_ on resource2_.category_id=category3_.id where security0_.user_id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: delete from public.gs_usergroup_members where user_id=?\nHibernate: delete from public.gs_user_attribute where id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: delete from public.gs_user where id=?\nHibernate: select user0_.id as id1_5_0_, user0_.enabled as enabled2_5_0_, user0_.name as name3_5_0_, user0_.user_password as user_pas4_5_0_, user0_.user_role as user_rol5_5_0_, groups1_.user_id as user_id1_8_1_, usergroup2_.id as group_id2_8_1_, usergroup2_.id as id1_7_2_, usergroup2_.description as descript2_7_2_, usergroup2_.enabled as enabled3_7_2_, usergroup2_.groupName as groupnam4_7_2_ from public.gs_user user0_ left outer join public.gs_usergroup_members groups1_ on user0_.id=groups1_.user_id left outer join public.gs_usergroup usergroup2_ on groups1_.group_id=usergroup2_.id where user0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select userattrib0_.id as id1_6_0_, userattrib0_.name as name2_6_0_, userattrib0_.user_id as user_id4_6_0_, userattrib0_.string as string3_6_0_, user1_.id as id1_5_1_, user1_.enabled as enabled2_5_1_, user1_.name as name3_5_1_, user1_.user_password as user_pas4_5_1_, user1_.user_role as user_rol5_5_1_, groups2_.user_id as user_id1_8_2_, usergroup3_.id as group_id2_8_2_, usergroup3_.id as id1_7_3_, usergroup3_.description as descript2_7_3_, usergroup3_.enabled as enabled3_7_3_, usergroup3_.groupName as groupnam4_7_3_ from public.gs_user_attribute userattrib0_ inner join public.gs_user user1_ on userattrib0_.user_id=user1_.id left outer join public.gs_usergroup_members groups2_ on user1_.id=groups2_.user_id left outer join public.gs_usergroup usergroup3_ on groups2_.group_id=usergroup3_.id where userattrib0_.id=?\nINFO 2024-08-05 02:11:38.160 it.geosolutions.geostore.core.dao.UserDAOTest::setUp - ################ Running UserDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nINFO 2024-08-05 02:11:38.162 it.geosolutions.geostore.core.dao.UserDAOTest::removeAllResource - Removing 77\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:38.169 it.geosolutions.geostore.core.dao.UserDAOTest::removeAllCategory - Removing 76\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.173 it.geosolutions.geostore.core.dao.UserDAOTest::removeAllUserGroup - Removing 78\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nINFO 2024-08-05 02:11:38.175 it.geosolutions.geostore.core.dao.UserDAOTest::removeAllUserGroup - Removing 79\nHibernate: select usergroup0_.id as col_0_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select usergroup0_.id as id1_7_0_, usergroup0_.description as descript2_7_0_, usergroup0_.enabled as enabled3_7_0_, usergroup0_.groupName as groupnam4_7_0_ from public.gs_usergroup usergroup0_ where usergroup0_.id=?\nHibernate: select security0_.group_id as group_id6_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, resource1_.id as id1_2_2_, resource1_.category_id as category7_2_2_, resource1_.creation as creation2_2_2_, resource1_.description as descript3_2_2_, resource1_.lastUpdate as lastupda4_2_2_, resource1_.metadata as metadata5_2_2_, resource1_.name as name6_2_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_, user3_.id as id1_5_4_, user3_.enabled as enabled2_5_4_, user3_.name as name3_5_4_, user3_.user_password as user_pas4_5_4_, user3_.user_role as user_rol5_5_4_ from public.gs_security security0_ left outer join public.gs_resource resource1_ on security0_.resource_id=resource1_.id left outer join public.gs_category category2_ on resource1_.category_id=category2_.id left outer join public.gs_user user3_ on security0_.user_id=user3_.id where security0_.group_id=?\nHibernate: delete from public.gs_usergroup where id=?\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.178 it.geosolutions.geostore.core.dao.UserDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.118 sec\nRunning it.geosolutions.geostore.core.dao.ResourceDAOTest\nINFO 2024-08-05 02:11:38.180 it.geosolutions.geostore.core.dao.ResourceDAOTest::setUp - ################ Running ResourceDAOTest::testPersistResource\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.186 it.geosolutions.geostore.core.dao.ResourceDAOTest::setUp - ##### Ending setup for testPersistResource ###----------------------\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_category (name, id) values (?, ?)\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_resource (category_id, creation, description, lastUpdate, metadata, name, id) values (?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select attribute0_.resource_id as resource7_0_0_, attribute0_.id as id1_0_0_, attribute0_.id as id1_0_1_, attribute0_.attribute_date as attribut2_0_1_, attribute0_.name as name3_0_1_, attribute0_.attribute_number as attribut4_0_1_, attribute0_.resource_id as resource7_0_1_, attribute0_.attribute_text as attribut5_0_1_, attribute0_.attribute_type as attribut6_0_1_ from public.gs_attribute attribute0_ where attribute0_.resource_id=?\nHibernate: insert into public.gs_stored_data (stored_data, resource_id, id) values (?, ?, ?)\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: call next value for public.hibernate_sequence\nHibernate: insert into public.gs_security (canRead, canWrite, group_id, groupname, resource_id, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?)\nHibernate: select count(securityru0_.id) as col_0_0_ from public.gs_security securityru0_\nHibernate: select securityru0_.id as id1_3_, securityru0_.canRead as canread2_3_, securityru0_.canWrite as canwrite3_3_, securityru0_.group_id as group_id6_3_, securityru0_.groupname as groupnam4_3_, securityru0_.resource_id as resource7_3_, securityru0_.user_id as user_id8_3_, securityru0_.username as username5_3_ from public.gs_security securityru0_\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: update public.gs_resource set category_id=?, description=?, lastUpdate=?, metadata=?, name=? where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select resource0_.id as col_0_0_ from public.gs_resource resource0_ where resource0_.id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select storeddata0_.id as id1_4_3_, storeddata0_.stored_data as stored_d2_4_3_, storeddata0_.resource_id as resource3_4_3_, resource1_.id as id1_2_0_, resource1_.category_id as category7_2_0_, resource1_.creation as creation2_2_0_, resource1_.description as descript3_2_0_, resource1_.lastUpdate as lastupda4_2_0_, resource1_.metadata as metadata5_2_0_, resource1_.name as name6_2_0_, attribute2_.resource_id as resource7_0_5_, attribute2_.id as id1_0_5_, attribute2_.id as id1_0_1_, attribute2_.attribute_date as attribut2_0_1_, attribute2_.name as name3_0_1_, attribute2_.attribute_number as attribut4_0_1_, attribute2_.resource_id as resource7_0_1_, attribute2_.attribute_text as attribut5_0_1_, attribute2_.attribute_type as attribut6_0_1_, category3_.id as id1_1_2_, category3_.name as name2_1_2_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id left outer join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.resource_id=?\nHibernate: select security0_.resource_id as resource7_3_0_, security0_.id as id1_3_0_, security0_.id as id1_3_1_, security0_.canRead as canread2_3_1_, security0_.canWrite as canwrite3_3_1_, security0_.group_id as group_id6_3_1_, security0_.groupname as groupnam4_3_1_, security0_.resource_id as resource7_3_1_, security0_.user_id as user_id8_3_1_, security0_.username as username5_3_1_, usergroup1_.id as id1_7_2_, usergroup1_.description as descript2_7_2_, usergroup1_.enabled as enabled3_7_2_, usergroup1_.groupName as groupnam4_7_2_, user2_.id as id1_5_3_, user2_.enabled as enabled2_5_3_, user2_.name as name3_5_3_, user2_.user_password as user_pas4_5_3_, user2_.user_role as user_rol5_5_3_ from public.gs_security security0_ left outer join public.gs_usergroup usergroup1_ on security0_.group_id=usergroup1_.id left outer join public.gs_user user2_ on security0_.user_id=user2_.id where security0_.resource_id=?\nHibernate: delete from public.gs_security where id=?\nHibernate: delete from public.gs_stored_data where id=?\nHibernate: delete from public.gs_resource where id=?\nHibernate: select resource0_.id as id1_2_0_, resource0_.category_id as category7_2_0_, resource0_.creation as creation2_2_0_, resource0_.description as descript3_2_0_, resource0_.lastUpdate as lastupda4_2_0_, resource0_.metadata as metadata5_2_0_, resource0_.name as name6_2_0_, attribute1_.resource_id as resource7_0_1_, attribute1_.id as id1_0_1_, attribute1_.id as id1_0_2_, attribute1_.attribute_date as attribut2_0_2_, attribute1_.name as name3_0_2_, attribute1_.attribute_number as attribut4_0_2_, attribute1_.resource_id as resource7_0_2_, attribute1_.attribute_text as attribut5_0_2_, attribute1_.attribute_type as attribut6_0_2_, category2_.id as id1_1_3_, category2_.name as name2_1_3_ from public.gs_resource resource0_ left outer join public.gs_attribute attribute1_ on resource0_.id=attribute1_.resource_id inner join public.gs_category category2_ on resource0_.category_id=category2_.id where resource0_.id=?\nHibernate: select securityru0_.id as id1_3_0_, securityru0_.canRead as canread2_3_0_, securityru0_.canWrite as canwrite3_3_0_, securityru0_.group_id as group_id6_3_0_, securityru0_.groupname as groupnam4_3_0_, securityru0_.resource_id as resource7_3_0_, securityru0_.user_id as user_id8_3_0_, securityru0_.username as username5_3_0_, usergroup1_.id as id1_7_1_, usergroup1_.description as descript2_7_1_, usergroup1_.enabled as enabled3_7_1_, usergroup1_.groupName as groupnam4_7_1_, resource2_.id as id1_2_2_, resource2_.category_id as category7_2_2_, resource2_.creation as creation2_2_2_, resource2_.description as descript3_2_2_, resource2_.lastUpdate as lastupda4_2_2_, resource2_.metadata as metadata5_2_2_, resource2_.name as name6_2_2_, attribute3_.resource_id as resource7_0_3_, attribute3_.id as id1_0_3_, attribute3_.id as id1_0_4_, attribute3_.attribute_date as attribut2_0_4_, attribute3_.name as name3_0_4_, attribute3_.attribute_number as attribut4_0_4_, attribute3_.resource_id as resource7_0_4_, attribute3_.attribute_text as attribut5_0_4_, attribute3_.attribute_type as attribut6_0_4_, category4_.id as id1_1_5_, category4_.name as name2_1_5_, user5_.id as id1_5_6_, user5_.enabled as enabled2_5_6_, user5_.name as name3_5_6_, user5_.user_password as user_pas4_5_6_, user5_.user_role as user_rol5_5_6_, groups6_.user_id as user_id1_8_7_, usergroup7_.id as group_id2_8_7_, usergroup7_.id as id1_7_8_, usergroup7_.description as descript2_7_8_, usergroup7_.enabled as enabled3_7_8_, usergroup7_.groupName as groupnam4_7_8_ from public.gs_security securityru0_ left outer join public.gs_usergroup usergroup1_ on securityru0_.group_id=usergroup1_.id left outer join public.gs_resource resource2_ on securityru0_.resource_id=resource2_.id left outer join public.gs_attribute attribute3_ on resource2_.id=attribute3_.resource_id left outer join public.gs_category category4_ on resource2_.category_id=category4_.id left outer join public.gs_user user5_ on securityru0_.user_id=user5_.id left outer join public.gs_usergroup_members groups6_ on user5_.id=groups6_.user_id left outer join public.gs_usergroup usergroup7_ on groups6_.group_id=usergroup7_.id where securityru0_.id=?\nHibernate: select storeddata0_.id as id1_4_0_, storeddata0_.stored_data as stored_d2_4_0_, storeddata0_.resource_id as resource3_4_0_, resource1_.id as id1_2_1_, resource1_.category_id as category7_2_1_, resource1_.creation as creation2_2_1_, resource1_.description as descript3_2_1_, resource1_.lastUpdate as lastupda4_2_1_, resource1_.metadata as metadata5_2_1_, resource1_.name as name6_2_1_, attribute2_.resource_id as resource7_0_2_, attribute2_.id as id1_0_2_, attribute2_.id as id1_0_3_, attribute2_.attribute_date as attribut2_0_3_, attribute2_.name as name3_0_3_, attribute2_.attribute_number as attribut4_0_3_, attribute2_.resource_id as resource7_0_3_, attribute2_.attribute_text as attribut5_0_3_, attribute2_.attribute_type as attribut6_0_3_, category3_.id as id1_1_4_, category3_.name as name2_1_4_ from public.gs_stored_data storeddata0_ inner join public.gs_resource resource1_ on storeddata0_.resource_id=resource1_.id left outer join public.gs_attribute attribute2_ on resource1_.id=attribute2_.resource_id inner join public.gs_category category3_ on resource1_.category_id=category3_.id where storeddata0_.id=?\nINFO 2024-08-05 02:11:38.211 it.geosolutions.geostore.core.dao.ResourceDAOTest::setUp - ################ Running ResourceDAOTest::testCheckDAOs\nHibernate: select resource0_.id as id1_2_, resource0_.category_id as category7_2_, resource0_.creation as creation2_2_, resource0_.description as descript3_2_, resource0_.lastUpdate as lastupda4_2_, resource0_.metadata as metadata5_2_, resource0_.name as name6_2_ from public.gs_resource resource0_\nHibernate: select count(resource0_.id) as col_0_0_ from public.gs_resource resource0_\nHibernate: select storeddata0_.id as id1_4_, storeddata0_.stored_data as stored_d2_4_, storeddata0_.resource_id as resource3_4_ from public.gs_stored_data storeddata0_\nHibernate: select count(storeddata0_.id) as col_0_0_ from public.gs_stored_data storeddata0_\nHibernate: select attribute0_.id as id1_0_, attribute0_.attribute_date as attribut2_0_, attribute0_.name as name3_0_, attribute0_.attribute_number as attribut4_0_, attribute0_.resource_id as resource7_0_, attribute0_.attribute_text as attribut5_0_, attribute0_.attribute_type as attribut6_0_ from public.gs_attribute attribute0_\nHibernate: select count(attribute0_.id) as col_0_0_ from public.gs_attribute attribute0_\nHibernate: select userattrib0_.id as id1_6_, userattrib0_.name as name2_6_, userattrib0_.user_id as user_id4_6_, userattrib0_.string as string3_6_ from public.gs_user_attribute userattrib0_\nHibernate: select count(userattrib0_.id) as col_0_0_ from public.gs_user_attribute userattrib0_\nHibernate: select category0_.id as id1_1_, category0_.name as name2_1_ from public.gs_category category0_\nINFO 2024-08-05 02:11:38.216 it.geosolutions.geostore.core.dao.ResourceDAOTest::removeAllCategory - Removing 84\nHibernate: select category0_.id as col_0_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select category0_.id as id1_1_0_, category0_.name as name2_1_0_ from public.gs_category category0_ where category0_.id=?\nHibernate: select resource0_.category_id as category7_2_0_, resource0_.id as id1_2_0_, resource0_.id as id1_2_1_, resource0_.category_id as category7_2_1_, resource0_.creation as creation2_2_1_, resource0_.description as descript3_2_1_, resource0_.lastUpdate as lastupda4_2_1_, resource0_.metadata as metadata5_2_1_, resource0_.name as name6_2_1_ from public.gs_resource resource0_ where resource0_.category_id=?\nHibernate: delete from public.gs_category where id=?\nHibernate: select count(category0_.id) as col_0_0_ from public.gs_category category0_\nHibernate: select user0_.id as id1_5_, user0_.enabled as enabled2_5_, user0_.name as name3_5_, user0_.user_password as user_pas4_5_, user0_.user_role as user_rol5_5_ from public.gs_user user0_\nHibernate: select count(user0_.id) as col_0_0_ from public.gs_user user0_\nHibernate: select usergroup0_.id as id1_7_, usergroup0_.description as descript2_7_, usergroup0_.enabled as enabled3_7_, usergroup0_.groupName as groupnam4_7_ from public.gs_usergroup usergroup0_\nHibernate: select count(usergroup0_.id) as col_0_0_ from public.gs_usergroup usergroup0_\nINFO 2024-08-05 02:11:38.220 it.geosolutions.geostore.core.dao.ResourceDAOTest::setUp - ##### Ending setup for testCheckDAOs ###----------------------\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec\nResults :\nTests run: 33, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] -----------< it.geosolutions.geostore:geostore-services-api >-----------\n[INFO] Building GeoStore - Core - Services API 1.9-SNAPSHOT [7/18]\n[INFO] from src/core/services-api/pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- clean:3.2.0:clean (default-clean) @ geostore-services-api ---\n[INFO]\n[INFO] --- resources:3.0.1:resources (default-resources) @ geostore-services-api ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /mnt/repo/src/core/services-api/src/main/resources\n[INFO]\n[INFO] --- compiler:3.5.1:compile (default-compile) @ geostore-services-api ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 27 source files to /mnt/repo/src/core/services-api/target/classes\n[INFO]\n[INFO] --- resources:3.0.1:testResources (default-testResources) @ geostore-services-api ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /mnt/repo/src/core/services-api/src/test/resources\n[INFO]\n[INFO] --- compiler:3.5.1:testCompile (default-testCompile) @ geostore-services-api ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 2 source files to /mnt/repo/src/core/services-api/target/test-classes\n[INFO]\n[INFO] --- surefire:2.4.2:test (default-test) @ geostore-services-api ---\n[INFO] Surefire report directory: /mnt/repo/src/core/services-api/target/surefire-reports\n-------------------------------------------------------\nT E S T S\n-------------------------------------------------------\nRunning it.geosolutions.geostore.services.dto.search.SearchFilterTest\nlog4j:WARN No appenders could be found for logger (it.geosolutions.geostore.services.dto.search.SearchFilterTest).\nlog4j:WARN Please initialize the log4j system properly.\nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\nTests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.266 sec <<< FAILURE!\nRunning it.geosolutions.geostore.services.dto.search.UserSessionTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec\nResults :\nTests in error:\ntestXMLParsing(it.geosolutions.geostore.services.dto.search.SearchFilterTest)\ntestAndMarshallUnmarshall(it.geosolutions.geostore.services.dto.search.SearchFilterTest)\ntestFieldMarshallUnmarshall(it.geosolutions.geostore.services.dto.search.SearchFilterTest)\nTests run: 4, Failures: 0, Errors: 3, Skipped: 0\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for Master GeoStore POM 1.9-SNAPSHOT:\n[INFO]\n[INFO] Master GeoStore POM ................................ SUCCESS [ 0.521 s]\n[INFO] GeoStore - 0 Server Root ........................... SUCCESS [ 0.049 s]\n[INFO] GeoStore - Core .................................... SUCCESS [ 0.003 s]\n[INFO] GeoStore - Core - Model ............................ SUCCESS [ 10.891 s]\n[INFO] GeoStore - Core - Security ......................... SUCCESS [ 8.015 s]\n[INFO] GeoStore - Core - Persistence ...................... SUCCESS [ 11.722 s]\n[INFO] GeoStore - Core - Services API ..................... FAILURE [ 3.853 s]\n[INFO] GeoStore - Core - Services implementation .......... SKIPPED\n[INFO] GeoStore - Modules ................................. SKIPPED\n[INFO] GeoStore - Modules - REST root ..................... SKIPPED\n[INFO] GeoStore - Modules - REST API ...................... SKIPPED\n[INFO] GeoStore - Modules - REST services ................. SKIPPED\n[INFO] GeoStore - Modules - REST client ................... SKIPPED\n[INFO] GeoStore - Modules - REST EXTJS services ........... SKIPPED\n[INFO] GeoStore - Modules - REST services test ............ SKIPPED\n[INFO] GeoStore - Modules - REST auditing ................. SKIPPED\n[INFO] GeoStore - Web ..................................... SKIPPED\n[INFO] GeoStore - Webapp .................................. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 36.696 s\n[INFO] Finished at: 2024-08-05T02:11:42Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.4.2:test (default-test) on project geostore-services-api: There are test failures.\n[ERROR]\n[ERROR] Please refer to /mnt/repo/src/core/services-api/target/surefire-reports for the individual test results.\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR] mvn <args> -rf :geostore-services-api",
            "span_id": 1026207499700727085
        }
    ],
    "read_file": [
        {
            "input": "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java",
            "output": "package it.geosolutions.geostore.core.security.password;\n\n/*\n *  Copyright (C) 2007 - 2011 GeoSolutions S.A.S.\n *  http://www.geo-solutions.it\n *\n *  GPLv3 + Classpath exception\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.scramble;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toChars;\n\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.Base64;\nimport org.acegisecurity.providers.encoding.PasswordEncoder;\nimport org.jasypt.encryption.pbe.StandardPBEByteEncryptor;\nimport org.jasypt.encryption.pbe.StandardPBEStringEncryptor;\nimport org.jasypt.spring.security.PBEPasswordEncoder;\n/**\n * Password Encoder using symmetric encryption\n * \n * The salt parameter is not used, this implementation computes a random salt as\n * default.\n * \n * {@link #isPasswordValid(String, String, Object)}\n * {@link #encodePassword(String, Object)}\n * \n * @author Lorenzo Natali\n * \n */\npublic class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder {\n\n\tStandardPBEStringEncryptor stringEncrypter;\n\tStandardPBEByteEncryptor byteEncrypter;\n\n\tprivate String providerName, algorithm;\n\tprivate String keyAliasInKeyStore = KeyStoreProviderImpl.CONFIGPASSWORDKEY;\n\n\tprivate KeyStoreProvider keystoreProvider;\n\n\tpublic KeyStoreProvider getKeystoreProvider() {\n\t\treturn keystoreProvider;\n\t}\n\n\tpublic void setKeystoreProvider(KeyStoreProvider keystoreProvider) {\n\t\tthis.keystoreProvider = keystoreProvider;\n\t}\n\n\tpublic void setKeyAliasInKeyStore(String keyAliasInKeyStore) {\n\t\tthis.keyAliasInKeyStore = keyAliasInKeyStore;\n\t}\n\n\tpublic String getProviderName() {\n\t\treturn providerName;\n\t}\n\n\tpublic void setProviderName(String providerName) {\n\t\tthis.providerName = providerName;\n\t}\n\n\tpublic String getAlgorithm() {\n\t\treturn algorithm;\n\t}\n\n\tpublic void setAlgorithm(String algorithm) {\n\t\tthis.algorithm = algorithm;\n\t}\n\n\tpublic String getKeyAliasInKeyStore() {\n\t\treturn keyAliasInKeyStore;\n\t}\n\n\t@Override\n\tprotected PasswordEncoder createStringEncoder() {\n\t\tbyte[] password = lookupPasswordFromKeyStore();\n\n\t\tchar[] chars = toChars(password);\n\t\ttry {\n\t\t\tstringEncrypter = new StandardPBEStringEncryptor();\n\t\t\tstringEncrypter.setPasswordCharArray(chars);\n\n\t\t\tif (getProviderName() != null && !getProviderName().isEmpty()) {\n\t\t\t\tstringEncrypter.setProviderName(getProviderName());\n\t\t\t}\n\t\t\tstringEncrypter.setAlgorithm(getAlgorithm());\n\n\t\t\tPBEPasswordEncoder encoder = new PBEPasswordEncoder();\n\t\t\tencoder.setPbeStringEncryptor(stringEncrypter);\n\n\t\t\treturn encoder;\n\t\t} finally {\n\t\t\tscramble(password);\n\t\t\tscramble(chars);\n\t\t}\n\t}\n\n\t@Override\n\tprotected CharArrayPasswordEncoder createCharEncoder() {\n\t\tbyte[] password = lookupPasswordFromKeyStore();\n\t\tchar[] chars = toChars(password);\n\n\t\tbyteEncrypter = new StandardPBEByteEncryptor();\n\t\tbyteEncrypter.setPasswordCharArray(chars);\n\n\t\tif (getProviderName() != null && !getProviderName().isEmpty()) {\n\t\t\tbyteEncrypter.setProviderName(getProviderName());\n\t\t}\n\t\tbyteEncrypter.setAlgorithm(getAlgorithm());\n\n\t\treturn new CharArrayPasswordEncoder() {\n\t\t\t@Override\n\t\t\tpublic boolean isPasswordValid(String encPass, char[] rawPass,\n\t\t\t\t\tObject salt) {\n\t\t\t\tbyte[] decoded = Base64.getDecoder().decode(encPass.getBytes());\n\t\t\t\tbyte[] decrypted = byteEncrypter.decrypt(decoded);\n\n\t\t\t\tchar[] chars = toChars(decrypted);\n\t\t\t\ttry {\n\t\t\t\t\treturn Arrays.equals(chars, rawPass);\n\t\t\t\t} finally {\n\t\t\t\t\tscramble(decrypted);\n\t\t\t\t\tscramble(chars);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic String encodePassword(char[] rawPass, Object salt) {\n\t\t\t\tbyte[] bytes = toBytes(rawPass);\n\t\t\t\ttry {\n\t\t\t\t\treturn new String(Base64.getEncoder().encode(byteEncrypter\n\t\t\t\t\t\t\t.encrypt(bytes)));\n\t\t\t\t} finally {\n\t\t\t\t\tscramble(bytes);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tbyte[] lookupPasswordFromKeyStore() {\n\t\ttry {\n\t\t\tif (!keystoreProvider.containsAlias(getKeyAliasInKeyStore())) {\n\t\t\t\tthrow new RuntimeException(\"Keystore: \"\n\t\t\t\t\t\t+ keystoreProvider.getFile() + \" does not\"\n\t\t\t\t\t\t+ \" contain alias: \" + getKeyAliasInKeyStore());\n\t\t\t}\n\t\t\treturn keystoreProvider.getSecretKey(getKeyAliasInKeyStore())\n\t\t\t\t\t.getEncoded();\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(\"Cannot find alias: \"\n\t\t\t\t\t+ getKeyAliasInKeyStore() + \" in \"\n\t\t\t\t\t+ keystoreProvider.getFile().getAbsolutePath());\n\t\t}\n\t}\n\n\t@Override\n\tpublic PasswordEncodingType getEncodingType() {\n\t\treturn PasswordEncodingType.ENCRYPT;\n\t}\n\n\tpublic String decode(String encPass) throws UnsupportedOperationException {\n\t\tif (stringEncrypter == null) {\n\t\t\t// not initialized\n\t\t\tgetStringEncoder();\n\t\t}\n\n\t\treturn stringEncrypter.decrypt(removePrefix(encPass));\n\t}\n\n\t@Override\n\tpublic char[] decodeToCharArray(String encPass)\n\t\t\tthrows UnsupportedOperationException {\n\t\tif (byteEncrypter == null) {\n\t\t\t// not initialized\n\t\t\tgetCharEncoder();\n\t\t}\n\n\t\tbyte[] decoded = Base64.getDecoder().decode(removePrefix(encPass).getBytes());\n\t\tbyte[] bytes = byteEncrypter.decrypt(decoded);\n\t\ttry {\n\t\t\treturn toChars(bytes);\n\t\t} finally {\n\t\t\tscramble(bytes);\n\t\t}\n\t}\n\t\n}\n",
            "error": "",
            "span_id": 12513400457077282776
        },
        {
            "input": "src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java",
            "output": "/*\n *  Copyright (C) 2007 - 2011 GeoSolutions S.A.S.\n *  http://www.geo-solutions.it\n * \n *  GPLv3 + Classpath exception\n * \n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n * \n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n * \n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\npackage it.geosolutions.geostore.core.security.password;\n\nimport org.apache.commons.codec.binary.Base64;\nimport org.jasypt.digest.StandardByteDigester;\nimport org.jasypt.spring.security.PasswordEncoder;\nimport org.jasypt.util.password.StrongPasswordEncryptor;\nimport static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;\n\n/**\n * This Encoder provide encription and check of password using a digest\n * @author Lorenzo Natali (lorenzo.natali at geo-solutions.it)\n *\n */\npublic class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncoder{\n\t\n\n\t\t/**\n\t\t * The digest is not reversible\n\t\t */\n\t    public GeoStoreDigestPasswordEncoder() {\n\t        setReversible(false);\n\t    }\n\n\t    @Override\n\t    protected PasswordEncoder createStringEncoder() {\n\t        PasswordEncoder encoder = new PasswordEncoder();\n\t        encoder.setPasswordEncryptor(new StrongPasswordEncryptor());\n\t        return encoder;\n\t    }\n\n\t    @Override\n\t    protected CharArrayPasswordEncoder createCharEncoder() {\n\t        return new CharArrayPasswordEncoder() {\n\t            StandardByteDigester digester = new StandardByteDigester();\n\t            {\n\t                digester.setAlgorithm(\"SHA-256\");\n\t                digester.setIterations(100000);\n\t                digester.setSaltSizeBytes(16);\n\t                digester.initialize();\n\t            }\n\t            \n\t            @Override\n\t            public String encodePassword(char[] rawPass, Object salt) {\n\t                return new String(Base64.encodeBase64(digester.digest(toBytes(rawPass))));\n\t            }\n\t            @Override\n\t            public boolean isPasswordValid(String encPass, char[] rawPass, Object salt) {\n\t                return digester.matches(toBytes(rawPass), Base64.decodeBase64(encPass.getBytes())); \n\t            }\n\t        };\n\t    }\n\n\t    @Override\n\t    public PasswordEncodingType getEncodingType() {\n\t        return PasswordEncodingType.DIGEST;\n\t    }\n\t\n}\n",
            "error": "",
            "span_id": 7651025448277548499
        },
        {
            "input": "src/core/model/pom.xml",
            "output": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n Copyright (C) 2007 - 2010 GeoSolutions S.A.S.\n http://www.geo-solutions.it\n\n GPLv3 + Classpath exception\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program.  If not, see <http://www.gnu.org/licenses />.\n -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>it.geosolutions.geostore</groupId>\n        <artifactId>geostore-core</artifactId>\n        <version>1.9-SNAPSHOT</version>\n    </parent>\n\n    <artifactId>geostore-model</artifactId>\n    <packaging>jar</packaging>\n    <name>GeoStore - Core - Model</name>\n\n    <dependencies>\n\n  \t<!-- JAXB -->\n        <dependency>\n            <groupId>javax.xml.bind</groupId>\n            <artifactId>jaxb-api</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.sun.xml.bind</groupId>\n            <artifactId>jaxb-impl</artifactId>\n        </dependency>\n\n        \n\t\t<!-- HIBERNATE-SPATIAL -->\n        <dependency>\n            <groupId>org.hibernatespatial</groupId>\n            <artifactId>hibernate-spatial-postgis</artifactId>\n            <scope>provided</scope> <!-- the dao module should import them for runtime -->\n            <exclusions>\n                <exclusion>\n                    <groupId>org.slf4j</groupId>\n                    <artifactId>slf4j-api</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n\t\t  \t<!-- CGLIB -->\n        <dependency>\n            <groupId>asm</groupId>\n            <artifactId>asm</artifactId>\n            <scope>provided</scope> <!-- the dao module should import them for runtime -->\n        </dependency>\n        <dependency>\n            <groupId>cglib</groupId>\n            <artifactId>cglib-nodep</artifactId>\n            <scope>provided</scope> <!-- the dao module should import them for runtime -->\n        </dependency>\n\n   \t<!-- Apache Commons -->\n        <dependency>\n            <groupId>commons-beanutils</groupId>\n            <artifactId>commons-beanutils</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>jdom</groupId>\n            <artifactId>jdom</artifactId>\n        </dependency>\n\n\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n\n        <plugins>\n            <!-- Attach sources ============================================ -->\n            <plugin>\n                <inherited>true</inherited>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <configuration>\n                    <attach>true</attach>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>attach-sources</id>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n        </plugins>\n    </build>\n\n</project>\n",
            "error": "",
            "span_id": 649825556406838443
        }
    ],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}