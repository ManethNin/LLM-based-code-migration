diff --git a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java
index 1157916..b87cd1f 100644
--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java
+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStoreDigestPasswordEncoder.java
@@ -21,7 +21,6 @@ package it.geosolutions.geostore.core.security.password;
 
 import org.apache.commons.codec.binary.Base64;
 import org.jasypt.digest.StandardByteDigester;
-import org.jasypt.spring.security.PasswordEncoder;
 import org.jasypt.util.password.StrongPasswordEncryptor;
 import static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;
 
@@ -57,6 +56,7 @@ public class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncod
 	                digester.setSaltSizeBytes(16);
 	                digester.initialize();
 	            }
+
 	            
 	            @Override
 	            public String encodePassword(char[] rawPass, Object salt) {
@@ -73,5 +73,6 @@ public class GeoStoreDigestPasswordEncoder extends AbstractGeoStorePasswordEncod
 	    public PasswordEncodingType getEncodingType() {
 	        return PasswordEncodingType.DIGEST;
 	    }
+
 	
 }
diff --git a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java
index cba1b70..2571ac3 100644
--- a/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java
+++ b/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java
@@ -30,7 +30,50 @@ import java.util.Base64;
 import org.acegisecurity.providers.encoding.PasswordEncoder;
 import org.jasypt.encryption.pbe.StandardPBEByteEncryptor;
 import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;
-import org.jasypt.spring.security.PBEPasswordEncoder;
+import org.jasypt.util.password.StrongPasswordEncryptor;
+import org.jasypt.util.password.StrongPasswordEncryptor;
+import org.jasypt.util.password.StrongPasswordEncryptor;
+import org.jasypt.util.password.StrongPasswordEncryptor;
+import org.jasypt.util.password.StrongPasswordEncryptor;
+import org.jasypt.util.password.StrongPasswordEncryptor;
+import org.jasypt.util.password.StrongPasswordEncryptor;
+import org.jasypt.util.password.StrongPasswordEncryptor;
+import static it.geosolutions.geostore.core.security.password.SecurityUtils.toChars;
+
+import java.io.IOException;
+import java.util.Arrays;
+import java.util.Base64;
+import org.acegisecurity.providers.encoding.PasswordEncoder;
+import org.jasypt.encryption.pbe.StandardPBEByteEncryptor;
+import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;
+import org.jasypt.util.password.StrongPasswordEncryptor;
+import static it.geosolutions.geostore.core.security.password.SecurityUtils.toChars;
+
+import java.io.IOException;
+import java.util.Arrays;
+import java.util.Base64;
+import org.acegisecurity.providers.encoding.PasswordEncoder;
+import org.jasypt.encryption.pbe.StandardPBEByteEncryptor;
+import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;
+import org.jasypt.util.password.StrongPasswordEncryptor;
+import static it.geosolutions.geostore.core.security.password.SecurityUtils.toChars;
+
+import java.io.IOException;
+import java.util.Arrays;
+import java.util.Base64;
+import org.acegisecurity.providers.encoding.PasswordEncoder;
+import org.jasypt.encryption.pbe.StandardPBEByteEncryptor;
+import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;
+import org.jasypt.util.password.StrongPasswordEncryptor;
+import static it.geosolutions.geostore.core.security.password.SecurityUtils.toChars;
+
+import java.io.IOException;
+import java.util.Arrays;
+import java.util.Base64;
+import org.acegisecurity.providers.encoding.PasswordEncoder;
+import org.jasypt.encryption.pbe.StandardPBEByteEncryptor;
+import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;
+import org.jasypt.util.password.StrongPasswordEncryptor;
 /**
  * Password Encoder using symmetric encryption
  * 
@@ -99,8 +142,30 @@ public class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder
 			}
 			stringEncrypter.setAlgorithm(getAlgorithm());
 
-			PBEPasswordEncoder encoder = new PBEPasswordEncoder();
-			encoder.setPbeStringEncryptor(stringEncrypter);
+			PasswordEncoder encoder = new PasswordEncoder();
+			encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
+			PasswordEncoder encoder = new PasswordEncoder();
+			encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
+			PasswordEncoder encoder = new PasswordEncoder();
+			encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
+			PasswordEncoder encoder = new PasswordEncoder();
+			encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
+			PasswordEncoder encoder = new PasswordEncoder();
+			encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
+			PasswordEncoder encoder = new PasswordEncoder();
+			encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
+			PasswordEncoder encoder = new PasswordEncoder();
+			encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
+			PasswordEncoder encoder = new PasswordEncoder();
+			encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
+			PasswordEncoder encoder = new PasswordEncoder();
+			encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
+			PasswordEncoder encoder = new PasswordEncoder();
+			encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
+			PasswordEncoder encoder = new PasswordEncoder();
+			encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
+			PasswordEncoder encoder = new PasswordEncoder();
+			encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
 
 			return encoder;
 		} finally {
@@ -197,5 +262,6 @@ public class GeoStorePBEPasswordEncoder extends AbstractGeoStorePasswordEncoder
 			scramble(bytes);
 		}
 	}
+
 	
 }