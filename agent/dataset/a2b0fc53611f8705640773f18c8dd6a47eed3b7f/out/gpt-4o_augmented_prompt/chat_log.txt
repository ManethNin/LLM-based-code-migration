================================ System Message ================================

Act as an expert Java software developer.
The program has issues after a version upgrade of a dependency.
Try using minimal changes to the code to fix the issues. 
Do not explain your actions or ask questions, just provide diffs that always adhere to the rules.
When you think you are done, reply with the diff that fixes the issues, after that a final verification step will happen and the conversation will be ended if it was successful. If not you get the error back.

# File editing rules:
Return edits similar to unified diffs that `diff -U0` would produce.
The diff has to be in a markdown code block, like this: ```diff ```.

Make sure you include the first 2 lines with the file paths.
Don't include timestamps with the file paths.

Start each hunk of changes with a `@@ ... @@` line.
Don't include line numbers like `diff -U0` does.
The user's patch tool doesn't need them.

The user's patch tool needs CORRECT patches that apply cleanly against the current contents of the file!
Think carefully and make sure you include and mark all lines that need to be removed or changed as `-` lines.
Make sure you mark all new or modified lines with `+`.
Don't leave out any lines or the diff patch won't apply correctly.
Dont add in new comments or change existing comments.
Make sure the diff is minimal and only includes the changes needed to fix the issue plus at least one context line so the tool can apply the diff correctly.

Indentation matters in the diffs!

Start a new hunk for each section of the file that needs changes.
Dont include unnescessary context, but include at least one line of it.
If no context is included, the tool will try to apply the changes at the end of the line.

Only output hunks that specify changes with `+` or `-` lines.
Skip any hunks that are entirely unchanging ` ` lines.

Output hunks in whatever order makes the most sense.
Hunks don't need to be in any particular order.

When editing a function, method, loop, etc use a hunk to replace the *entire* code block.
Delete the entire existing version with `-` lines and then add a new, updated version with `+` lines.
This will help you generate correct code and correct diffs.

To make a new file, show a diff from `--- /dev/null` to `+++ path/to/new/file.ext`.


================================ Human Message =================================


Updated Dependency Details: org.flywaydb:flyway-core 3.2.1 -> 9.19.4

Initial Error: [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:compile (default-compile) on project nem-infrastructure-server: Compilation failure: Compilation failure:
[ERROR] nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[108,57] constructor Flyway in class org.flywaydb.core.Flyway cannot be applied to given types;
[ERROR]   required: org.flywaydb.core.api.configuration.Configuration
[ERROR]   found: no arguments
[ERROR]   reason: actual and formal argument lists differ in length
[ERROR] nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[109,23] cannot find symbol
[ERROR]   symbol:   method setDataSource(javax.sql.DataSource)
[ERROR]   location: variable flyway of type org.flywaydb.core.Flyway
[ERROR] nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[110,23] cannot find symbol
[ERROR]   symbol:   method setClassLoader(java.lang.ClassLoader)
[ERROR]   location: variable flyway of type org.flywaydb.core.Flyway
[ERROR] nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[111,23] cannot find symbol
[ERROR]   symbol:   method setLocations(java.lang.String)
[ERROR]   location: variable flyway of type org.flywaydb.core.Flyway
[ERROR] nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[112,23] cannot find symbol
[ERROR]   symbol:   method setValidateOnMigrate(java.lang.Boolean)
[ERROR]   location: variable flyway of type org.flywaydb.core.Flyway
[ERROR] -> [Help 1]

Revapi/japicmp API Changes, which describe changes in the APIs used by this project: {"japicmpResult": {"getProperty": ["METHOD_RETURN_TYPE_CHANGED", "CLASS_GENERIC_TEMPLATE_CHANGED", "CONSTRUCTOR_REMOVED", "METHOD_REMOVED", "INTERFACE_ADDED", "METHOD_ADDED_TO_PUBLIC_CLASS", "ANNOTATION_DEPRECATED_ADDED"], "valueOf": ["METHOD_RETURN_TYPE_CHANGED", "CLASS_GENERIC_TEMPLATE_CHANGED", "CONSTRUCTOR_REMOVED", "METHOD_REMOVED", "INTERFACE_ADDED", "METHOD_ADDED_TO_PUBLIC_CLASS", "ANNOTATION_DEPRECATED_ADDED"], "setLocations": ["METHOD_RETURN_TYPE_CHANGED", "CLASS_GENERIC_TEMPLATE_CHANGED", "CONSTRUCTOR_REMOVED", "METHOD_REMOVED", "INTERFACE_ADDED", "METHOD_ADDED_TO_PUBLIC_CLASS", "ANNOTATION_DEPRECATED_ADDED"], "org.flywaydb.core.Flyway": ["METHOD_RETURN_TYPE_CHANGED", "CLASS_GENERIC_TEMPLATE_CHANGED", "CONSTRUCTOR_REMOVED", "METHOD_REMOVED", "INTERFACE_ADDED", "METHOD_ADDED_TO_PUBLIC_CLASS", "ANNOTATION_DEPRECATED_ADDED"], "setDataSource": ["METHOD_RETURN_TYPE_CHANGED", "CLASS_GENERIC_TEMPLATE_CHANGED", "CONSTRUCTOR_REMOVED", "METHOD_REMOVED", "INTERFACE_ADDED", "METHOD_ADDED_TO_PUBLIC_CLASS", "ANNOTATION_DEPRECATED_ADDED"], "getClassLoader": ["METHOD_RETURN_TYPE_CHANGED", "CLASS_GENERIC_TEMPLATE_CHANGED", "CONSTRUCTOR_REMOVED", "METHOD_REMOVED", "INTERFACE_ADDED", "METHOD_ADDED_TO_PUBLIC_CLASS", "ANNOTATION_DEPRECATED_ADDED"], "dataSource": ["METHOD_RETURN_TYPE_CHANGED", "CLASS_GENERIC_TEMPLATE_CHANGED", "CONSTRUCTOR_REMOVED", "METHOD_REMOVED", "INTERFACE_ADDED", "METHOD_ADDED_TO_PUBLIC_CLASS", "ANNOTATION_DEPRECATED_ADDED"], "setClassLoader": ["METHOD_RETURN_TYPE_CHANGED", "CLASS_GENERIC_TEMPLATE_CHANGED", "CONSTRUCTOR_REMOVED", "METHOD_REMOVED", "INTERFACE_ADDED", "METHOD_ADDED_TO_PUBLIC_CLASS", "ANNOTATION_DEPRECATED_ADDED"], "setValidateOnMigrate": ["METHOD_RETURN_TYPE_CHANGED", "CLASS_GENERIC_TEMPLATE_CHANGED", "CONSTRUCTOR_REMOVED", "METHOD_REMOVED", "INTERFACE_ADDED", "METHOD_ADDED_TO_PUBLIC_CLASS", "ANNOTATION_DEPRECATED_ADDED"]}, "elementLines": {"getProperty": "[ERROR] /nem/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[112,23] cannot find symbol", "valueOf": "[ERROR] /nem/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[112,23] cannot find symbol", "setLocations": "[ERROR] /nem/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[111,23] cannot find symbol", "org.flywaydb.core.Flyway": "[ERROR] /nem/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[108,57] constructor Flyway in class org.flywaydb.core.Flyway cannot be applied to given types;", "setDataSource": "[ERROR] /nem/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[109,23] cannot find symbol", "getClassLoader": "[ERROR] /nem/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[110,23] cannot find symbol", "dataSource": "[ERROR] /nem/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[109,23] cannot find symbol", "setClassLoader": "[ERROR] /nem/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[110,23] cannot find symbol", "setValidateOnMigrate": "[ERROR] /nem/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java:[112,23] cannot find symbol"}, "revapiResult": {"getProperty": ["java.method.returnTypeChanged", "java.method.nowStatic", "java.method.removed", "java.method.numberOfParametersChanged"], "valueOf": ["java.method.returnTypeChanged", "java.method.nowStatic", "java.method.removed", "java.method.numberOfParametersChanged"], "setLocations": ["java.method.returnTypeChanged", "java.method.nowStatic", "java.method.removed", "java.method.numberOfParametersChanged"], "org.flywaydb.core.Flyway": ["java.method.returnTypeChanged", "java.method.nowStatic", "java.method.removed", "java.method.numberOfParametersChanged"], "setDataSource": ["java.method.returnTypeChanged", "java.method.nowStatic", "java.method.removed", "java.method.numberOfParametersChanged"], "getClassLoader": ["java.method.returnTypeChanged", "java.method.nowStatic", "java.method.removed", "java.method.numberOfParametersChanged"], "dataSource": ["java.method.returnTypeChanged", "java.method.nowStatic", "java.method.removed", "java.method.numberOfParametersChanged"], "setClassLoader": ["java.method.returnTypeChanged", "java.method.nowStatic", "java.method.removed", "java.method.numberOfParametersChanged"], "setValidateOnMigrate": ["java.method.returnTypeChanged", "java.method.nowStatic", "java.method.removed", "java.method.numberOfParametersChanged"]}, "allPotentialBreakingElements": ["getClassLoader()", "getProperty(java.lang.String)", "valueOf(java.lang.String)", "setLocations(java.lang.String)", "dataSource()", "org.flywaydb.core.Flyway()", "setValidateOnMigrate(java.lang.Boolean)", "setClassLoader(java.lang.ClassLoader)", "setDataSource(javax.sql.DataSource)"], "elementPatterns": {"getProperty": "cannot find symbol", "valueOf": "cannot find symbol", "setLocations": "cannot find symbol", "org.flywaydb.core.Flyway": "constructor in class cannot be applied to given types", "setDataSource": "cannot find symbol", "getClassLoader": "cannot find symbol", "dataSource": "cannot find symbol", "setClassLoader": "cannot find symbol", "setValidateOnMigrate": "cannot find symbol"}, "project": "nem"}


================================== Ai Message ==================================
Tool Calls:
  read_file (call_l3hmDwkbxhBoqvCOgrRE0Mks)
 Call ID: call_l3hmDwkbxhBoqvCOgrRE0Mks
  Args:
    file_path: nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java

================================= Tool Message =================================
Name: read_file

package org.nem.specific.deploy.appconfig;

import org.flywaydb.core.Flyway;
import org.hibernate.SessionFactory;
import org.nem.core.model.*;
import org.nem.core.model.primitive.*;
import org.nem.core.node.NodeFeature;
import org.nem.core.time.TimeProvider;
import org.nem.deploy.*;
import org.nem.nis.*;
import org.nem.nis.audit.AuditCollection;
import org.nem.nis.boot.*;
import org.nem.nis.cache.*;
import org.nem.nis.connect.*;
import org.nem.nis.controller.interceptors.LocalHostDetector;
import org.nem.nis.dao.*;
import org.nem.nis.harvesting.*;
import org.nem.nis.mappers.*;
import org.nem.nis.pox.ImportanceCalculator;
import org.nem.nis.pox.poi.*;
import org.nem.nis.pox.pos.PosImportanceCalculator;
import org.nem.nis.secret.*;
import org.nem.nis.service.BlockChainLastBlockLayer;
import org.nem.nis.state.*;
import org.nem.nis.sync.*;
import org.nem.nis.validators.*;
import org.nem.peer.connect.CommunicationMode;
import org.nem.peer.node.*;
import org.nem.peer.services.ChainServices;
import org.nem.peer.trust.*;
import org.nem.specific.deploy.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.*;
import org.springframework.jdbc.datasource.DriverManagerDataSource;
import org.springframework.orm.hibernate4.HibernateTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import javax.sql.DataSource;
import java.io.IOException;
import java.util.*;
import java.util.function.*;

@Configuration
@ComponentScan(basePackages = {
		"org.nem.nis"
}, excludeFilters = {
		@ComponentScan.Filter(type = FilterType.ANNOTATION, value = org.springframework.stereotype.Controller.class),
		@ComponentScan.Filter(type = FilterType.REGEX, pattern = {
				"org.nem.nis.websocket.*"
		})
})
@EnableTransactionManagement
public class NisAppConfig {

	@Autowired
	private AccountDao accountDao;

	@Autowired
	private BlockDao blockDao;

	@Autowired
	private BlockChainLastBlockLayer blockChainLastBlockLayer;

	@Autowired
	@SuppressWarnings("unused")
	private TransferDao transferDao;

	private static final int MAX_AUDIT_HISTORY_SIZE = 50;

	@Bean
	protected AuditCollection outgoingAudits() {
		return this.createAuditCollection();
	}

	@Bean
	protected AuditCollection incomingAudits() {
		return this.createAuditCollection();
	}

	private AuditCollection createAuditCollection() {
		return new AuditCollection(MAX_AUDIT_HISTORY_SIZE, this.timeProvider());
	}

	@Bean
	public DataSource dataSource() throws IOException {
		final NisConfiguration configuration = this.nisConfiguration();
		final String nemFolder = configuration.getNemFolder();
		final Properties prop = new Properties();
		prop.load(NisAppConfig.class.getClassLoader().getResourceAsStream("db.properties"));

		// replace url parameters with values from configuration
		final String jdbcUrl = prop.getProperty("jdbc.url").replace("${nem.folder}", nemFolder).replace("${nem.network}",
				configuration.getNetworkName());

		final DriverManagerDataSource dataSource = new DriverManagerDataSource();
		dataSource.setDriverClassName(prop.getProperty("jdbc.driverClassName"));
		dataSource.setUrl(jdbcUrl);
		dataSource.setUsername(prop.getProperty("jdbc.username"));
		dataSource.setPassword(prop.getProperty("jdbc.password"));
		return dataSource;
	}

	@Bean(initMethod = "migrate")
	public Flyway flyway() throws IOException {
		final Properties prop = new Properties();
		prop.load(NisAppConfig.class.getClassLoader().getResourceAsStream("db.properties"));

		final org.flywaydb.core.Flyway flyway = new Flyway();
		flyway.setDataSource(this.dataSource());
		flyway.setClassLoader(NisAppConfig.class.getClassLoader());
		flyway.setLocations(prop.getProperty("flyway.locations"));
		flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
		return flyway;
	}

	@Bean
	@DependsOn("flyway")
	public SessionFactory sessionFactory() throws IOException {
		return SessionFactoryLoader.load(this.dataSource());
	}

	@Bean
	public BlockChain blockChain() {
		return new BlockChain(this.blockChainLastBlockLayer, this.blockChainUpdater());
	}

	@Bean
	public BlockChainServices blockChainServices() {
		return new BlockChainServices(this.blockDao, this.blockTransactionObserverFactory(), this.blockValidatorFactory(),
				this.transactionValidatorFactory(), this.nisMapperFactory(), this.nisConfiguration().getForkConfiguration());
	}

	@Bean
	public BlockChainUpdater blockChainUpdater() {
		return new BlockChainUpdater(this.nisCache(), this.blockChainLastBlockLayer, this.blockDao, this.blockChainContextFactory(),
				this.unconfirmedTransactions(), this.nisConfiguration());
	}

	@Bean
	public BlockChainContextFactory blockChainContextFactory() {
		return new BlockChainContextFactory(this.nisCache(), this.blockChainLastBlockLayer, this.blockDao, this.blockChainServices(),
				this.unconfirmedTransactions());
	}

	// region mappers

	@Bean
	public MapperFactory mapperFactory() {
		return new DefaultMapperFactory(this.mosaicIdCache());
	}

	@Bean
	public NisMapperFactory nisMapperFactory() {
		return new NisMapperFactory(this.mapperFactory());
	}

	@Bean
	public NisModelToDbModelMapper nisModelToDbModelMapper() {
		return new NisModelToDbModelMapper(this.mapperFactory().createModelToDbModelMapper(new AccountDaoLookupAdapter(this.accountDao)));
	}

	@Bean
	public NisDbModelToModelMapper nisDbModelToModelMapper() {
		return this.nisMapperFactory().createDbModelToModelNisMapper(this.accountCache());
	}

	// endregion

	// region observers + validators

	@Bean
	public BlockTransactionObserverFactory blockTransactionObserverFactory() {
		final int estimatedBlocksPerYear = this.nisConfiguration().getBlockChainConfiguration().getEstimatedBlocksPerYear();
		final ForkConfiguration forkConfiguration = this.nisConfiguration().getForkConfiguration();
		return new BlockTransactionObserverFactory(this.observerOptions(), estimatedBlocksPerYear, forkConfiguration);
	}

	@Bean
	public BlockValidatorFactory blockValidatorFactory() {
		return new BlockValidatorFactory(this.timeProvider(), this.nisConfiguration().getForkConfiguration());
	}

	@Bean
	public TransactionValidatorFactory transactionValidatorFactory() {
		return new TransactionValidatorFactory(this.timeProvider(), this.nisConfiguration().getNetworkInfo(),
				this.nisConfiguration().getForkConfiguration(), this.nisConfiguration().ignoreFees());
	}

	@Bean
	public SingleTransactionValidator transactionValidator() {
		// this is only consumed by the TransactionController and used in transaction/prepare,
		// which should propagate incomplete transactions
		return this.transactionValidatorFactory().createIncompleteSingleBuilder(this.nisCache()).build();
	}

	// endregion

	@Bean
	public Harvester harvester() {
		final NewBlockTransactionsProvider transactionsProvider = new DefaultNewBlockTransactionsProvider(this.nisCache(),
				this.transactionValidatorFactory(), this.blockValidatorFactory(), this.blockTransactionObserverFactory(),
				this.unconfirmedTransactionsFilter(), this.nisConfiguration().getForkConfiguration());

		final BlockGenerator generator = new BlockGenerator(this.nisCache(), transactionsProvider, this.blockDao,
				new BlockScorer(this.accountStateCache()), this.blockValidatorFactory().create(this.nisCache()));
		return new Harvester(this.timeProvider(), this.blockChainLastBlockLayer, this.unlockedAccounts(), this.nisDbModelToModelMapper(),
				generator);
	}

	@Bean
	public SynchronizedAccountCache accountCache() {
		return new SynchronizedAccountCache(new DefaultAccountCache());
	}

	@Bean
	public SynchronizedAccountStateCache accountStateCache() {
		return new SynchronizedAccountStateCache(new DefaultAccountStateCache());
	}

	@Bean
	public SynchronizedHashCache transactionHashCache() {
		return new SynchronizedHashCache(new DefaultHashCache(50000, this.nisConfiguration().getTransactionHashRetentionTime()));
	}

	@Bean
	public SynchronizedPoxFacade poxFacade() {
		return new SynchronizedPoxFacade(new DefaultPoxFacade(this.importanceCalculator()));
	}

	@Bean
	public SynchronizedNamespaceCache namespaceCache() {
		final BlockHeight mosaicRedefinitionForkHeight = this.nisConfiguration().getForkConfiguration().getMosaicRedefinitionForkHeight();

		NemNamespaceEntry.setDefault(mosaicRedefinitionForkHeight);
		return new SynchronizedNamespaceCache(new DefaultNamespaceCache(mosaicRedefinitionForkHeight));
	}

	@Bean
	public ReadOnlyNisCache nisCache() {
		return new DefaultNisCache(this.accountCache(), this.accountStateCache(), this.poxFacade(), this.transactionHashCache(),
				this.namespaceCache());
	}

	@Bean
	@SuppressWarnings("serial")
	public ImportanceCalculator importanceCalculator() {
		final Map<BlockChainFeature, Supplier<ImportanceCalculator>> featureSupplierMap = new HashMap<BlockChainFeature, Supplier<ImportanceCalculator>>() {
			{
				this.put(BlockChainFeature.PROOF_OF_IMPORTANCE,
						() -> new PoiImportanceCalculator(new PoiScorer(), NisAppConfig::getBlockDependentPoiOptions));
				this.put(BlockChainFeature.PROOF_OF_STAKE, PosImportanceCalculator::new);
			}
		};

		return BlockChainFeatureDependentFactory.createObject(this.nisConfiguration().getBlockChainConfiguration(), "consensus algorithm",
				featureSupplierMap);
	}

	@Bean
	public UnlockedAccounts unlockedAccounts() {
		return new UnlockedAccounts(this.accountCache(), this.accountStateCache(), this.blockChainLastBlockLayer,
				this.canHarvestPredicate(), this.nisConfiguration().getUnlockedLimit());
	}

	@Bean
	public CanHarvestPredicate canHarvestPredicate() {
		return new CanHarvestPredicate(this::getBlockDependentMinHarvesterBalance);
	}

	private Amount getBlockDependentMinHarvesterBalance(final BlockHeight height) {
		return getBlockDependentPoiOptions(height).getMinHarvesterBalance();
	}

	private static org.nem.nis.pox.poi.PoiOptions getBlockDependentPoiOptions(final BlockHeight height) {
		return new PoiOptionsBuilder(height).create();
	}

	@Bean
	public Supplier<BlockHeight> lastBlockHeight() {
		return this.blockChainLastBlockLayer::getLastBlockHeight;
	}

	@Bean
	public UnconfirmedTransactions unconfirmedTransactions() {
		final BlockChainConfiguration blockChainConfiguration = this.nisConfiguration().getBlockChainConfiguration();
		final UnconfirmedStateFactory unconfirmedStateFactory = new UnconfirmedStateFactory(this.transactionValidatorFactory(),
				this.blockTransactionObserverFactory()::createExecuteCommitObserver, this.timeProvider(), this.lastBlockHeight(),
				blockChainConfiguration.getMaxTransactionsPerBlock(), this.nisConfiguration().getForkConfiguration());
		final UnconfirmedTransactions unconfirmedTransactions = new DefaultUnconfirmedTransactions(unconfirmedStateFactory,
				this.nisCache());
		return new SynchronizedUnconfirmedTransactions(unconfirmedTransactions);
	}

	@Bean
	public UnconfirmedTransactionsFilter unconfirmedTransactionsFilter() {
		return this.unconfirmedTransactions().asFilter();
	}

	@Bean
	public HibernateTransactionManager transactionManager() throws IOException {
		return new HibernateTransactionManager(this.sessionFactory());
	}

	@Bean
	public NisMain nisMain() {
		final NisConfiguration nisConfiguration = this.nisConfiguration();

		// initialize network info
		NetworkInfos.setDefault(nisConfiguration.getNetworkInfo());

		// initialize other globals
		final NamespaceCacheLookupAdapters adapters = new NamespaceCacheLookupAdapters(this.namespaceCache());
		if (nisConfiguration.ignoreFees()) {
			NemGlobals.setTransactionFeeCalculator(new ZeroTransactionFeeCalculator());
		} else {
			NemGlobals.setTransactionFeeCalculator(new DefaultTransactionFeeCalculator(adapters.asMosaicFeeInformationLookup(),
					() -> this.blockChainLastBlockLayer.getLastBlockHeight().next(), new BlockHeight[]{
							nisConfiguration.getForkConfiguration().getFeeFork().getFirstHeight(),
							nisConfiguration.getForkConfiguration().getFeeFork().getSecondHeight()
					}));
		}

		NemGlobals.setBlockChainConfiguration(nisConfiguration.getBlockChainConfiguration());
		NemStateGlobals.setWeightedBalancesSupplier(this.weighedBalancesSupplier());

		return new NisMain(this.blockDao, this.nisCache(), this.networkHostBootstrapper(), this.nisModelToDbModelMapper(), nisConfiguration,
				this.blockAnalyzer(), System::exit);
	}

	@SuppressWarnings("serial")
	private Supplier<WeightedBalances> weighedBalancesSupplier() {
		final Map<BlockChainFeature, Supplier<Supplier<WeightedBalances>>> featureSupplierMap = new HashMap<BlockChainFeature, Supplier<Supplier<WeightedBalances>>>() {
			{
				this.put(BlockChainFeature.WB_TIME_BASED_VESTING, () -> TimeBasedVestingWeightedBalances::new);
				this.put(BlockChainFeature.WB_IMMEDIATE_VESTING, () -> AlwaysVestedBalances::new);
			}
		};

		return BlockChainFeatureDependentFactory.createObject(this.nisConfiguration().getBlockChainConfiguration(),
				"weighted balance scheme", featureSupplierMap);
	}

	@Bean
	public BlockAnalyzer blockAnalyzer() {
		final int estimatedBlocksPerYear = this.nisConfiguration().getBlockChainConfiguration().getEstimatedBlocksPerYear();
		final ForkConfiguration forkConfiguration = this.nisConfiguration().getForkConfiguration();
		return new BlockAnalyzer(this.blockDao, this.blockChainUpdater(), this.blockChainLastBlockLayer, this.nisMapperFactory(),
				estimatedBlocksPerYear, forkConfiguration);
	}

	@Bean
	public HttpConnectorPool httpConnectorPool() {
		final CommunicationMode communicationMode = this.nisConfiguration().useBinaryTransport()
				? CommunicationMode.BINARY
				: CommunicationMode.JSON;
		return new HttpConnectorPool(communicationMode, this.outgoingAudits());
	}

	@Bean
	public NisPeerNetworkHost nisPeerNetworkHost() {
		final HarvestingTask harvestingTask = new HarvestingTask(this.blockChain(), this.harvester(), this.unconfirmedTransactions());

		final PeerNetworkScheduler scheduler = new PeerNetworkScheduler(this.timeProvider(), harvestingTask);

		final CountingBlockSynchronizer synchronizer = new CountingBlockSynchronizer(this.blockChain());

		return new NisPeerNetworkHost(this.nisCache(), synchronizer, scheduler, this.chainServices(), this.nodeCompatibilityChecker(),
				this.nisConfiguration(), this.httpConnectorPool(), this.trustProvider(), this.incomingAudits(), this.outgoingAudits());
	}

	@Bean
	public NetworkHostBootstrapper networkHostBootstrapper() {
		return new HarvestAwareNetworkHostBootstrapper(this.nisPeerNetworkHost(), this.unlockedAccounts(), this.nisConfiguration());
	}

	@Bean
	public NisConfiguration nisConfiguration() {
		return new NisConfiguration();
	}

	@Bean
	public TimeProvider timeProvider() {
		return CommonStarter.TIME_PROVIDER;
	}

	@Bean
	public TrustProvider trustProvider() {
		final int LOW_COMMUNICATION_NODE_WEIGHT = 30;
		final int TRUST_CACHE_TIME = 15 * 60;
		return new CachedTrustProvider(new LowComTrustProvider(new EigenTrustPlusPlus(), LOW_COMMUNICATION_NODE_WEIGHT), TRUST_CACHE_TIME,
				this.timeProvider());
	}

	@Bean
	public NemConfigurationPolicy configurationPolicy() {
		return new NisConfigurationPolicy();
	}

	@Bean
	public ChainServices chainServices() {
		return new DefaultChainServices(this.blockChainLastBlockLayer, this.httpConnectorPool());
	}

	@Bean
	public CommonStarter commonStarter() {
		return CommonStarter.INSTANCE;
	}

	@Bean
	public ValidationState validationState() {
		return NisCacheUtils.createValidationState(this.nisCache());
	}

	@Bean
	public LocalHostDetector localHostDetector() {
		return new LocalHostDetector(this.nisConfiguration().getAdditionalLocalIps());
	}

	@Bean
	public NodeCompatibilityChecker nodeCompatibilityChecker() {
		return new DefaultNodeCompatibilityChecker();
	}

	@Bean
	public EnumSet<ObserverOption> observerOptions() {
		final EnumSet<ObserverOption> observerOptions = EnumSet.noneOf(ObserverOption.class);
		if (this.nisConfiguration().isFeatureSupported(NodeFeature.HISTORICAL_ACCOUNT_DATA)) {
			observerOptions.add(ObserverOption.NoHistoricalDataPruning);
		}

		final BlockChainConfiguration blockChainConfiguration = this.nisConfiguration().getBlockChainConfiguration();
		if (blockChainConfiguration.isBlockChainFeatureSupported(BlockChainFeature.PROOF_OF_STAKE)) {
			observerOptions.add(ObserverOption.NoOutlinkObserver);
		}

		return observerOptions;
	}

	@Bean
	public Function<Address, Collection<Address>> cosignatoryLookup() {
		return a -> this.accountStateCache().findStateByAddress(a).getMultisigLinks().getCosignatories();
	}

	@Bean
	public MosaicIdCache mosaicIdCache() {
		return new SynchronizedMosaicIdCache(new DefaultMosaicIdCache());
	}
}


================================== Ai Message ==================================

```diff
--- nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java
+++ nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java
@@ -108,10 +108,12 @@
 	@Bean(initMethod = "migrate")
 	public Flyway flyway() throws IOException {
 		final Properties prop = new Properties();
 		prop.load(NisAppConfig.class.getClassLoader().getResourceAsStream("db.properties"));
 
-		final org.flywaydb.core.Flyway flyway = new Flyway();
-		flyway.setDataSource(this.dataSource());
-		flyway.setClassLoader(NisAppConfig.class.getClassLoader());
-		flyway.setLocations(prop.getProperty("flyway.locations"));
-		flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
+		final Flyway flyway = Flyway.configure()
+			.dataSource(this.dataSource())
+			.locations(prop.getProperty("flyway.locations"))
+			.classLoader(NisAppConfig.class.getClassLoader())
+			.validateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")))
+			.load();
 		return flyway;
 	}
```
Tool Calls:
  compile_maven_stateful (G7SZ5BS10)
 Call ID: G7SZ5BS10
  Args:
    diff: ```diff
--- nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java
+++ nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java
@@ -108,10 +108,12 @@
 	@Bean(initMethod = "migrate")
 	public Flyway flyway() throws IOException {
 		final Properties prop = new Properties();
 		prop.load(NisAppConfig.class.getClassLoader().getResourceAsStream("db.properties"));
 
-		final org.flywaydb.core.Flyway flyway = new Flyway();
-		flyway.setDataSource(this.dataSource());
-		flyway.setClassLoader(NisAppConfig.class.getClassLoader());
-		flyway.setLocations(prop.getProperty("flyway.locations"));
-		flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
+		final Flyway flyway = Flyway.configure()
+			.dataSource(this.dataSource())
+			.locations(prop.getProperty("flyway.locations"))
+			.classLoader(NisAppConfig.class.getClassLoader())
+			.validateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")))
+			.load();
 		return flyway;
 	}
```

================================= Tool Message =================================
Name: compile_maven_stateful

{"compilation_has_succeeded": true, "test_has_succeeded": false, "error_text": "[INFO]\n[INFO] Results:\n[INFO]\n[ERROR] Errors:\n[ERROR] AsyncTimerOptionsBuilderTest.canCreateOptions:20 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AsyncTimerOptionsBuilderTest.visitorIsNotifiedOfInitialDelayWhenTriggerIsNotSpecified:119 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AsyncTimerOptionsBuilderTest.visitorIsNotifiedOfInitialDelayWhenTriggerIsSpecified:130 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AsyncTimerTest.afterDelaysTimerUntilTriggerFires:160 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AsyncTimerTest.closeStopsRefreshing:92 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AsyncTimerTest.stoppedDelayStrategyStopsRefreshing:115 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AsyncTimerTest.visitorIsNotifiedOfDelays:299 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AsyncTimerTest.visitorIsNotifiedOfExceptionalCompletions:281 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AsyncTimerTest.visitorIsNotifiedOfOperationStarts:245 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AsyncTimerTest.visitorIsNotifiedOfStops:320 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AsyncTimerTest.visitorIsNotifiedOfSuccessfulCompletions:262 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NemAsyncTimerVisitorTest.averageOperationTimeIsCalculatedCorrectlyWhenThereAreMultipleCompletions:91 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NemAsyncTimerVisitorTest.notifyDelayUpdatesLastDelayTime:110 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NemAsyncTimerVisitorTest.notifyOperationCompleteExceptionallyUpdatesVisitorStateCorrectly:69 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NemAsyncTimerVisitorTest.notifyOperationCompleteUpdatesVisitorStateCorrectly:47 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NemAsyncTimerVisitorTest.notifyOperationStartUpdatesVisitorStateCorrectly:26 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NemAsyncTimerVisitorTest.notifyStopUpdatesNothing:123 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NemAsyncTimerVisitorTest.visitorCanBeSerializedWhileExecuting:135->assertVisitorSerialization:146 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NemAsyncTimerVisitorTest.visitorCanBeSerializedWhileNotExecuting:141->assertVisitorSerialization:146 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NemAsyncTimerVisitorTest.visitorIsInitializedWithDefaultValues:17 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] HttpBinaryResponseStrategyTest>HttpDeserializerResponseStrategyContractTest.coercedDeserializerIsAssociatedWithAccountLookup:37->coerceDeserializer:29->coerceDeserializer:38 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] HttpBinaryResponseStrategyTest>HttpDeserializerResponseStrategyContractTest.coercedDeserializerIsCorrectlyCreatedAroundInput:23->coerceDeserializer:29->coerceDeserializer:38 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] HttpDeserializerResponseStrategyTest.coerceThrowsFatalPeerExceptionOnHttpError \u00bb Unexpected exception, expected<org.nem.core.connect.FatalPeerException> but was<java.lang.NoClassDefFoundError>\n[ERROR] HttpDeserializerResponseStrategyTest.coerceThrowsFatalPeerExceptionOnIoError \u00bb Unexpected exception, expected<org.nem.core.connect.FatalPeerException> but was<java.lang.NoClassDefFoundError>\n[ERROR] HttpErrorResponseDeserializerUnionStrategyTest.canCoerceDeserializer:34->assertCanCoerceDeserializerWithString:22->coerceUnion:78 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] HttpErrorResponseDeserializerUnionStrategyTest.canCoerceDeserializerWithUnicodeString:40->assertCanCoerceDeserializerWithString:22->coerceUnion:78 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] HttpErrorResponseDeserializerUnionStrategyTest.canCoerceEmptyString:58->coerceUnion:78 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] HttpErrorResponseDeserializerUnionStrategyTest.canCoerceErrorResponse:46->coerceUnion:78 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] HttpErrorResponseDeserializerUnionStrategyTest.coerceThrowsFatalPeerExceptionOnIoError \u00bb Unexpected exception, expected<org.nem.core.connect.FatalPeerException> but was<java.lang.NoClassDefFoundError>\n[ERROR] HttpJsonResponseStrategyTest.coerceThrowsFatalPeerExceptionIfPeerReturnsUnexpectedDataWhenDeserializerIsExpected \u00bb Unexpected exception, expected<org.nem.core.connect.FatalPeerException> but was<java.lang.NoClassDefFoundError>\n[ERROR] HttpJsonResponseStrategyTest>HttpDeserializerResponseStrategyContractTest.coercedDeserializerIsAssociatedWithAccountLookup:37->coerceDeserializer:38->coerceDeserializer:47 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] HttpJsonResponseStrategyTest>HttpDeserializerResponseStrategyContractTest.coercedDeserializerIsCorrectlyCreatedAroundInput:23->coerceDeserializer:38->coerceDeserializer:47 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] HttpMethodClientTest$GetMethodTest.sendDelegatesToStrategyOnSuccess:33->HttpMethodClientTest$TestRunner.sendDelegatesToStrategyOnSuccess:108->HttpMethodClientTest$TestRunner.runTestJsonWithMockService:165->HttpMethodClientTest$TestRunner.runTestWithMockService:185->HttpMethodClientTest$TestRunner.lambda$sendDelegatesToStrategyOnSuccess$3:110 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] HttpMethodClientTest$PostMethodTest.sendDelegatesToStrategyOnSuccess:39->HttpMethodClientTest$TestRunner.sendDelegatesToStrategyOnSuccess:108->HttpMethodClientTest$TestRunner.runTestJsonWithMockService:165->HttpMethodClientTest$TestRunner.runTestWithMockService:185->HttpMethodClientTest$TestRunner.lambda$sendDelegatesToStrategyOnSuccess$3:110 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] HttpVoidResponseStrategyTest.coerceThrowsFatalPeerExceptionIfPeerReturnsDataWhenNoneIsExpected \u00bb Unexpected exception, expected<org.nem.core.connect.FatalPeerException> but was<java.lang.NoClassDefFoundError>\n[ERROR] HttpVoidResponseStrategyTest.nullIsReturnedIfRequestSucceedsAndNoDataIsReturned:26 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] VersionProviderTest.getLatestVersionDelegatesToHttpClientAndReturnsCorrectVersionOnSuccess:31 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] VersionProviderTest.getLatestVersionReturnsZeroOnAnyOtherFailure:66 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] VersionProviderTest.getLatestVersionReturnsZeroOnHttpError:51->assertLatestVersionFailure:79 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] VersionProviderTest.getLatestVersionReturnsZeroOnInvalidJsonResponse:60->assertLatestVersionFailure:79 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] VersionProviderTest.getLocalVersionReturnsCorrectVersion:19 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultAsyncNemConnectorTest.getAsyncCallsErrorResponseStrategyOnError:30 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultAsyncNemConnectorTest.getAsyncReturnsDeserializerOnSuccessWhenQueryStringIsNotProvided:45->assertGetAsyncReturnsDeserializerOnSuccess:59 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultAsyncNemConnectorTest.getAsyncReturnsDeserializerOnSuccessWhenQueryStringIsProvided:51->assertGetAsyncReturnsDeserializerOnSuccess:59 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultAsyncNemConnectorTest.getResponseStrategyCreatesDeserializerUsingSpecifiedAccountLookup:149 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultAsyncNemConnectorTest.postCallsErrorResponseStrategyOnError:78 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultAsyncNemConnectorTest.postReturnsDeserializerOnSuccess:96 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultAsyncNemConnectorTest.postVoidAsyncCallsErrorResponseStrategyOnError:113 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultAsyncNemConnectorTest.postVoidAsyncReturnsNothingOnSuccess:131 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] CipherTest.canCreateCipherFromCipher:20 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] CipherTest.ctorDelegatesToEngineCreateBlockCipher:33 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] CipherTest.decryptDelegatesToBlockCipher:59 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] CipherTest.encryptDelegatesToBlockCipher:45 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] KeyPairTest.ctorCreatesKeyGenerator:80 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] KeyPairTest.ctorDelegatesKeyGenerationToKeyGenerator:92 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] KeyPairTest.ctorFailsIfPublicKeyIsNotCompressed \u00bb Unexpected exception, expected<java.lang.IllegalArgumentException> but was<java.lang.NoClassDefFoundError>\n[ERROR] KeyPairTest.ctorWithPrivateKeyDelegatesToDerivePublicKey:104 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] SignerTest.canCreateSignerFromSigner:22 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] SignerTest.ctorDelegatesToEngineCreateDsaSigner:34 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] SignerTest.isCanonicalSignatureDelegatesToDsaSigner:72 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] SignerTest.makeSignatureCanonicalDelegatesToDsaSigner:85 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] SignerTest.signDelegatesToDsaSigner:46 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] SignerTest.verifyDelegatesToDsaSigner:59 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] Ed25519DsaSignerTest.signThrowsIfGeneratedSignatureIsNotCanonical \u00bb Unexpected exception, expected<org.nem.core.crypto.CryptoException> but was<java.lang.NoClassDefFoundError>\n[ERROR] Ed25519DsaSignerTest>DsaSignerTest.verifyCallsIsCanonicalSignature:97 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] Ed25519DsaSignerTest.verifyReturnsFalseIfPublicKeyIsZeroArray:132 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] SecP256K1DsaSignerTest>DsaSignerTest.verifyCallsIsCanonicalSignature:97 \u00bb ExceptionInInitializer\n[ERROR] ApplicationMetaDataTest.canCreateApplicationMetaDataWithCertificate:35 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ApplicationMetaDataTest.canCreateApplicationMetaDataWithoutCertificate:18 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ApplicationMetaDataTest.canRoundtripApplicationMetaData:53 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ApplicationMetaDataTest.equalsOnlyReturnsTrueForEquivalentObjects:110 \u00bb InaccessibleObject Unable to make protected java.security.cert.X509Certificate() accessible: module java.base does not \"opens java.security.cert\" to unnamed module @3c9d0b9d\n[ERROR] ApplicationMetaDataTest.getCurrentTimeAlwaysReturnsMostRecentTime:72 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ApplicationMetaDataTest.hashCodesAreEqualForEquivalentObjects:128 \u00bb InaccessibleObject Unable to make protected java.security.cert.X509Certificate() accessible: module java.base does not \"opens java.security.cert\" to unnamed module @3c9d0b9d\n[ERROR] CodeSourceFacadeTest.canCreateFacadeAroundMultipleCertificates:54 \u00bb InaccessibleObject Unable to make protected java.security.cert.X509Certificate() accessible: module java.base does not \"opens java.security.cert\" to unnamed module @3c9d0b9d\n[ERROR] CodeSourceFacadeTest.canCreateFacadeAroundSingleCertificate:40 \u00bb InaccessibleObject Unable to make protected java.security.cert.X509Certificate() accessible: module java.base does not \"opens java.security.cert\" to unnamed module @3c9d0b9d\n[ERROR] JarFacadeTest.canCreateFacadeAroundJarStreamWithManifestWithCaseInsensitiveNemVendor:102->assertValidNemVendorName:117 \u00bb InaccessibleObject Unable to make protected java.net.URLConnection(java.net.URL) accessible: module java.base does not \"opens java.net\" to unnamed module @3c9d0b9d\n[ERROR] JarFacadeTest.canCreateFacadeAroundJarStreamWithManifestWithNemVendor:96->assertValidNemVendorName:117 \u00bb InaccessibleObject Unable to make protected java.net.URLConnection(java.net.URL) accessible: module java.base does not \"opens java.net\" to unnamed module @3c9d0b9d\n[ERROR] JarFacadeTest.canCreateFacadeAroundJarStreamWithManifestWithoutNemVendor:84 \u00bb InaccessibleObject Unable to make protected java.net.URLConnection(java.net.URL) accessible: module java.base does not \"opens java.net\" to unnamed module @3c9d0b9d\n[ERROR] JarFacadeTest.canCreateFacadeAroundJarStreamWithoutManifest:62 \u00bb InaccessibleObject Unable to make protected java.net.URLConnection(java.net.URL) accessible: module java.base does not \"opens java.net\" to unnamed module @3c9d0b9d\n[ERROR] MetaDataFactoryTest.canLoadApplicationMetaDataFromCodeSource:31 \u00bb InaccessibleObject Unable to make protected java.security.cert.X509Certificate() accessible: module java.base does not \"opens java.security.cert\" to unnamed module @3c9d0b9d\n[ERROR] DefaultTransactionFeeCalculatorTest.calculatorDelegatesToCorrectCalculatorAfterSecondForkHeight:50->assertMinimumFeeCalculatorAtAndAfterSecondFork:88 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultTransactionFeeCalculatorTest.calculatorDelegatesToCorrectCalculatorAtFirstForkHeight:24->assertMinimumFeeCalculatorAtAndAfterFirstForkButBeforeSecondFork:73 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultTransactionFeeCalculatorTest.calculatorDelegatesToCorrectCalculatorAtSecondForkHeight:42->assertMinimumFeeCalculatorAtAndAfterSecondFork:88 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultTransactionFeeCalculatorTest.calculatorDelegatesToCorrectCalculatorForHeightsAfterFirstForkHeightButBeforeSecondForkHeight:33->assertMinimumFeeCalculatorAtAndAfterFirstForkButBeforeSecondFork:73 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultTransactionFeeCalculatorTest.calculatorDelegatesToCorrectCalculatorForHeightsBeforeFirstForkHeight:15->assertMinimumFeeCalculatorBeforeFirstFork:58 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultTransactionFeeCalculatorTest.isFeeValidUsesCorrectCalculatorAfterSecondForkHeight:141->assertIsFeeValidCalculatorAtAndAfterSecondFork:179 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultTransactionFeeCalculatorTest.isFeeValidUsesCorrectCalculatorAtFirstForkHeight:115->assertIsFeeValidCalculatorAtAndAfterFirstForkButBeforeSecondFork:164 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultTransactionFeeCalculatorTest.isFeeValidUsesCorrectCalculatorAtSecondForkHeight:133->assertIsFeeValidCalculatorAtAndAfterSecondFork:179 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultTransactionFeeCalculatorTest.isFeeValidUsesCorrectCalculatorForHeightsAfterFirstForkHeightButBeforeSecondForkHeight:124->assertIsFeeValidCalculatorAtAndAfterFirstForkButBeforeSecondFork:164 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DefaultTransactionFeeCalculatorTest.isFeeValidUsesCorrectCalculatorForHeightsBeforeFirstForkHeight:106->assertIsFeeValidCalculatorBeforeFirstFork:149 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ImportanceTransferTransactionTest.executeRaisesAppropriateNotifications:172 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ImportanceTransferTransactionTest.undoRaisesAppropriateNotifications:194 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MosaicDefinitionCreationTransactionTest.executeRaisesAppropriateNotifications:201 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MosaicDefinitionCreationTransactionTest.undoRaisesAppropriateNotifications:221 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MosaicSupplyChangeTransactionTest.executeRaisesAppropriateNotifications:194 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MosaicSupplyChangeTransactionTest.undoRaisesAppropriateNotifications:213 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$Main.executeRaisesAccountNotificationForAllModifications:105 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV1AddTest.executeRaisesAppropriateNotificationsForTransactionWithMultipleModifications:551->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.executeRaisesAppropriateNotificationsForTransactionWithMultipleModifications:333 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV1AddTest.executeRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:551->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.executeRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:307 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV1AddTest.undoRaisesAppropriateNotificationsForTransactionWithMultipleModifications:551->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.undoRaisesAppropriateNotificationsForTransactionWithMultipleModifications:346 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV1AddTest.undoRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:551->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.undoRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:320 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV1DelTest.executeRaisesAppropriateNotificationsForTransactionWithMultipleModifications:558->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.executeRaisesAppropriateNotificationsForTransactionWithMultipleModifications:333 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV1DelTest.executeRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:558->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.executeRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:307 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV1DelTest.undoRaisesAppropriateNotificationsForTransactionWithMultipleModifications:558->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.undoRaisesAppropriateNotificationsForTransactionWithMultipleModifications:346 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV1DelTest.undoRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:558->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.undoRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:320 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2AddTest.executeRaisesAppropriateNotificationsForTransactionWithMultipleModifications:882->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.executeRaisesAppropriateNotificationsForTransactionWithMultipleModifications:333 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2AddTest.executeRaisesAppropriateNotificationsForTransactionWithMultipleModificationsAndWithMinCosignatoriesModification:882->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionV2Test.executeRaisesAppropriateNotificationsForTransactionWithMultipleModificationsAndWithMinCosignatoriesModification:759 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2AddTest.executeRaisesAppropriateNotificationsForTransactionWithNoCosignatoryModificationAndWithMinCosignatoriesModification:882->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionV2Test.executeRaisesAppropriateNotificationsForTransactionWithNoCosignatoryModificationAndWithMinCosignatoriesModification:707 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2AddTest.executeRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:882->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.executeRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:307 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2AddTest.executeRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModificationAndWithMinCosignatoriesModification:882->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionV2Test.executeRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModificationAndWithMinCosignatoriesModification:733 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2AddTest.undoRaisesAppropriateNotificationsForTransactionWithMultipleModifications:882->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.undoRaisesAppropriateNotificationsForTransactionWithMultipleModifications:346 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2AddTest.undoRaisesAppropriateNotificationsForTransactionWithMultipleModificationsAndWithMinCosignatoriesModification:882->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionV2Test.undoRaisesAppropriateNotificationsForTransactionWithMultipleModificationsAndWithMinCosignatoriesModification:772 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2AddTest.undoRaisesAppropriateNotificationsForTransactionWithNoCosignatoryModificationAndWithMinCosignatoriesModification:882->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionV2Test.undoRaisesAppropriateNotificationsForTransactionWithNoCosignatoryModificationAndWithMinCosignatoriesModification:720 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2AddTest.undoRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:882->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.undoRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:320 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2AddTest.undoRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModificationAndWithMinCosignatoriesModification:882->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionV2Test.undoRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModificationAndWithMinCosignatoriesModification:746 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2DelTest.executeRaisesAppropriateNotificationsForTransactionWithMultipleModifications:889->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.executeRaisesAppropriateNotificationsForTransactionWithMultipleModifications:333 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2DelTest.executeRaisesAppropriateNotificationsForTransactionWithMultipleModificationsAndWithMinCosignatoriesModification:889->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionV2Test.executeRaisesAppropriateNotificationsForTransactionWithMultipleModificationsAndWithMinCosignatoriesModification:759 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2DelTest.executeRaisesAppropriateNotificationsForTransactionWithNoCosignatoryModificationAndWithMinCosignatoriesModification:889->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionV2Test.executeRaisesAppropriateNotificationsForTransactionWithNoCosignatoryModificationAndWithMinCosignatoriesModification:707 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2DelTest.executeRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:889->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.executeRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:307 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2DelTest.executeRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModificationAndWithMinCosignatoriesModification:889->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionV2Test.executeRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModificationAndWithMinCosignatoriesModification:733 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2DelTest.undoRaisesAppropriateNotificationsForTransactionWithMultipleModifications:889->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.undoRaisesAppropriateNotificationsForTransactionWithMultipleModifications:346 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2DelTest.undoRaisesAppropriateNotificationsForTransactionWithMultipleModificationsAndWithMinCosignatoriesModification:889->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionV2Test.undoRaisesAppropriateNotificationsForTransactionWithMultipleModificationsAndWithMinCosignatoriesModification:772 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2DelTest.undoRaisesAppropriateNotificationsForTransactionWithNoCosignatoryModificationAndWithMinCosignatoriesModification:889->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionV2Test.undoRaisesAppropriateNotificationsForTransactionWithNoCosignatoryModificationAndWithMinCosignatoriesModification:720 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2DelTest.undoRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:889->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionTest.undoRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModification:320 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigAggregateModificationTransactionTest$MultisigAggregateModificationTransactionV2DelTest.undoRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModificationAndWithMinCosignatoriesModification:889->MultisigAggregateModificationTransactionTest$AbstractMultisigAggregateModificationTransactionV2Test.undoRaisesAppropriateNotificationsForTransactionWithSingleCosignatoryModificationAndWithMinCosignatoriesModification:746 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigSignatureTransactionTest.executeRaisesAppropriateNotifications:114 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigSignatureTransactionTest.undoRaisesAppropriateNotifications:131 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigTransactionTest.executeRaisesAppropriateNotificationsWhenNoSignaturesArePresent:230 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigTransactionTest.executeRaisesAppropriateNotificationsWhenSignaturesArePresent:247 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigTransactionTest.undoRaisesAppropriateNotificationsWhenNoSignaturesArePresent:264 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] MultisigTransactionTest.undoRaisesAppropriateNotificationsWhenSignaturesArePresent:281 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ProvisionNamespaceTransactionTest.executeRaisesAppropriateNotifications:147 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ProvisionNamespaceTransactionTest.undoRaisesAppropriateNotifications:167 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransactionTest.executeAppliesNotificationsInForwardOrder:376 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransactionTest.executeDelegatesToDerivedClass:267 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransactionTest.executeExposesAllDerivedClassNotificationsInOrder:300 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransactionTest.undoAppliesNotificationsInReverseOrder:352 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransactionTest.undoDelegatesToDerivedClass:279 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransactionTest.undoExposesAllDerivedClassNotificationsInReverseOrder:329 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransferTransactionTest$AbstractTransferTransactionV1Test.executeRaisesAppropriateNotificationsForXemTransfers:502->TransferTransactionTest$AbstractTransferTransactionTest.executeRaisesAppropriateNotificationsForXemTransfers:389 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransferTransactionTest$AbstractTransferTransactionV1Test.undoRaisesAppropriateNotificationsForXemTransfers:502->TransferTransactionTest$AbstractTransferTransactionTest.undoRaisesAppropriateNotificationsForXemTransfers:414 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransferTransactionTest$AbstractTransferTransactionV2Test.executeRaisesAppropriateNotificationsForMosaicTransfers:695 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransferTransactionTest$AbstractTransferTransactionV2Test.executeRaisesAppropriateNotificationsForMosaicTransfersIncludingXem:725 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransferTransactionTest$AbstractTransferTransactionV2Test.executeRaisesAppropriateNotificationsForMosaicTransfersWithXemLevy:752 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransferTransactionTest$AbstractTransferTransactionV2Test.executeRaisesAppropriateNotificationsForXemTransfers:591->TransferTransactionTest$AbstractTransferTransactionTest.executeRaisesAppropriateNotificationsForXemTransfers:389 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransferTransactionTest$AbstractTransferTransactionV2Test.undoRaisesAppropriateNotificationsForMosaicTransfers:781 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransferTransactionTest$AbstractTransferTransactionV2Test.undoRaisesAppropriateNotificationsForMosaicTransfersIncludingXem:811 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransferTransactionTest$AbstractTransferTransactionV2Test.undoRaisesAppropriateNotificationsForMosaicTransfersWithXemLevy:838 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] TransferTransactionTest$AbstractTransferTransactionV2Test.undoRaisesAppropriateNotificationsForXemTransfers:591->TransferTransactionTest$AbstractTransferTransactionTest.undoRaisesAppropriateNotificationsForXemTransfers:414 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ReverseTransactionObserverTest.balanceCreditIsRetypedAsBalanceDebit:89->assertRetypedBalanceAdjustment:100 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ReverseTransactionObserverTest.balanceDebitIsRetypedAsBalanceCredit:95->assertRetypedBalanceAdjustment:100 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ReverseTransactionObserverTest.balanceTransferAccountsAreReversed:41 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ReverseTransactionObserverTest.mosaicTransferAccountsAreReversed:65 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ReverseTransactionObserverTest.nonBalanceNotificationsAreLeftUnchanged:122 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] ReverseTransactionObserverTest.notificationsAreCommittedInReverseOrder:19 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AggregateTransactionSerializationExtensionTest.deserializeCallsAllApplicableChildExtension:110 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AggregateTransactionSerializationExtensionTest.deserializeCallsApplicableChildExtension:76 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AggregateTransactionSerializationExtensionTest.deserializeDoesNotCallNonApplicableChildExtension:93 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AggregateTransactionSerializationExtensionTest.serializeCallsAllApplicableChildExtension:52 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AggregateTransactionSerializationExtensionTest.serializeCallsApplicableChildExtension:18 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AggregateTransactionSerializationExtensionTest.serializeDoesNotCallNonApplicableChildExtension:35 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AggregateTransactionValidationExtensionTest.validateCallsAllApplicableChildExtension:47->createMockExtension:65 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AggregateTransactionValidationExtensionTest.validateCallsApplicableChildExtension:15->createMockExtension:65 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] AggregateTransactionValidationExtensionTest.validateDoesNotCallNonApplicableChildExtension:31->createMockExtension:65 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NisNodeInfoTest.canRoundtripNodeInfoMetaData:33->createAppMetaData:101 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NisNodeInfoTest.equalsOnlyReturnsTrueForEquivalentObjects:64->createAppMetaData:101 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NisNodeInfoTest.hashCodesAreEqualForEquivalentObjects:80->createAppMetaData:101 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] NisNodeInfoTest.nodeInfoExposesAllConstructorParameters:19->createAppMetaData:101 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DeserializationContextTest.contextConstantsAreInitializedCorrectly:31 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[ERROR] DeserializationContextTest.findAccountByAddressDelegatesToLookup:16 \u00bb NoClassDefFound Could not initialize class org.mockito.internal.creation.cglib.ClassImposterizer$3\n[INFO]\n[ERROR] Tests run: 2361, Failures: 0, Errors: 170, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for NEM Infrastructure Server - ALL 0.6.101:\n[INFO]\n[INFO] NEM Core ........................................... FAILURE [ 45.887 s]\n[INFO] NEM Deploy ......................................... SKIPPED\n[INFO] NEM Peer ........................................... SKIPPED\n[INFO] NEM Infrastructure Server .......................... SKIPPED\n[INFO] NEM Infrastructure Server - ALL .................... SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 46.070 s\n[INFO] Finished at: 2024-08-08T21:55:14Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.1.2:test (default-test) on project nem-core:\n[ERROR]\n[ERROR] Please refer to /mnt/repo/core/target/surefire-reports for the individual test results.\n[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException", "updated_files": {"nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java": "package org.nem.specific.deploy.appconfig;\n\nimport org.flywaydb.core.Flyway;\nimport org.hibernate.SessionFactory;\nimport org.nem.core.model.*;\nimport org.nem.core.model.primitive.*;\nimport org.nem.core.node.NodeFeature;\nimport org.nem.core.time.TimeProvider;\nimport org.nem.deploy.*;\nimport org.nem.nis.*;\nimport org.nem.nis.audit.AuditCollection;\nimport org.nem.nis.boot.*;\nimport org.nem.nis.cache.*;\nimport org.nem.nis.connect.*;\nimport org.nem.nis.controller.interceptors.LocalHostDetector;\nimport org.nem.nis.dao.*;\nimport org.nem.nis.harvesting.*;\nimport org.nem.nis.mappers.*;\nimport org.nem.nis.pox.ImportanceCalculator;\nimport org.nem.nis.pox.poi.*;\nimport org.nem.nis.pox.pos.PosImportanceCalculator;\nimport org.nem.nis.secret.*;\nimport org.nem.nis.service.BlockChainLastBlockLayer;\nimport org.nem.nis.state.*;\nimport org.nem.nis.sync.*;\nimport org.nem.nis.validators.*;\nimport org.nem.peer.connect.CommunicationMode;\nimport org.nem.peer.node.*;\nimport org.nem.peer.services.ChainServices;\nimport org.nem.peer.trust.*;\nimport org.nem.specific.deploy.*;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.*;\nimport org.springframework.jdbc.datasource.DriverManagerDataSource;\nimport org.springframework.orm.hibernate4.HibernateTransactionManager;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\n\nimport javax.sql.DataSource;\nimport java.io.IOException;\nimport java.util.*;\nimport java.util.function.*;\n\n@Configuration\n@ComponentScan(basePackages = {\n\t\t\"org.nem.nis\"\n}, excludeFilters = {\n\t\t@ComponentScan.Filter(type = FilterType.ANNOTATION, value = org.springframework.stereotype.Controller.class),\n\t\t@ComponentScan.Filter(type = FilterType.REGEX, pattern = {\n\t\t\t\t\"org.nem.nis.websocket.*\"\n\t\t})\n})\n@EnableTransactionManagement\npublic class NisAppConfig {\n\n\t@Autowired\n\tprivate AccountDao accountDao;\n\n\t@Autowired\n\tprivate BlockDao blockDao;\n\n\t@Autowired\n\tprivate BlockChainLastBlockLayer blockChainLastBlockLayer;\n\n\t@Autowired\n\t@SuppressWarnings(\"unused\")\n\tprivate TransferDao transferDao;\n\n\tprivate static final int MAX_AUDIT_HISTORY_SIZE = 50;\n\n\t@Bean\n\tprotected AuditCollection outgoingAudits() {\n\t\treturn this.createAuditCollection();\n\t}\n\n\t@Bean\n\tprotected AuditCollection incomingAudits() {\n\t\treturn this.createAuditCollection();\n\t}\n\n\tprivate AuditCollection createAuditCollection() {\n\t\treturn new AuditCollection(MAX_AUDIT_HISTORY_SIZE, this.timeProvider());\n\t}\n\n\t@Bean\n\tpublic DataSource dataSource() throws IOException {\n\t\tfinal NisConfiguration configuration = this.nisConfiguration();\n\t\tfinal String nemFolder = configuration.getNemFolder();\n\t\tfinal Properties prop = new Properties();\n\t\tprop.load(NisAppConfig.class.getClassLoader().getResourceAsStream(\"db.properties\"));\n\n\t\t// replace url parameters with values from configuration\n\t\tfinal String jdbcUrl = prop.getProperty(\"jdbc.url\").replace(\"${nem.folder}\", nemFolder).replace(\"${nem.network}\",\n\t\t\t\tconfiguration.getNetworkName());\n\n\t\tfinal DriverManagerDataSource dataSource = new DriverManagerDataSource();\n\t\tdataSource.setDriverClassName(prop.getProperty(\"jdbc.driverClassName\"));\n\t\tdataSource.setUrl(jdbcUrl);\n\t\tdataSource.setUsername(prop.getProperty(\"jdbc.username\"));\n\t\tdataSource.setPassword(prop.getProperty(\"jdbc.password\"));\n\t\treturn dataSource;\n\t}\n\n\t@Bean(initMethod = \"migrate\")\n\tpublic Flyway flyway() throws IOException {\n\t\tfinal Properties prop = new Properties();\n\t\tprop.load(NisAppConfig.class.getClassLoader().getResourceAsStream(\"db.properties\"));\n\n\t\tfinal Flyway flyway = Flyway.configure()\n\t\t\t.dataSource(this.dataSource())\n\t\t\t.locations(prop.getProperty(\"flyway.locations\"))\n\t\t\t.classLoader(NisAppConfig.class.getClassLoader())\n\t\t\t.validateOnMigrate(Boolean.valueOf(prop.getProperty(\"flyway.validate\")))\n\t\t\t.load();\n\t\treturn flyway;\n\t}\n\n\t@Bean\n\t@DependsOn(\"flyway\")\n\tpublic SessionFactory sessionFactory() throws IOException {\n\t\treturn SessionFactoryLoader.load(this.dataSource());\n\t}\n\n\t@Bean\n\tpublic BlockChain blockChain() {\n\t\treturn new BlockChain(this.blockChainLastBlockLayer, this.blockChainUpdater());\n\t}\n\n\t@Bean\n\tpublic BlockChainServices blockChainServices() {\n\t\treturn new BlockChainServices(this.blockDao, this.blockTransactionObserverFactory(), this.blockValidatorFactory(),\n\t\t\t\tthis.transactionValidatorFactory(), this.nisMapperFactory(), this.nisConfiguration().getForkConfiguration());\n\t}\n\n\t@Bean\n\tpublic BlockChainUpdater blockChainUpdater() {\n\t\treturn new BlockChainUpdater(this.nisCache(), this.blockChainLastBlockLayer, this.blockDao, this.blockChainContextFactory(),\n\t\t\t\tthis.unconfirmedTransactions(), this.nisConfiguration());\n\t}\n\n\t@Bean\n\tpublic BlockChainContextFactory blockChainContextFactory() {\n\t\treturn new BlockChainContextFactory(this.nisCache(), this.blockChainLastBlockLayer, this.blockDao, this.blockChainServices(),\n\t\t\t\tthis.unconfirmedTransactions());\n\t}\n\n\t// region mappers\n\n\t@Bean\n\tpublic MapperFactory mapperFactory() {\n\t\treturn new DefaultMapperFactory(this.mosaicIdCache());\n\t}\n\n\t@Bean\n\tpublic NisMapperFactory nisMapperFactory() {\n\t\treturn new NisMapperFactory(this.mapperFactory());\n\t}\n\n\t@Bean\n\tpublic NisModelToDbModelMapper nisModelToDbModelMapper() {\n\t\treturn new NisModelToDbModelMapper(this.mapperFactory().createModelToDbModelMapper(new AccountDaoLookupAdapter(this.accountDao)));\n\t}\n\n\t@Bean\n\tpublic NisDbModelToModelMapper nisDbModelToModelMapper() {\n\t\treturn this.nisMapperFactory().createDbModelToModelNisMapper(this.accountCache());\n\t}\n\n\t// endregion\n\n\t// region observers + validators\n\n\t@Bean\n\tpublic BlockTransactionObserverFactory blockTransactionObserverFactory() {\n\t\tfinal int estimatedBlocksPerYear = this.nisConfiguration().getBlockChainConfiguration().getEstimatedBlocksPerYear();\n\t\tfinal ForkConfiguration forkConfiguration = this.nisConfiguration().getForkConfiguration();\n\t\treturn new BlockTransactionObserverFactory(this.observerOptions(), estimatedBlocksPerYear, forkConfiguration);\n\t}\n\n\t@Bean\n\tpublic BlockValidatorFactory blockValidatorFactory() {\n\t\treturn new BlockValidatorFactory(this.timeProvider(), this.nisConfiguration().getForkConfiguration());\n\t}\n\n\t@Bean\n\tpublic TransactionValidatorFactory transactionValidatorFactory() {\n\t\treturn new TransactionValidatorFactory(this.timeProvider(), this.nisConfiguration().getNetworkInfo(),\n\t\t\t\tthis.nisConfiguration().getForkConfiguration(), this.nisConfiguration().ignoreFees());\n\t}\n\n\t@Bean\n\tpublic SingleTransactionValidator transactionValidator() {\n\t\t// this is only consumed by the TransactionController and used in transaction/prepare,\n\t\t// which should propagate incomplete transactions\n\t\treturn this.transactionValidatorFactory().createIncompleteSingleBuilder(this.nisCache()).build();\n\t}\n\n\t// endregion\n\n\t@Bean\n\tpublic Harvester harvester() {\n\t\tfinal NewBlockTransactionsProvider transactionsProvider = new DefaultNewBlockTransactionsProvider(this.nisCache(),\n\t\t\t\tthis.transactionValidatorFactory(), this.blockValidatorFactory(), this.blockTransactionObserverFactory(),\n\t\t\t\tthis.unconfirmedTransactionsFilter(), this.nisConfiguration().getForkConfiguration());\n\n\t\tfinal BlockGenerator generator = new BlockGenerator(this.nisCache(), transactionsProvider, this.blockDao,\n\t\t\t\tnew BlockScorer(this.accountStateCache()), this.blockValidatorFactory().create(this.nisCache()));\n\t\treturn new Harvester(this.timeProvider(), this.blockChainLastBlockLayer, this.unlockedAccounts(), this.nisDbModelToModelMapper(),\n\t\t\t\tgenerator);\n\t}\n\n\t@Bean\n\tpublic SynchronizedAccountCache accountCache() {\n\t\treturn new SynchronizedAccountCache(new DefaultAccountCache());\n\t}\n\n\t@Bean\n\tpublic SynchronizedAccountStateCache accountStateCache() {\n\t\treturn new SynchronizedAccountStateCache(new DefaultAccountStateCache());\n\t}\n\n\t@Bean\n\tpublic SynchronizedHashCache transactionHashCache() {\n\t\treturn new SynchronizedHashCache(new DefaultHashCache(50000, this.nisConfiguration().getTransactionHashRetentionTime()));\n\t}\n\n\t@Bean\n\tpublic SynchronizedPoxFacade poxFacade() {\n\t\treturn new SynchronizedPoxFacade(new DefaultPoxFacade(this.importanceCalculator()));\n\t}\n\n\t@Bean\n\tpublic SynchronizedNamespaceCache namespaceCache() {\n\t\tfinal BlockHeight mosaicRedefinitionForkHeight = this.nisConfiguration().getForkConfiguration().getMosaicRedefinitionForkHeight();\n\n\t\tNemNamespaceEntry.setDefault(mosaicRedefinitionForkHeight);\n\t\treturn new SynchronizedNamespaceCache(new DefaultNamespaceCache(mosaicRedefinitionForkHeight));\n\t}\n\n\t@Bean\n\tpublic ReadOnlyNisCache nisCache() {\n\t\treturn new DefaultNisCache(this.accountCache(), this.accountStateCache(), this.poxFacade(), this.transactionHashCache(),\n\t\t\t\tthis.namespaceCache());\n\t}\n\n\t@Bean\n\t@SuppressWarnings(\"serial\")\n\tpublic ImportanceCalculator importanceCalculator() {\n\t\tfinal Map<BlockChainFeature, Supplier<ImportanceCalculator>> featureSupplierMap = new HashMap<BlockChainFeature, Supplier<ImportanceCalculator>>() {\n\t\t\t{\n\t\t\t\tthis.put(BlockChainFeature.PROOF_OF_IMPORTANCE,\n\t\t\t\t\t\t() -> new PoiImportanceCalculator(new PoiScorer(), NisAppConfig::getBlockDependentPoiOptions));\n\t\t\t\tthis.put(BlockChainFeature.PROOF_OF_STAKE, PosImportanceCalculator::new);\n\t\t\t}\n\t\t};\n\n\t\treturn BlockChainFeatureDependentFactory.createObject(this.nisConfiguration().getBlockChainConfiguration(), \"consensus algorithm\",\n\t\t\t\tfeatureSupplierMap);\n\t}\n\n\t@Bean\n\tpublic UnlockedAccounts unlockedAccounts() {\n\t\treturn new UnlockedAccounts(this.accountCache(), this.accountStateCache(), this.blockChainLastBlockLayer,\n\t\t\t\tthis.canHarvestPredicate(), this.nisConfiguration().getUnlockedLimit());\n\t}\n\n\t@Bean\n\tpublic CanHarvestPredicate canHarvestPredicate() {\n\t\treturn new CanHarvestPredicate(this::getBlockDependentMinHarvesterBalance);\n\t}\n\n\tprivate Amount getBlockDependentMinHarvesterBalance(final BlockHeight height) {\n\t\treturn getBlockDependentPoiOptions(height).getMinHarvesterBalance();\n\t}\n\n\tprivate static org.nem.nis.pox.poi.PoiOptions getBlockDependentPoiOptions(final BlockHeight height) {\n\t\treturn new PoiOptionsBuilder(height).create();\n\t}\n\n\t@Bean\n\tpublic Supplier<BlockHeight> lastBlockHeight() {\n\t\treturn this.blockChainLastBlockLayer::getLastBlockHeight;\n\t}\n\n\t@Bean\n\tpublic UnconfirmedTransactions unconfirmedTransactions() {\n\t\tfinal BlockChainConfiguration blockChainConfiguration = this.nisConfiguration().getBlockChainConfiguration();\n\t\tfinal UnconfirmedStateFactory unconfirmedStateFactory = new UnconfirmedStateFactory(this.transactionValidatorFactory(),\n\t\t\t\tthis.blockTransactionObserverFactory()::createExecuteCommitObserver, this.timeProvider(), this.lastBlockHeight(),\n\t\t\t\tblockChainConfiguration.getMaxTransactionsPerBlock(), this.nisConfiguration().getForkConfiguration());\n\t\tfinal UnconfirmedTransactions unconfirmedTransactions = new DefaultUnconfirmedTransactions(unconfirmedStateFactory,\n\t\t\t\tthis.nisCache());\n\t\treturn new SynchronizedUnconfirmedTransactions(unconfirmedTransactions);\n\t}\n\n\t@Bean\n\tpublic UnconfirmedTransactionsFilter unconfirmedTransactionsFilter() {\n\t\treturn this.unconfirmedTransactions().asFilter();\n\t}\n\n\t@Bean\n\tpublic HibernateTransactionManager transactionManager() throws IOException {\n\t\treturn new HibernateTransactionManager(this.sessionFactory());\n\t}\n\n\t@Bean\n\tpublic NisMain nisMain() {\n\t\tfinal NisConfiguration nisConfiguration = this.nisConfiguration();\n\n\t\t// initialize network info\n\t\tNetworkInfos.setDefault(nisConfiguration.getNetworkInfo());\n\n\t\t// initialize other globals\n\t\tfinal NamespaceCacheLookupAdapters adapters = new NamespaceCacheLookupAdapters(this.namespaceCache());\n\t\tif (nisConfiguration.ignoreFees()) {\n\t\t\tNemGlobals.setTransactionFeeCalculator(new ZeroTransactionFeeCalculator());\n\t\t} else {\n\t\t\tNemGlobals.setTransactionFeeCalculator(new DefaultTransactionFeeCalculator(adapters.asMosaicFeeInformationLookup(),\n\t\t\t\t\t() -> this.blockChainLastBlockLayer.getLastBlockHeight().next(), new BlockHeight[]{\n\t\t\t\t\t\t\tnisConfiguration.getForkConfiguration().getFeeFork().getFirstHeight(),\n\t\t\t\t\t\t\tnisConfiguration.getForkConfiguration().getFeeFork().getSecondHeight()\n\t\t\t\t\t}));\n\t\t}\n\n\t\tNemGlobals.setBlockChainConfiguration(nisConfiguration.getBlockChainConfiguration());\n\t\tNemStateGlobals.setWeightedBalancesSupplier(this.weighedBalancesSupplier());\n\n\t\treturn new NisMain(this.blockDao, this.nisCache(), this.networkHostBootstrapper(), this.nisModelToDbModelMapper(), nisConfiguration,\n\t\t\t\tthis.blockAnalyzer(), System::exit);\n\t}\n\n\t@SuppressWarnings(\"serial\")\n\tprivate Supplier<WeightedBalances> weighedBalancesSupplier() {\n\t\tfinal Map<BlockChainFeature, Supplier<Supplier<WeightedBalances>>> featureSupplierMap = new HashMap<BlockChainFeature, Supplier<Supplier<WeightedBalances>>>() {\n\t\t\t{\n\t\t\t\tthis.put(BlockChainFeature.WB_TIME_BASED_VESTING, () -> TimeBasedVestingWeightedBalances::new);\n\t\t\t\tthis.put(BlockChainFeature.WB_IMMEDIATE_VESTING, () -> AlwaysVestedBalances::new);\n\t\t\t}\n\t\t};\n\n\t\treturn BlockChainFeatureDependentFactory.createObject(this.nisConfiguration().getBlockChainConfiguration(),\n\t\t\t\t\"weighted balance scheme\", featureSupplierMap);\n\t}\n\n\t@Bean\n\tpublic BlockAnalyzer blockAnalyzer() {\n\t\tfinal int estimatedBlocksPerYear = this.nisConfiguration().getBlockChainConfiguration().getEstimatedBlocksPerYear();\n\t\tfinal ForkConfiguration forkConfiguration = this.nisConfiguration().getForkConfiguration();\n\t\treturn new BlockAnalyzer(this.blockDao, this.blockChainUpdater(), this.blockChainLastBlockLayer, this.nisMapperFactory(),\n\t\t\t\testimatedBlocksPerYear, forkConfiguration);\n\t}\n\n\t@Bean\n\tpublic HttpConnectorPool httpConnectorPool() {\n\t\tfinal CommunicationMode communicationMode = this.nisConfiguration().useBinaryTransport()\n\t\t\t\t? CommunicationMode.BINARY\n\t\t\t\t: CommunicationMode.JSON;\n\t\treturn new HttpConnectorPool(communicationMode, this.outgoingAudits());\n\t}\n\n\t@Bean\n\tpublic NisPeerNetworkHost nisPeerNetworkHost() {\n\t\tfinal HarvestingTask harvestingTask = new HarvestingTask(this.blockChain(), this.harvester(), this.unconfirmedTransactions());\n\n\t\tfinal PeerNetworkScheduler scheduler = new PeerNetworkScheduler(this.timeProvider(), harvestingTask);\n\n\t\tfinal CountingBlockSynchronizer synchronizer = new CountingBlockSynchronizer(this.blockChain());\n\n\t\treturn new NisPeerNetworkHost(this.nisCache(), synchronizer, scheduler, this.chainServices(), this.nodeCompatibilityChecker(),\n\t\t\t\tthis.nisConfiguration(), this.httpConnectorPool(), this.trustProvider(), this.incomingAudits(), this.outgoingAudits());\n\t}\n\n\t@Bean\n\tpublic NetworkHostBootstrapper networkHostBootstrapper() {\n\t\treturn new HarvestAwareNetworkHostBootstrapper(this.nisPeerNetworkHost(), this.unlockedAccounts(), this.nisConfiguration());\n\t}\n\n\t@Bean\n\tpublic NisConfiguration nisConfiguration() {\n\t\treturn new NisConfiguration();\n\t}\n\n\t@Bean\n\tpublic TimeProvider timeProvider() {\n\t\treturn CommonStarter.TIME_PROVIDER;\n\t}\n\n\t@Bean\n\tpublic TrustProvider trustProvider() {\n\t\tfinal int LOW_COMMUNICATION_NODE_WEIGHT = 30;\n\t\tfinal int TRUST_CACHE_TIME = 15 * 60;\n\t\treturn new CachedTrustProvider(new LowComTrustProvider(new EigenTrustPlusPlus(), LOW_COMMUNICATION_NODE_WEIGHT), TRUST_CACHE_TIME,\n\t\t\t\tthis.timeProvider());\n\t}\n\n\t@Bean\n\tpublic NemConfigurationPolicy configurationPolicy() {\n\t\treturn new NisConfigurationPolicy();\n\t}\n\n\t@Bean\n\tpublic ChainServices chainServices() {\n\t\treturn new DefaultChainServices(this.blockChainLastBlockLayer, this.httpConnectorPool());\n\t}\n\n\t@Bean\n\tpublic CommonStarter commonStarter() {\n\t\treturn CommonStarter.INSTANCE;\n\t}\n\n\t@Bean\n\tpublic ValidationState validationState() {\n\t\treturn NisCacheUtils.createValidationState(this.nisCache());\n\t}\n\n\t@Bean\n\tpublic LocalHostDetector localHostDetector() {\n\t\treturn new LocalHostDetector(this.nisConfiguration().getAdditionalLocalIps());\n\t}\n\n\t@Bean\n\tpublic NodeCompatibilityChecker nodeCompatibilityChecker() {\n\t\treturn new DefaultNodeCompatibilityChecker();\n\t}\n\n\t@Bean\n\tpublic EnumSet<ObserverOption> observerOptions() {\n\t\tfinal EnumSet<ObserverOption> observerOptions = EnumSet.noneOf(ObserverOption.class);\n\t\tif (this.nisConfiguration().isFeatureSupported(NodeFeature.HISTORICAL_ACCOUNT_DATA)) {\n\t\t\tobserverOptions.add(ObserverOption.NoHistoricalDataPruning);\n\t\t}\n\n\t\tfinal BlockChainConfiguration blockChainConfiguration = this.nisConfiguration().getBlockChainConfiguration();\n\t\tif (blockChainConfiguration.isBlockChainFeatureSupported(BlockChainFeature.PROOF_OF_STAKE)) {\n\t\t\tobserverOptions.add(ObserverOption.NoOutlinkObserver);\n\t\t}\n\n\t\treturn observerOptions;\n\t}\n\n\t@Bean\n\tpublic Function<Address, Collection<Address>> cosignatoryLookup() {\n\t\treturn a -> this.accountStateCache().findStateByAddress(a).getMultisigLinks().getCosignatories();\n\t}\n\n\t@Bean\n\tpublic MosaicIdCache mosaicIdCache() {\n\t\treturn new SynchronizedMosaicIdCache(new DefaultMosaicIdCache());\n\t}\n}\n"}, "compile_error_details": {}}