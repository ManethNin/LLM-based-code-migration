{
    "validate_diffs": [
        {
            "input": "--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n         DoubleSum aggregator = getField(\"aggregator\");\n-        StringHandler handlerC = getField(\"stringHandler_C\");\n+        StringHandler handlerC = getField(\"stringHandler_C\");\n         onEvent(\"A\");\n         assertThat(aggregator.sum, is(1.0));\n         assertThat(handlerC.value, is(0));\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n         DoubleSum aggregator = getField(\"aggregator\");\n-        StringHandler handlerC = getField(\"stringHandler_C\");\n+        StringHandler handlerC = getField(\"stringHandler_C\");\n         onEvent(\"A\");\n         assertThat(aggregator.sum, is(1.0));\n         assertThat(handlerC.value, is(0));\n",
            "output": "Diff Error: No diff fences found in content. Make sure that the diff is fenced with ```diff on its own line. and is closed with ```",
            "error": "No diff fences found in content. Make sure that the diff is fenced with ```diff on its own line. and is closed with ```",
            "span_id": 11998291762998594507
        },
        {
            "input": "--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n         DoubleSum aggregator = getField(\"aggregator\");\n-        StringHandler handlerC = getField(\"stringHandler_C\");\n+        StringHandler handlerC = getField(\"stringHandler_C\");\n         onEvent(\"A\");\n         assertThat(aggregator.sum, is(1.0));\n         assertThat(handlerC.value, is(0));\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n         DoubleSum aggregator = getField(\"aggregator\");\n-        StringHandler handlerC = getField(\"stringHandler_C\");\n+        StringHandler handlerC = getField(\"stringHandler_C\");\n         onEvent(\"A\");\n         assertThat(aggregator.sum, is(1.0));\n         assertThat(handlerC.value, is(0));\n",
            "output": "Diff Error: No diff fences found in content. Make sure that the diff is fenced with ```diff on its own line. and is closed with ```",
            "error": "No diff fences found in content. Make sure that the diff is fenced with ```diff on its own line. and is closed with ```",
            "span_id": 10112032093687004872
        }
    ],
    "compile_maven": [
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        DoubleSum aggregator = getField(\"aggregator\");\n+        DoubleSum aggregator = getField(\"aggregator\");\n         StringHandler handlerC = getField(\"stringHandler_C\");\n         onEvent(\"A\");\n         assertThat(aggregator.sum, is(1.0));\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        DoubleSum aggregator = getField(\"aggregator\");\n+        DoubleSum aggregator = getField(\"aggregator\");\n         StringHandler handlerC = getField(\"stringHandler_C\");\n         onEvent(\"A\");\n         assertThat(aggregator.sum, is(1.0));\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoEdits: no applicable hunks found!\nThe provided diff does not contain any hunks that can be applied to the files in the repository.\nEnsure that your diff correctly specifies the changes and try again.\nThe diff needs to apply to the existing lines in the files.",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoEdits: no applicable hunks found!\nThe provided diff does not contain any hunks that can be applied to the files in the repository.\nEnsure that your diff correctly specifies the changes and try again.\nThe diff needs to apply to the existing lines in the files.",
            "span_id": 3366938596169638337
        },
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n```",
            "span_id": 8880746862939265911
        },
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
            "span_id": 12202818965531407283
        },
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
            "span_id": 9987953439128753785
        },
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
            "span_id": 9746513077698238397
        },
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
            "span_id": 3948182427807895927
        },
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
            "span_id": 11695713176832155628
        },
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
            "span_id": 4001356184277417759
        },
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
            "span_id": 15172054041302782644
        },
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
            "span_id": 196237305450923298
        },
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
            "span_id": 9812082809171310736
        },
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
            "span_id": 14924243570266431467
        },
        {
            "input": "```diff\n--- compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n+++ compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java\n@@ -78,7 +78,7 @@\n             Yaml yaml = new Yaml(constructor);\n             c.addNode(yaml.loadAs(config, InstanceHolder.class));\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n@@ -114,7 +114,7 @@\n             Yaml yaml = new Yaml(constructor);\n             yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n         });\n-        Constructor constructor = new Constructor();\n+        Constructor constructor = new Constructor(LoaderOptions.builder().build());\n         constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n         constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n         Yaml yaml = new Yaml(constructor);\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java!\nMake extra sure the indentation is correct.\ncompiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java does not contain these 7 exact lines in a row:\n```\nYaml yaml = new Yaml(constructor);\nyaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n});\nConstructor constructor = new Constructor();\nconstructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\nconstructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\nYaml yaml = new Yaml(constructor);\n```",
            "span_id": 10789787749893186114
        }
    ],
    "read_file": [
        {
            "input": "compiler/src/test/java/com/fluxtion/compiler/builder/factory/GraphOfInstancesTest.java",
            "output": "package com.fluxtion.compiler.builder.factory;\n\nimport com.fluxtion.compiler.generation.util.MultipleSepTargetInProcessTest;\nimport com.fluxtion.runtime.annotations.OnEventHandler;\nimport com.fluxtion.runtime.annotations.OnParentUpdate;\nimport com.fluxtion.runtime.annotations.OnTrigger;\nimport com.fluxtion.runtime.annotations.builder.ExcludeNode;\nimport com.fluxtion.runtime.node.NamedNode;\nimport lombok.Data;\nimport org.junit.Test;\nimport org.yaml.snakeyaml.TypeDescription;\nimport org.yaml.snakeyaml.Yaml;\nimport org.yaml.snakeyaml.constructor.Constructor;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Objects;\nimport java.util.function.DoubleSupplier;\n\nimport static org.hamcrest.CoreMatchers.is;\nimport static org.hamcrest.MatcherAssert.assertThat;\n\npublic class GraphOfInstancesTest extends MultipleSepTargetInProcessTest {\n    public GraphOfInstancesTest(boolean compiledSep) {\n        super(compiledSep);\n    }\n\n    @Test(expected = NoSuchFieldException.class)\n    public void buildWithoutYaml() {\n        sep(c -> {\n            StringHandler stringHandlerA = new StringHandler(\"A\");\n            StringHandler stringHandlerB = new StringHandler(\"B\");\n            StringHandler stringHandlerC = new StringHandler(\"C\");\n            StringHandler stringHandlerADuplicate = new StringHandler(\"A\");\n            StringHandler stringHandlerN = new StringHandler(\"N\");\n            DoubleSum aggregator = new DoubleSum();\n            aggregator.getDoubleSuppliers().add(stringHandlerA);\n            aggregator.getDoubleSuppliers().add(stringHandlerB);\n\n\n            InstanceHolder instanceHolder = new InstanceHolder();\n            instanceHolder.getNodeList().add(aggregator);\n            c.addNode(instanceHolder);\n            c.addNode(stringHandlerC);\n            c.addNode(stringHandlerN);\n        });\n\n        DoubleSum aggregator = getField(\"aggregator\");\n        StringHandler handlerC = getField(\"stringHandler_C\");\n        onEvent(\"A\");\n        assertThat(aggregator.sum, is(1.0));\n        assertThat(handlerC.value, is(0));\n        onEvent(\"A\");\n        assertThat(aggregator.sum, is(2.0));\n        assertThat(handlerC.value, is(0));\n        onEvent(\"B\");\n        assertThat(aggregator.sum, is(3.0));\n        assertThat(handlerC.value, is(0));\n        onEvent(\"C\");\n        assertThat(aggregator.sum, is(3.0));\n        assertThat(handlerC.value, is(1));\n\n        getField(\"instanceHolder\");\n    }\n\n    @Test(expected = NoSuchFieldException.class)\n    public void driveFromYaml() {\n        String config = \"nodeList:\\n\" +\n                \"- !doubleSum\\n\" +\n                \"  doubleSuppliers:\\n\" +\n                \"  - !stringHandler\\n\" +\n                \"    id: A\\n\" +\n                \"  - !stringHandler\\n\" +\n                \"    id: B\\n\" +\n                \"- !stringHandler\\n\" +\n                \"  id: C\";\n        sep(c -> {\n            Constructor constructor = new Constructor();\n            constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n            constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n            Yaml yaml = new Yaml(constructor);\n            c.addNode(yaml.loadAs(config, InstanceHolder.class));\n        });\n        DoubleSum aggregator = getField(\"aggregator\");\n        StringHandler handlerC = getField(\"stringHandler_C\");\n        onEvent(\"A\");\n        assertThat(aggregator.sum, is(1.0));\n        assertThat(handlerC.value, is(0));\n        onEvent(\"A\");\n        assertThat(aggregator.sum, is(2.0));\n        assertThat(handlerC.value, is(0));\n        onEvent(\"B\");\n        assertThat(aggregator.sum, is(3.0));\n        assertThat(handlerC.value, is(0));\n        onEvent(\"C\");\n        assertThat(aggregator.sum, is(3.0));\n        assertThat(handlerC.value, is(1));\n\n        getField(\"instanceHolder\");\n    }\n\n    @Test(expected = NoSuchFieldException.class)\n    public void driveAsListFromYaml() {\n        String config = \"\" +\n                \"- !doubleSum\\n\" +\n                \"  doubleSuppliers:\\n\" +\n                \"  - !stringHandler\\n\" +\n                \"    id: A\\n\" +\n                \"  - !stringHandler\\n\" +\n                \"    id: B\\n\" +\n                \"- !stringHandler\\n\" +\n                \"  id: C\";\n        sep(c -> {\n            Constructor constructor = new Constructor();\n            constructor.addTypeDescription(new TypeDescription(DoubleSum.class, \"!doubleSum\"));\n            constructor.addTypeDescription(new TypeDescription(StringHandler.class, \"!stringHandler\"));\n            Yaml yaml = new Yaml(constructor);\n            yaml.loadAs(\"nodeList:\\n\" + config, InstanceHolder.class).getNodeList().forEach(c::addNode);\n        });\n        DoubleSum aggregator = getField(\"aggregator\");\n        StringHandler handlerC = getField(\"stringHandler_C\");\n        onEvent(\"A\");\n        assertThat(aggregator.sum, is(1.0));\n        assertThat(handlerC.value, is(0));\n        onEvent(\"A\");\n        assertThat(aggregator.sum, is(2.0));\n        assertThat(handlerC.value, is(0));\n        onEvent(\"B\");\n        assertThat(aggregator.sum, is(3.0));\n        assertThat(handlerC.value, is(0));\n        onEvent(\"C\");\n        assertThat(aggregator.sum, is(3.0));\n        assertThat(handlerC.value, is(1));\n\n        getField(\"instanceHolder\");\n    }\n\n    @Test\n    public void buildWithYaml() {\n\n    }\n\n\n    @Data\n    @ExcludeNode\n    public static class InstanceHolder implements NamedNode {\n        private List<Object> nodeList = new ArrayList<>();\n\n        @Override\n        public String getName() {\n            return \"instanceHolder\";\n        }\n    }\n\n\n    public static class StringHandler implements DoubleSupplier, NamedNode {\n\n        private String id;\n        transient int value;\n\n        public StringHandler(String id) {\n            this.id = id;\n        }\n\n        public StringHandler() {\n        }\n\n        public String getId() {\n            return id;\n        }\n\n        public void setId(String id) {\n            this.id = id;\n        }\n\n        @OnEventHandler\n        public boolean myStringHandler(String s) {\n            value += Objects.equals(s, id) ? 1 : 0;\n            return true;\n        }\n\n        @Override\n        public double getAsDouble() {\n            return value;\n        }\n\n        public int getValue() {\n            return value;\n        }\n\n        @Override\n        public String toString() {\n            return \"StringHandler{\" +\n                    \"id='\" + id + '\\'' +\n                    \", value=\" + value +\n                    '}';\n        }\n\n        @Override\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            StringHandler that = (StringHandler) o;\n            return id.equals(that.id);\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash(id);\n        }\n\n        @Override\n        public String getName() {\n            return \"stringHandler_\" + id;\n        }\n    }\n\n\n    @Data\n    public static class DoubleSum implements NamedNode {\n\n        private List<DoubleSupplier> doubleSuppliers = new ArrayList<>();\n        double sum;\n\n        @OnParentUpdate\n        public void doubleSupplierUpdated(DoubleSupplier doubleSupplier) {\n\n        }\n\n        @OnTrigger\n        public boolean sumSuppliers() {\n            sum = doubleSuppliers.stream().mapToDouble(DoubleSupplier::getAsDouble).sum();\n            return true;\n        }\n\n        @Override\n        public String getName() {\n            return \"aggregator\";\n        }\n    }\n}\n",
            "error": "",
            "span_id": 12638267062060077761
        }
    ],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}