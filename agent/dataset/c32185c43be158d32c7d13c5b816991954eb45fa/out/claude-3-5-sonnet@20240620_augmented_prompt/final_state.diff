diff --git a/core/pom.xml b/core/pom.xml
index d72d26573..8d99f77d2 100644
--- a/core/pom.xml
+++ b/core/pom.xml
@@ -110,7 +110,7 @@
                     <artifactId>jackson-databind</artifactId>
                 </exclusion>
                 <exclusion>
-                    <groupId>org.apache.httpcomponents</groupId>
+            <groupId>org.apache.httpcomponents</groupId>
                     <artifactId>httpclient</artifactId>
                 </exclusion>
                 <exclusion>
@@ -168,9 +168,9 @@
                     <compilerArgs>
                         <arg>-Xlint:all</arg>
                     </compilerArgs>
-                    <includes>
+                <includes>
                         <include>org/nem/core/**/*.java</include>
-                    </includes>
+                </includes>
                     <testIncludes>
                         <include>org/nem/core/**/*.java</include>
                     </testIncludes>
@@ -227,11 +227,11 @@
                         <goals>
                             <goal>add-test-source</goal>
                         </goals>
-                        <configuration>
+                <configuration>
                             <sources>
                                 <source>src/it/java</source>
                             </sources>
-                        </configuration>
+                </configuration>
                     </execution>
                 </executions>
             </plugin>
@@ -240,8 +240,19 @@
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-surefire-plugin</artifactId>
                 <version>2.22.2</version>
-            </plugin>
-            <plugin>
+                <configuration>
+<argLine>
+--add-opens java.base/java.lang=ALL-UNNAMED
+--add-opens java.base/java.util=ALL-UNNAMED
+--add-opens java.base/java.security=ALL-UNNAMED
+--add-opens java.base/java.io=ALL-UNNAMED
+--add-opens java.base/java.util.jar=ALL-UNNAMED
+--add-opens java.base/sun.security.x509=ALL-UNNAMED
+--add-opens java.base/sun.security.util=ALL-UNNAMED
+</argLine>
+                </configuration>
+</plugin>
+<plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-failsafe-plugin</artifactId>
                 <version>2.22.2</version>
@@ -252,86 +263,86 @@
                 <executions>
                     <execution>
                         <id>default-integration-test</id>
-                        <goals>
+<goals>
                             <goal>integration-test</goal>
-                        </goals>
+</goals>
                     </execution>
                 </executions>
-            </plugin>
+</plugin>
 
-            <plugin>
+<plugin>
                 <groupId>com.diffplug.spotless</groupId>
                 <artifactId>spotless-maven-plugin</artifactId>
                 <version>2.28.0</version>
                 <configuration>
-                    <formats>
-                        <format>
-                            <includes>
+<formats>
+<format>
+                <includes>
                                 <include>src/**</include>
-                            </includes>
+                </includes>
                             <excludes>
                                 <exclude>src/main/resources/**</exclude>
                             </excludes>
                             <trimTrailingWhitespace/>
                             <endWithNewline/>
-                        </format>
+</format>
                     </formats>
-                    <java>
-                        <eclipse>
+<java>
+<eclipse>
                           <version>4.9.0</version>
                           <file>${project.basedir}/eclipse-formatter.xml</file>
                         </eclipse>
-                    </java>
+</java>
                 </configuration>
                 <executions>
                     <execution>
-                        <goals>
+<goals>
                             <goal>check</goal>
-                        </goals>
+</goals>
                     </execution>
                 </executions>
-            </plugin>
+</plugin>
 
-            <plugin>
+<plugin>
                 <groupId>org.jacoco</groupId>
                 <artifactId>jacoco-maven-plugin</artifactId>
                 <version>0.8.8</version>
                 <executions>
                     <execution>
-                        <goals>
+<goals>
                             <goal>prepare-agent</goal>
-                        </goals>
+</goals>
                     </execution>
                     <execution>
                         <id>jacoco-report</id>
                         <phase>test</phase>
-                        <goals>
+<goals>
                             <goal>report</goal>
-                        </goals>
+</goals>
                     </execution>
                     <!-- verify code coverage -->
                     <execution>
                         <id>jacoco-check</id>
-                        <goals>
+<goals>
                             <goal>check</goal>
-                        </goals>
-                        <configuration>
-                            <rules>
-                                <rule>
+</goals>
+                <configuration>
+<rules>
+<rule>
                                     <element>BUNDLE</element>
-                                    <limits>
-                                        <limit>
+<limits>
+<limit>
                                             <counter>LINE</counter>
                                             <value>COVEREDRATIO</value>
                                             <minimum>0.90</minimum>
-                                        </limit>
-                                    </limits>
-                                </rule>
-                            </rules>
-                        </configuration>
+</limit>
+</limits>
+</rule>
+</rules>
+                </configuration>
                     </execution>
                 </executions>
-            </plugin>
+</plugin>
         </plugins>
-    </build>
-</project>
+</build>
+</project>
\ No newline at end of file
diff --git a/core/src/test/java/org/nem/core/metadata/ApplicationMetaDataTest.java b/core/src/test/java/org/nem/core/metadata/ApplicationMetaDataTest.java
index 164a19619..81a4cdaf2 100644
--- a/core/src/test/java/org/nem/core/metadata/ApplicationMetaDataTest.java
+++ b/core/src/test/java/org/nem/core/metadata/ApplicationMetaDataTest.java
@@ -7,7 +7,7 @@ import org.mockito.Mockito;
 import org.nem.core.test.Utils;
 import org.nem.core.time.*;
 
-import java.security.cert.X509Certificate;
+import java.security.*;
 import java.util.*;
 
 public class ApplicationMetaDataTest {
@@ -34,7 +34,7 @@ public class ApplicationMetaDataTest {
 		// Arrange:
 		final TimeProvider timeProvider = Mockito.mock(TimeProvider.class);
 		Mockito.when(timeProvider.getCurrentTime()).thenReturn(new TimeInstant(100), new TimeInstant(125));
-		final X509Certificate certificate = MetaDataTestUtils.createMockCertificateWithName("CN=Someone,O=NemSoft");
+		final Certificate certificate = createMockCertificate("CN=Someone,O=NemSoft");
 
 		// Act:
 		final ApplicationMetaData metaData = new ApplicationMetaData("foo", "12.0", certificate, timeProvider);
@@ -52,7 +52,7 @@ public class ApplicationMetaDataTest {
 		// Arrange:
 		final TimeProvider timeProvider = Mockito.mock(TimeProvider.class);
 		Mockito.when(timeProvider.getCurrentTime()).thenReturn(new TimeInstant(100), new TimeInstant(125));
-		final X509Certificate certificate = MetaDataTestUtils.createMockCertificateWithName("CN=Someone,O=NemSoft");
+		final Certificate certificate = createMockCertificate("CN=Someone,O=NemSoft");
 		final ApplicationMetaData originalMetaData = new ApplicationMetaData("foo", "12.0", certificate, timeProvider);
 
 		// Act:
@@ -84,9 +84,9 @@ public class ApplicationMetaDataTest {
 	// region equals / hashCode
 
 	@SuppressWarnings("serial")
-	private static Map<String, ApplicationMetaData> createApplicationMetaDataForEqualityTests(final X509Certificate certificate) {
-		final X509Certificate otherCertificate = MetaDataTestUtils.createMockCertificateWithName("CN=SomeoneElse,O=NemSoft");
-		return new HashMap<String, ApplicationMetaData>() {
+	private static Map<String, ApplicationMetaData> createApplicationMetaDataForEqualityTests(final Certificate certificate) {
+		final Certificate otherCertificate = createMockCertificate("CN=SomeoneElse,O=NemSoft");
+		return new HashMap<>() {
 			{
 				this.put("default", new ApplicationMetaData("foo", "12.0", certificate, createTimeProvider(17)));
 				this.put("diff-name", new ApplicationMetaData("bar", "12.0", certificate, createTimeProvider(17)));
@@ -107,7 +107,7 @@ public class ApplicationMetaDataTest {
 	@Test
 	public void equalsOnlyReturnsTrueForEquivalentObjects() {
 		// Arrange:
-		final X509Certificate certificate = MetaDataTestUtils.createMockCertificateWithName("CN=Someone,O=NemSoft");
+		final Certificate certificate = createMockCertificate("CN=Someone,O=NemSoft");
 		final ApplicationMetaData metaData = new ApplicationMetaData("foo", "12.0", certificate, createTimeProvider(17));
 		final Map<String, ApplicationMetaData> infoMap = createApplicationMetaDataForEqualityTests(certificate);
 
diff --git a/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java b/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java
index a59e951b6..89cc95fae 100644
--- a/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java
+++ b/nis/src/main/java/org/nem/specific/deploy/appconfig/NisAppConfig.java
@@ -101,15 +101,16 @@ public class NisAppConfig {
 	}
 
 	@Bean(initMethod = "migrate")
-	public Flyway flyway() throws IOException {
+	public Flyway flyway(final DataSource dataSource) throws IOException {
 		final Properties prop = new Properties();
 		prop.load(NisAppConfig.class.getClassLoader().getResourceAsStream("db.properties"));
 
-		final org.flywaydb.core.Flyway flyway = new Flyway();
-		flyway.setDataSource(this.dataSource());
-		flyway.setClassLoader(NisAppConfig.class.getClassLoader());
-		flyway.setLocations(prop.getProperty("flyway.locations"));
-		flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
+		final Flyway flyway = Flyway.configure()
+			.dataSource(dataSource)
+			.classLoader(NisAppConfig.class.getClassLoader())
+			.locations(prop.getProperty("flyway.locations"))
+			.validateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")))
+			.load();
 		return flyway;
 	}
 