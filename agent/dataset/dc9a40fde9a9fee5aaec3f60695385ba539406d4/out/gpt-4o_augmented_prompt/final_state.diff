diff --git a/arex-instrumentation/dubbo/arex-dubbo-apache-v2/src/main/java/io/arex/inst/dubbo/apache/v2/DubboConsumerExtractor.java b/arex-instrumentation/dubbo/arex-dubbo-apache-v2/src/main/java/io/arex/inst/dubbo/apache/v2/DubboConsumerExtractor.java
index bf40a253..cb07d913 100644
--- a/arex-instrumentation/dubbo/arex-dubbo-apache-v2/src/main/java/io/arex/inst/dubbo/apache/v2/DubboConsumerExtractor.java
+++ b/arex-instrumentation/dubbo/arex-dubbo-apache-v2/src/main/java/io/arex/inst/dubbo/apache/v2/DubboConsumerExtractor.java
@@ -30,20 +30,16 @@ public class DubboConsumerExtractor extends DubboExtractor {
             AsyncRpcResult asyncRpcResult;
             Invocation invocation = adapter.getInvocation();
             if (result instanceof Throwable) {
-                asyncRpcResult = AsyncRpcResult.newDefaultAsyncResult((Throwable) result, invocation);
+asyncRpcResult = CompletableFuture.failedFuture((Throwable) result);
             } else {
-                asyncRpcResult = AsyncRpcResult.newDefaultAsyncResult(result, invocation);
-            }
-            mockResult = MockResult.success(ignoreMockResult, asyncRpcResult);
-            // need to set invoke mode to FUTURE if return type is CompletableFuture
-            if (invocation instanceof RpcInvocation) {
-                RpcInvocation rpcInv = (RpcInvocation) invocation;
-                rpcInv.setInvokeMode(RpcUtils.getInvokeMode(adapter.getUrl(), invocation));
-            }
+asyncRpcResult = CompletableFuture.completedFuture(result);
+-            RpcContext.getContext().setFuture(asyncRpcResult);
+-            FutureContext.getContext().setCompatibleFuture(asyncRpcResult);
++            RpcContext.getContext().setFuture(new AsyncRpcResult(asyncRpcResult, invocation));
             RpcContext.getContext().setFuture(asyncRpcResult);
             // save for 2.6.x compatibility, for example, TraceFilter in Zipkin uses com.alibaba.xxx.FutureAdapter
             FutureContext.getContext().setCompatibleFuture(asyncRpcResult);
         }
         return mockResult;
     }
-}
+}
\ No newline at end of file