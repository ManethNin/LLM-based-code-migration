{
    "validate_diffs": [],
    "compile_maven": [
        {
            "input": "```diff\n--- a/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n+++ b/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n@@ -10,7 +10,7 @@ import com.redislabs.redisgraph.ResultSet;\n import com.redislabs.redisgraph.impl.ContextCommands;\n import com.redislabs.redisgraph.impl.Utils;\n \n-import redis.clients.jedis.Client;\n+import redis.clients.jedis.Connection;\n import redis.clients.jedis.Transaction;\n import redis.clients.jedis.util.SafeEncoder;\n \n@@ -23,8 +23,8 @@ public class RedisGraphTransaction extends Transaction implements RedisGraphTran\n   private final String graphId;\n   private final ContextCommands contextCommands;\n \n-  public RedisGraphTransaction(Client client, String graphId) {\n-    super(client);\n+  public RedisGraphTransaction(Connection connection, String graphId) {\n+    super(connection);\n     this.graphId = graphId;\n     this.contextCommands = new ContextCommands();\n   }\n@@ -38,8 +38,8 @@ public class RedisGraphTransaction extends Transaction implements RedisGraphTran\n   @Override\n   public Response<ResultSet> query(String query) {\n     contextCommands.setContext(graphId);\n-    client.sendCommand(Command.GRAPH_QUERY, graphId, query);\n-    return getResponse(new Builder<ResultSet>() {\n+    getConnection().sendCommand(Command.GRAPH_QUERY, graphId, query);\n+    return appendResponse(new Builder<ResultSet>() {\n       @Override\n       public ResultSet build(Object data) {\n         return Utils.createResultSet(data);\n@@ -56,8 +56,8 @@ public class RedisGraphTransaction extends Transaction implements RedisGraphTran\n   @Override\n   public Response<ResultSet> readOnlyQuery(String query) {\n     contextCommands.setContext(graphId);\n-    client.sendCommand(Command.GRAPH_RO_QUERY, graphId, query);\n-    return getResponse(new Builder<ResultSet>() {\n+    getConnection().sendCommand(Command.GRAPH_RO_QUERY, graphId, query);\n+    return appendResponse(new Builder<ResultSet>() {\n       @Override\n       public ResultSet build(Object data) {\n         return Utils.createResultSet(data);\n@@ -77,9 +77,9 @@ public class RedisGraphTransaction extends Transaction implements RedisGraphTran\n   @Override\n   public Response<ResultSet> query(String query, long timeout) {\n     contextCommands.setContext(graphId);\n-    client.sendCommand(Command.GRAPH_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\n+    getConnection().sendCommand(Command.GRAPH_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\n \n-    return getResponse(new Builder<ResultSet>() {\n+    return appendResponse(new Builder<ResultSet>() {\n       @Override\n       public ResultSet build(Object data) {\n         return Utils.createResultSet(data);\n@@ -99,9 +99,9 @@ public class RedisGraphTransaction extends Transaction implements RedisGraphTran\n   @Override\n   public Response<ResultSet> readOnlyQuery(String query, long timeout) {\n     contextCommands.setContext(graphId);\n-    client.sendCommand(Command.GRAPH_RO_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\n+    getConnection().sendCommand(Command.GRAPH_RO_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\n \n-    return getResponse(new Builder<ResultSet>() {\n+    return appendResponse(new Builder<ResultSet>() {\n       @Override\n       public ResultSet build(Object data) {\n         return Utils.createResultSet(data);\n@@ -123,8 ",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\nprivate final String graphId;\nprivate final ContextCommands contextCommands;\npublic RedisGraphTransaction(Client client, String graphId) {\nsuper(client);\nthis.graphId = graphId;\nthis.contextCommands = new ContextCommands();\n}\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> query(String query) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_QUERY, graphId, query);\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> readOnlyQuery(String query) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_RO_QUERY, graphId, query);\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 9 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> query(String query, long timeout) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 9 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> readOnlyQuery(String query, long timeout) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_RO_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\nprivate final String graphId;\nprivate final ContextCommands contextCommands;\npublic RedisGraphTransaction(Client client, String graphId) {\nsuper(client);\nthis.graphId = graphId;\nthis.contextCommands = new ContextCommands();\n}\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> query(String query) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_QUERY, graphId, query);\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> readOnlyQuery(String query) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_RO_QUERY, graphId, query);\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 9 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> query(String query, long timeout) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 9 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> readOnlyQuery(String query, long timeout) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_RO_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```",
            "span_id": 11123440978682670655
        },
        {
            "input": "The diff failed to apply cleanly. Let me provide a more accurate diff that should apply correctly:\n\n```diff\n--- a/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n+++ b/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n@@ -7,10 +7,10 @@ import com.redislabs.redisgraph.RedisGraphTransaction;\n import com.redislabs.redisgraph.ResultSet;\n import com.redislabs.redisgraph.impl.ContextCommands;\n import com.redislabs.redisgraph.impl.Utils;\n+import redis.clients.jedis.Connection;\n import redis.clients.jedis.Transaction;\n import redis.clients.jedis.util.SafeEncoder;\n \n-import redis.clients.jedis.Client;\n import redis.clients.jedis.Response;\n import redis.clients.jedis.exceptions.JedisDataException;\n \n@@ -23,8 +23,8 @@ public class RedisGraphTransaction extends Transaction implements RedisGraphTran\n   private final String graphId;\n   private final ContextCommands contextCommands;\n \n-  public RedisGraphTransaction(Client client, String graphId) {\n-    super(client);\n+  public RedisGraphTransaction(Connection connection, String graphId) {\n+    super(connection);\n     this.graphId = graphId;\n     this.contextCommands = new ContextCommands();\n   }\n@@ -38,8 +38,8 @@ public class RedisGraphTransaction extends Transaction implements RedisGraphTran\n   @Override\n   public Response<ResultSet> query(String query) {\n     contextCommands.setContext(graphId);\n-    client.sendCommand(Command.GRAPH_QUERY, graphId, query);\n-    return getResponse(new Builder<ResultSet>() {\n+    getConnection().sendCommand(Command.GRAPH_QUERY, graphId, query);\n+    return appendResponse(new Builder<ResultSet>() {\n       @Override\n       public ResultSet build(Object data) {\n         return Utils.createResultSet(data);\n@@ -56,8 +56,8 @@ public class RedisGraphTransaction extends Transaction implements RedisGraphTran\n   @Override\n   public Response<ResultSet> readOnlyQuery(String query) {\n     contextCommands.setContext(graphId);\n-    client.sendCommand(Command.GRAPH_RO_QUERY, graphId, query);\n-    return getResponse(new Builder<ResultSet>() {\n+    getConnection().sendCommand(Command.GRAPH_RO_QUERY, graphId, query);\n+    return appendResponse(new Builder<ResultSet>() {\n       @Override\n       public ResultSet build(Object data) {\n         return Utils.createResultSet(data);\n@@ -77,9 +77,9 @@ public class RedisGraphTransaction extends Transaction implements RedisGraphTran\n   @Override\n   public Response<ResultSet> query(String query, long timeout) {\n     contextCommands.setContext(graphId);\n-    client.sendCommand(Command.GRAPH_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\n+    getConnection().sendCommand(Command.GRAPH_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\n \n-    return getResponse(new Builder<ResultSet>() {\n+    return appendResponse(new Builder<ResultSet>() {\n       @Override\n       public ResultSet build(Object data) {\n         return Utils.createResultSet(data);\n@@ -99,9 +99,9 @@ public class RedisGraphTransaction extends Transaction implements RedisGraphTran\n   @Override\n   public Response<ResultSet> readOnlyQuery(String query, long timeout) {\n     contextCommands.setContext(graphId);\n-    client.sendCommand(Command.GRAPH_RO_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\n+    getConnection().sendCommand(Command.GRAPH_RO_QUERY, graphId, query, \"TIMEOUT\", String",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\nprivate final String graphId;\nprivate final ContextCommands contextCommands;\npublic RedisGraphTransaction(Client client, String graphId) {\nsuper(client);\nthis.graphId = graphId;\nthis.contextCommands = new ContextCommands();\n}\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> query(String query) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_QUERY, graphId, query);\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> readOnlyQuery(String query) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_RO_QUERY, graphId, query);\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 9 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> query(String query, long timeout) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 4 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> readOnlyQuery(String query, long timeout) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_RO_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\nprivate final String graphId;\nprivate final ContextCommands contextCommands;\npublic RedisGraphTransaction(Client client, String graphId) {\nsuper(client);\nthis.graphId = graphId;\nthis.contextCommands = new ContextCommands();\n}\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> query(String query) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_QUERY, graphId, query);\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> readOnlyQuery(String query) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_RO_QUERY, graphId, query);\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 9 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> query(String query, long timeout) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\nreturn getResponse(new Builder<ResultSet>() {\n@Override\npublic ResultSet build(Object data) {\nreturn Utils.createResultSet(data);\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 4 exact lines in a row:\n```\n@Override\npublic Response<ResultSet> readOnlyQuery(String query, long timeout) {\ncontextCommands.setContext(graphId);\nclient.sendCommand(Command.GRAPH_RO_QUERY, graphId, query, \"TIMEOUT\", String.valueOf(timeout));\n```",
            "span_id": 17986304325224643441
        },
        {
            "input": "Now that we have the actual content of the file, let's make the necessary changes to update it for the new Jedis version:\n\n```diff\n--- a/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n+++ b/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n@@ -7,7 +7,7 @@ import com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\n import redis.clients.jedis.Builder;\n import redis.clients.jedis.BuilderFactory;\n-import redis.clients.jedis.Client;\n+import redis.clients.jedis.Connection;\n import redis.clients.jedis.Response;\n import redis.clients.jedis.Transaction;\n \n@@ -23,9 +23,9 @@ public class RedisGraphTransaction extends Transaction\n     private final RedisGraph redisGraph;\n     private RedisGraphCaches caches;\n \n-    public RedisGraphTransaction(Client client, RedisGraph redisGraph) {\n+    public RedisGraphTransaction(Connection connection, RedisGraph redisGraph) {\n         // init as in Jedis\n-        super(client);\n+        super(connection);\n \n         this.redisGraph = redisGraph;\n     }\n@@ -38,7 +38,7 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> query(String graphId, String query) {\n-        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n+        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n@@ -56,7 +56,7 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n-        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n+        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n@@ -77,7 +77,7 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> query(String graphId, String query, long timeout) {\n-        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n+        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 Long.toString(timeout));\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n@@ -98,7 +98,7 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n-        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n+        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 Long.toString(timeout));\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n@@ -121,7 +121,7 @@ public class RedisGraphTransaction extends Transaction\n     @Override\n     public Response<ResultSet> query(String graphId, String query, Object... args) {\n         String preparedQuery = Utils.prepareQuery(query, args);\n-        client.sendCommand(RedisGraphCommand.QUERY, graphI",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "cannot find symbol\n",
                "updated_files": {
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java": "package com.redislabs.redisgraph.impl.api;\n\nimport com.redislabs.redisgraph.RedisGraph;\nimport com.redislabs.redisgraph.ResultSet;\nimport com.redislabs.redisgraph.impl.Utils;\nimport com.redislabs.redisgraph.impl.graph_cache.RedisGraphCaches;\nimport com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\nimport redis.clients.jedis.Builder;\nimport redis.clients.jedis.BuilderFactory;\nimport redis.clients.jedis.Connection;\nimport redis.clients.jedis.Response;\nimport redis.clients.jedis.Transaction;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * This class is extending Jedis Transaction\n */\npublic class RedisGraphTransaction extends Transaction\n        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder {\n\n    private final RedisGraph redisGraph;\n    private RedisGraphCaches caches;\n\n    public RedisGraphTransaction(Connection connection, RedisGraph redisGraph) {\n        // init as in Jedis\n        super(connection);\n\n        this.redisGraph = redisGraph;\n    }\n\n    /**\n     * Execute a Cypher query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query) {\n        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-oly query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, long timeout) {\n        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-only query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with arguments\n     *\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param args\n     * @return response with a result set\n     * @deprecated use {@link #query(String, String, Map)} instead.\n     */\n    @Deprecated\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Object... args) {\n        String preparedQuery = Utils.prepareQuery(query, args);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n                Utils.TIMEOUT_STRING, Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Invokes stored procedures without arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure) {\n        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invokes stored procedure with arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @param args procedure arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {\n        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invoke a stored procedure, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure - procedure to execute\n     * @param args - procedure arguments\n     * @param kwargs - procedure output arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,\n            Map<String, List<String>> kwargs) {\n        String preparedProcedure = Utils.prepareProcedure(procedure, args, kwargs);\n        return query(graphId, preparedProcedure);\n    }\n\n    /**\n     * Deletes the entire graph, in multi/exec context\n     * @param graphId graph to delete\n     * @return response with the deletion running time statistics\n     */\n    public Response<String> deleteGraph(String graphId) {\n        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING);\n        caches.removeGraphCache(graphId);\n        return response;\n    }\n\n    @Override\n    public void setRedisGraphCaches(RedisGraphCaches caches) {\n        this.caches = caches;\n    }\n\n}\n"
                },
                "compile_error_details": {
                    "src/main/java/com/redislabs/redisgraph/RedisGraphTransaction.java": {
                        "4": {
                            "lines": [
                                {
                                    "line_no": 3,
                                    "content": "import redis.clients.jedis.Response;"
                                },
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[4,36] cannot find symbol\nsymbol: class BasicRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[4,36] cannot find symbol\n"
                            ]
                        },
                        "5": {
                            "lines": [
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[5,36] cannot find symbol\nsymbol: class BinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[5,36] cannot find symbol\n"
                            ]
                        },
                        "6": {
                            "lines": [
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[6,36] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[6,36] cannot find symbol\n"
                            ]
                        },
                        "7": {
                            "lines": [
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[7,36] cannot find symbol\n",
                                "[7,36] cannot find symbol\nsymbol: class ClusterPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "8": {
                            "lines": [
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[8,36] cannot find symbol\n",
                                "[8,36] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "9": {
                            "lines": [
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[9,36] cannot find symbol\n",
                                "[9,36] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "10": {
                            "lines": [
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[10,36] cannot find symbol\n",
                                "[10,36] cannot find symbol\nsymbol: class RedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 12,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[11,36] cannot find symbol\n",
                                "[11,36] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "21": {
                            "lines": [
                                {
                                    "line_no": 20,
                                    "content": "public interface RedisGraphTransaction extends"
                                },
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[21,9] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\n",
                                "[21,9] cannot find symbol\n"
                            ]
                        },
                        "22": {
                            "lines": [
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[22,9] cannot find symbol\n",
                                "[22,35] cannot find symbol\nsymbol: class ClusterPipeline\n",
                                "[22,35] cannot find symbol\n",
                                "[22,9] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\n"
                            ]
                        },
                        "23": {
                            "lines": [
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                }
                            ],
                            "error_texts": [
                                "[23,42] cannot find symbol\n",
                                "[23,9] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\n",
                                "[23,9] cannot find symbol\n",
                                "[23,42] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\n"
                            ]
                        },
                        "24": {
                            "lines": [
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                },
                                {
                                    "line_no": 25,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[24,9] cannot find symbol\n",
                                "[24,29] cannot find symbol\nsymbol: class BinaryRedisPipeline\n",
                                "[24,50] cannot find symbol\n",
                                "[24,9] cannot find symbol\nsymbol: class BasicRedisPipeline\n",
                                "[24,29] cannot find symbol\n",
                                "[24,50] cannot find symbol\nsymbol: class RedisPipeline\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/RedisGraphPipeline.java": {
                        "4": {
                            "lines": [
                                {
                                    "line_no": 3,
                                    "content": "import redis.clients.jedis.Response;"
                                },
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[4,36] cannot find symbol\nsymbol: class BasicRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[4,36] cannot find symbol\n"
                            ]
                        },
                        "5": {
                            "lines": [
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[5,36] cannot find symbol\nsymbol: class BinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[5,36] cannot find symbol\n"
                            ]
                        },
                        "6": {
                            "lines": [
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[6,36] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[6,36] cannot find symbol\n"
                            ]
                        },
                        "7": {
                            "lines": [
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[7,36] cannot find symbol\n",
                                "[7,36] cannot find symbol\nsymbol: class ClusterPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "8": {
                            "lines": [
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[8,36] cannot find symbol\n",
                                "[8,36] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "9": {
                            "lines": [
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[9,36] cannot find symbol\n",
                                "[9,36] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "10": {
                            "lines": [
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[10,36] cannot find symbol\n",
                                "[10,36] cannot find symbol\nsymbol: class RedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 12,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[11,36] cannot find symbol\n",
                                "[11,36] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "21": {
                            "lines": [
                                {
                                    "line_no": 20,
                                    "content": "public interface RedisGraphPipeline extends"
                                },
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[21,9] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\n",
                                "[21,9] cannot find symbol\n"
                            ]
                        },
                        "22": {
                            "lines": [
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[22,9] cannot find symbol\n",
                                "[22,35] cannot find symbol\nsymbol: class ClusterPipeline\n",
                                "[22,35] cannot find symbol\n",
                                "[22,9] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\n"
                            ]
                        },
                        "23": {
                            "lines": [
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                }
                            ],
                            "error_texts": [
                                "[23,42] cannot find symbol\n",
                                "[23,9] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\n",
                                "[23,9] cannot find symbol\n",
                                "[23,42] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\n"
                            ]
                        },
                        "24": {
                            "lines": [
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                },
                                {
                                    "line_no": 25,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[24,9] cannot find symbol\n",
                                "[24,29] cannot find symbol\nsymbol: class BinaryRedisPipeline\n",
                                "[24,50] cannot find symbol\n",
                                "[24,9] cannot find symbol\nsymbol: class BasicRedisPipeline\n",
                                "[24,29] cannot find symbol\n",
                                "[24,50] cannot find symbol\nsymbol: class RedisPipeline\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/impl/api/ContextedRedisGraph.java": {
                        "12": {
                            "lines": [
                                {
                                    "line_no": 11,
                                    "content": ""
                                },
                                {
                                    "line_no": 12,
                                    "content": "import redis.clients.jedis.Client;"
                                },
                                {
                                    "line_no": 13,
                                    "content": "import redis.clients.jedis.Jedis;"
                                }
                            ],
                            "error_texts": [
                                "[12,27] cannot find symbol\n",
                                "[12,27] cannot find symbol\nsymbol: class Client\nlocation: package redis.clients.jedis\n"
                            ]
                        },
                        "142": {
                            "lines": [
                                {
                                    "line_no": 141,
                                    "content": "        Jedis jedis = getConnection();"
                                },
                                {
                                    "line_no": 142,
                                    "content": "        Client client = jedis.getClient();"
                                },
                                {
                                    "line_no": 143,
                                    "content": "        client.multi();"
                                }
                            ],
                            "error_texts": [
                                "[142,9] cannot find symbol\n",
                                "[142,9] cannot find symbol\nsymbol: class Client\nlocation: class com.redislabs.redisgraph.impl.api.ContextedRedisGraph\n"
                            ]
                        },
                        "157": {
                            "lines": [
                                {
                                    "line_no": 156,
                                    "content": "        Jedis jedis = getConnection();"
                                },
                                {
                                    "line_no": 157,
                                    "content": "        Client client = jedis.getClient();"
                                },
                                {
                                    "line_no": 158,
                                    "content": "        RedisGraphPipeline pipeline = new RedisGraphPipeline(client, this);"
                                }
                            ],
                            "error_texts": [
                                "[157,9] cannot find symbol\n",
                                "[157,9] cannot find symbol\nsymbol: class Client\nlocation: class com.redislabs.redisgraph.impl.api.ContextedRedisGraph\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java": {
                        "10": {
                            "lines": [
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.BuilderFactory;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.Client;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.Pipeline;"
                                }
                            ],
                            "error_texts": [
                                "[10,27] cannot find symbol\nsymbol: class Client\nlocation: package redis.clients.jedis\n",
                                "[10,27] cannot find symbol\n"
                            ]
                        },
                        "26": {
                            "lines": [
                                {
                                    "line_no": 25,
                                    "content": ""
                                },
                                {
                                    "line_no": 26,
                                    "content": "    public RedisGraphPipeline(Client client, RedisGraph redisGraph){"
                                },
                                {
                                    "line_no": 27,
                                    "content": "        super.setClient(client);"
                                }
                            ],
                            "error_texts": [
                                "[26,31] cannot find symbol\nsymbol: class Client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[26,68] no suitable constructor found for Pipeline(no arguments)\nconstructor redis.clients.jedis.Pipeline.Pipeline(redis.clients.jedis.Connection) is not applicable\n(actual and formal argument lists differ in length)\nconstructor redis.clients.jedis.Pipeline.Pipeline(redis.clients.jedis.Jedis) is not applicable\n(actual and formal argument lists differ in length)\n",
                                "[26,68] no suitable constructor found for Pipeline(no arguments)\n",
                                "[26,31] cannot find symbol\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "    public Response<ResultSet> query(String graphId, String query) {"
                                },
                                {
                                    "line_no": 39,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[39,9] cannot find symbol\n",
                                "[39,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "40": {
                            "lines": [
                                {
                                    "line_no": 39,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 41,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[40,16] cannot find symbol\n",
                                "[40,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "57": {
                            "lines": [
                                {
                                    "line_no": 56,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query) {"
                                },
                                {
                                    "line_no": 57,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 58,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[57,9] cannot find symbol\n",
                                "[57,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "58": {
                            "lines": [
                                {
                                    "line_no": 57,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 58,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 59,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[58,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[58,16] cannot find symbol\n"
                            ]
                        },
                        "78": {
                            "lines": [
                                {
                                    "line_no": 77,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 78,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 79,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[78,9] cannot find symbol\n",
                                "[78,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 80,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 81,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[80,16] cannot find symbol\n",
                                "[80,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "100": {
                            "lines": [
                                {
                                    "line_no": 99,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 100,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 101,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[100,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[100,9] cannot find symbol\n"
                            ]
                        },
                        "102": {
                            "lines": [
                                {
                                    "line_no": 101,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 102,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 103,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[102,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[102,16] cannot find symbol\n"
                            ]
                        },
                        "121": {
                            "lines": [
                                {
                                    "line_no": 120,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 121,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 122,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[121,9] cannot find symbol\n",
                                "[121,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "122": {
                            "lines": [
                                {
                                    "line_no": 121,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 122,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 123,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[122,16] cannot find symbol\n",
                                "[122,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "141": {
                            "lines": [
                                {
                                    "line_no": 140,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 141,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 142,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[141,9] cannot find symbol\n",
                                "[141,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "142": {
                            "lines": [
                                {
                                    "line_no": 141,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 142,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 143,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[142,16] cannot find symbol\n",
                                "[142,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "165": {
                            "lines": [
                                {
                                    "line_no": 164,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 165,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 166,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[165,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[165,9] cannot find symbol\n"
                            ]
                        },
                        "167": {
                            "lines": [
                                {
                                    "line_no": 166,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 167,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 168,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[167,16] cannot find symbol\n",
                                "[167,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "190": {
                            "lines": [
                                {
                                    "line_no": 189,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 190,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,"
                                },
                                {
                                    "line_no": 191,
                                    "content": "                Utils.TIMEOUT_STRING,"
                                }
                            ],
                            "error_texts": [
                                "[190,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[190,9] cannot find symbol\n"
                            ]
                        },
                        "193": {
                            "lines": [
                                {
                                    "line_no": 192,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 193,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 194,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[193,16] cannot find symbol\n",
                                "[193,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "246": {
                            "lines": [
                                {
                                    "line_no": 245,
                                    "content": ""
                                },
                                {
                                    "line_no": 246,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 247,
                                    "content": "        Response<String> response =  getResponse(BuilderFactory.STRING);"
                                }
                            ],
                            "error_texts": [
                                "[246,9] cannot find symbol\n",
                                "[246,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "247": {
                            "lines": [
                                {
                                    "line_no": 246,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 247,
                                    "content": "        Response<String> response =  getResponse(BuilderFactory.STRING);"
                                },
                                {
                                    "line_no": 248,
                                    "content": "        caches.removeGraphCache(graphId);"
                                }
                            ],
                            "error_texts": [
                                "[247,38] cannot find symbol\n",
                                "[247,38] cannot find symbol\nsymbol: method getResponse(redis.clients.jedis.Builder<java.lang.String>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java": {
                        "20": {
                            "lines": [
                                {
                                    "line_no": 19,
                                    "content": " */"
                                },
                                {
                                    "line_no": 20,
                                    "content": "public class RedisGraphTransaction extends Transaction"
                                },
                                {
                                    "line_no": 21,
                                    "content": "        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder {"
                                }
                            ],
                            "error_texts": [
                                "[20,8] com.redislabs.redisgraph.impl.api.RedisGraphTransaction is not abstract and does not override abstract method execGetResponse() in com.redislabs.redisgraph.RedisGraphTransaction\n"
                            ]
                        },
                        "41": {
                            "lines": [
                                {
                                    "line_no": 40,
                                    "content": "    public Response<ResultSet> query(String graphId, String query) {"
                                },
                                {
                                    "line_no": 41,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 42,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[41,9] cannot find symbol\nsymbol: method getConnection()\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[41,9] cannot find symbol\n"
                            ]
                        },
                        "42": {
                            "lines": [
                                {
                                    "line_no": 41,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 42,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 43,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[42,16] cannot find symbol\n",
                                "[42,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "59": {
                            "lines": [
                                {
                                    "line_no": 58,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query) {"
                                },
                                {
                                    "line_no": 59,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 60,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[59,9] cannot find symbol\nsymbol: method getConnection()\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[59,9] cannot find symbol\n"
                            ]
                        },
                        "60": {
                            "lines": [
                                {
                                    "line_no": 59,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 60,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 61,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[60,16] cannot find symbol\n",
                                "[60,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 80,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 81,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[80,9] cannot find symbol\nsymbol: method getConnection()\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[80,9] cannot find symbol\n"
                            ]
                        },
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 82,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 83,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[82,16] cannot find symbol\n",
                                "[82,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "102": {
                            "lines": [
                                {
                                    "line_no": 101,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 102,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 103,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[102,9] cannot find symbol\nsymbol: method getConnection()\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[102,9] cannot find symbol\n"
                            ]
                        },
                        "104": {
                            "lines": [
                                {
                                    "line_no": 103,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 104,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 105,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[104,16] cannot find symbol\n",
                                "[104,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "126": {
                            "lines": [
                                {
                                    "line_no": 125,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, args);"
                                },
                                {
                                    "line_no": 126,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 127,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[126,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[126,9] cannot find symbol\n"
                            ]
                        },
                        "127": {
                            "lines": [
                                {
                                    "line_no": 126,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 127,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 128,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[127,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[127,16] cannot find symbol\n"
                            ]
                        },
                        "146": {
                            "lines": [
                                {
                                    "line_no": 145,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 146,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 147,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[146,9] cannot find symbol\n",
                                "[146,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "147": {
                            "lines": [
                                {
                                    "line_no": 146,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 147,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 148,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[147,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[147,16] cannot find symbol\n"
                            ]
                        },
                        "166": {
                            "lines": [
                                {
                                    "line_no": 165,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 166,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 167,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[166,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[166,9] cannot find symbol\n"
                            ]
                        },
                        "167": {
                            "lines": [
                                {
                                    "line_no": 166,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 167,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 168,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[167,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[167,16] cannot find symbol\n"
                            ]
                        },
                        "189": {
                            "lines": [
                                {
                                    "line_no": 188,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 189,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 190,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[189,9] cannot find symbol\n",
                                "[189,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "191": {
                            "lines": [
                                {
                                    "line_no": 190,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 191,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 192,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[191,16] cannot find symbol\n",
                                "[191,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "213": {
                            "lines": [
                                {
                                    "line_no": 212,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 213,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,"
                                },
                                {
                                    "line_no": 214,
                                    "content": "                Utils.TIMEOUT_STRING, Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[213,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[213,9] cannot find symbol\n"
                            ]
                        },
                        "215": {
                            "lines": [
                                {
                                    "line_no": 214,
                                    "content": "                Utils.TIMEOUT_STRING, Long.toString(timeout));"
                                },
                                {
                                    "line_no": 215,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 216,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[215,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[215,16] cannot find symbol\n"
                            ]
                        },
                        "265": {
                            "lines": [
                                {
                                    "line_no": 264,
                                    "content": "    public Response<String> deleteGraph(String graphId) {"
                                },
                                {
                                    "line_no": 265,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 266,
                                    "content": "        Response<String> response = getResponse(BuilderFactory.STRING);"
                                }
                            ],
                            "error_texts": [
                                "[265,9] cannot find symbol\n",
                                "[265,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "266": {
                            "lines": [
                                {
                                    "line_no": 265,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 266,
                                    "content": "        Response<String> response = getResponse(BuilderFactory.STRING);"
                                },
                                {
                                    "line_no": 267,
                                    "content": "        caches.removeGraphCache(graphId);"
                                }
                            ],
                            "error_texts": [
                                "[266,37] cannot find symbol\nsymbol: method getResponse(redis.clients.jedis.Builder<java.lang.String>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[266,37] cannot find symbol\n"
                            ]
                        }
                    }
                }
            },
            "error": "cannot find symbol\n",
            "span_id": 1931803817095076442
        },
        {
            "input": "I apologize for the confusion. It seems that the changes we made were not sufficient to resolve all the issues. Let's make a more comprehensive set of changes to address the remaining problems:\n\n```diff\n--- a/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n+++ b/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n@@ -7,7 +7,7 @@ import com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\n import redis.clients.jedis.Builder;\n import redis.clients.jedis.BuilderFactory;\n-import redis.clients.jedis.Client;\n+import redis.clients.jedis.Connection;\n import redis.clients.jedis.Response;\n import redis.clients.jedis.Transaction;\n \n@@ -23,9 +23,9 @@ public class RedisGraphTransaction extends Transaction\n     private final RedisGraph redisGraph;\n     private RedisGraphCaches caches;\n \n-    public RedisGraphTransaction(Client client, RedisGraph redisGraph) {\n+    public RedisGraphTransaction(Connection connection, RedisGraph redisGraph) {\n         // init as in Jedis\n-        super(client);\n+        super(connection);\n \n         this.redisGraph = redisGraph;\n     }\n@@ -38,8 +38,8 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> query(String graphId, String query) {\n-        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n-        return getResponse(new Builder<ResultSet>() {\n+        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n+        return appendResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -56,8 +56,8 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n-        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n-        return getResponse(new Builder<ResultSet>() {\n+        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n+        return appendResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -77,9 +77,9 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> query(String graphId, String query, long timeout) {\n-        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n+        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 Long.toString(timeout));\n-        return getResponse(new Builder<ResultSet>() {\n+        return appendResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -98,9 +98,9 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n-        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n+        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 Long.toString(timeout));\n-        return getResponse(new Builder<ResultSet>() {",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\n*/\n@Override\npublic Response<ResultSet> readOnlyQuery(String graphId, String query) {\nclient.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\nreturn getResponse(new Builder<ResultSet>() {\n@SuppressWarnings(\"unchecked\")\n@Override\npublic ResultSet build(Object o) {\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 9 exact lines in a row:\n```\n*/\n@Override\npublic Response<ResultSet> query(String graphId, String query, long timeout) {\nclient.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\nLong.toString(timeout));\nreturn getResponse(new Builder<ResultSet>() {\n@SuppressWarnings(\"unchecked\")\n@Override\npublic ResultSet build(Object o) {\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 5 exact lines in a row:\n```\n*/\n@Override\npublic Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\nclient.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\nLong.toString(timeout));\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\n*/\n@Override\npublic Response<ResultSet> readOnlyQuery(String graphId, String query) {\nclient.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\nreturn getResponse(new Builder<ResultSet>() {\n@SuppressWarnings(\"unchecked\")\n@Override\npublic ResultSet build(Object o) {\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 9 exact lines in a row:\n```\n*/\n@Override\npublic Response<ResultSet> query(String graphId, String query, long timeout) {\nclient.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\nLong.toString(timeout));\nreturn getResponse(new Builder<ResultSet>() {\n@SuppressWarnings(\"unchecked\")\n@Override\npublic ResultSet build(Object o) {\n```\nUnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 5 exact lines in a row:\n```\n*/\n@Override\npublic Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\nclient.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\nLong.toString(timeout));\n```",
            "span_id": 13573147470633652610
        },
        {
            "input": "Now that we have the actual content of the file, let's make the necessary changes to update it for the new Jedis version:\n\n```diff\n--- a/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n+++ b/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n@@ -39,7 +39,7 @@ public class RedisGraphTransaction extends Transaction\n     @Override\n     public Response<ResultSet> query(String graphId, String query) {\n         getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n-        return getResponse(new Builder<ResultSet>() {\n+        return appendResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -58,7 +58,7 @@ public class RedisGraphTransaction extends Transaction\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n         getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n-        return getResponse(new Builder<ResultSet>() {\n+        return appendResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -80,7 +80,7 @@ public class RedisGraphTransaction extends Transaction\n     public Response<ResultSet> query(String graphId, String query, long timeout) {\n         getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 Long.toString(timeout));\n-        return getResponse(new Builder<ResultSet>() {\n+        return appendResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -102,7 +102,7 @@ public class RedisGraphTransaction extends Transaction\n     public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n         getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 Long.toString(timeout));\n-        return getResponse(new Builder<ResultSet>() {\n+        return appendResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -124,8 +124,8 @@ public class RedisGraphTransaction extends Transaction\n     @Override\n     public Response<ResultSet> query(String graphId, String query, Object... args) {\n         String preparedQuery = Utils.prepareQuery(query, args);\n-        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n-        return getResponse(new Builder<ResultSet>() {\n+        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n+        return appendResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -144,8 +144,8 @@ public class RedisGraphTransaction extends Transaction\n     @Override\n     public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n         String preparedQuery = Utils.prepareQuery(query, params);\n-        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n-        return getResponse(new Builder<ResultSet>() {\n+        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n+        return appendResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "cannot find symbol\n",
                "updated_files": {
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java": "package com.redislabs.redisgraph.impl.api;\n\nimport com.redislabs.redisgraph.RedisGraph;\nimport com.redislabs.redisgraph.ResultSet;\nimport com.redislabs.redisgraph.impl.Utils;\nimport com.redislabs.redisgraph.impl.graph_cache.RedisGraphCaches;\nimport com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\nimport redis.clients.jedis.Builder;\nimport redis.clients.jedis.BuilderFactory;\nimport redis.clients.jedis.Connection;\nimport redis.clients.jedis.Response;\nimport redis.clients.jedis.Transaction;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * This class is extending Jedis Transaction\n */\npublic class RedisGraphTransaction extends Transaction\n        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder {\n\n    private final RedisGraph redisGraph;\n    private RedisGraphCaches caches;\n\n    public RedisGraphTransaction(Connection connection, RedisGraph redisGraph) {\n        // init as in Jedis\n        super(connection);\n\n        this.redisGraph = redisGraph;\n    }\n\n    /**\n     * Execute a Cypher query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query) {\n        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return appendResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-oly query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return appendResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, long timeout) {\n        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return appendResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-only query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return appendResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with arguments\n     *\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param args\n     * @return response with a result set\n     * @deprecated use {@link #query(String, String, Map)} instead.\n     */\n    @Deprecated\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Object... args) {\n        String preparedQuery = Utils.prepareQuery(query, args);\n        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return appendResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return appendResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n                Utils.TIMEOUT_STRING, Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Invokes stored procedures without arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure) {\n        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invokes stored procedure with arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @param args procedure arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {\n        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invoke a stored procedure, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure - procedure to execute\n     * @param args - procedure arguments\n     * @param kwargs - procedure output arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,\n            Map<String, List<String>> kwargs) {\n        String preparedProcedure = Utils.prepareProcedure(procedure, args, kwargs);\n        return query(graphId, preparedProcedure);\n    }\n\n    /**\n     * Deletes the entire graph, in multi/exec context\n     * @param graphId graph to delete\n     * @return response with the deletion running time statistics\n     */\n    public Response<String> deleteGraph(String graphId) {\n        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING);\n        caches.removeGraphCache(graphId);\n        return response;\n    }\n\n    @Override\n    public void setRedisGraphCaches(RedisGraphCaches caches) {\n        this.caches = caches;\n    }\n\n}\n"
                },
                "compile_error_details": {
                    "src/main/java/com/redislabs/redisgraph/RedisGraphTransaction.java": {
                        "4": {
                            "lines": [
                                {
                                    "line_no": 3,
                                    "content": "import redis.clients.jedis.Response;"
                                },
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[4,36] cannot find symbol\nsymbol: class BasicRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[4,36] cannot find symbol\n"
                            ]
                        },
                        "5": {
                            "lines": [
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[5,36] cannot find symbol\nsymbol: class BinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[5,36] cannot find symbol\n"
                            ]
                        },
                        "6": {
                            "lines": [
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[6,36] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[6,36] cannot find symbol\n"
                            ]
                        },
                        "7": {
                            "lines": [
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[7,36] cannot find symbol\n",
                                "[7,36] cannot find symbol\nsymbol: class ClusterPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "8": {
                            "lines": [
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[8,36] cannot find symbol\n",
                                "[8,36] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "9": {
                            "lines": [
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[9,36] cannot find symbol\n",
                                "[9,36] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "10": {
                            "lines": [
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[10,36] cannot find symbol\n",
                                "[10,36] cannot find symbol\nsymbol: class RedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 12,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[11,36] cannot find symbol\n",
                                "[11,36] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "21": {
                            "lines": [
                                {
                                    "line_no": 20,
                                    "content": "public interface RedisGraphTransaction extends"
                                },
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[21,9] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\n",
                                "[21,9] cannot find symbol\n"
                            ]
                        },
                        "22": {
                            "lines": [
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[22,9] cannot find symbol\n",
                                "[22,35] cannot find symbol\nsymbol: class ClusterPipeline\n",
                                "[22,35] cannot find symbol\n",
                                "[22,9] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\n"
                            ]
                        },
                        "23": {
                            "lines": [
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                }
                            ],
                            "error_texts": [
                                "[23,42] cannot find symbol\n",
                                "[23,9] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\n",
                                "[23,9] cannot find symbol\n",
                                "[23,42] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\n"
                            ]
                        },
                        "24": {
                            "lines": [
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                },
                                {
                                    "line_no": 25,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[24,9] cannot find symbol\n",
                                "[24,29] cannot find symbol\nsymbol: class BinaryRedisPipeline\n",
                                "[24,50] cannot find symbol\n",
                                "[24,9] cannot find symbol\nsymbol: class BasicRedisPipeline\n",
                                "[24,29] cannot find symbol\n",
                                "[24,50] cannot find symbol\nsymbol: class RedisPipeline\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/RedisGraphPipeline.java": {
                        "4": {
                            "lines": [
                                {
                                    "line_no": 3,
                                    "content": "import redis.clients.jedis.Response;"
                                },
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[4,36] cannot find symbol\nsymbol: class BasicRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[4,36] cannot find symbol\n"
                            ]
                        },
                        "5": {
                            "lines": [
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[5,36] cannot find symbol\nsymbol: class BinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[5,36] cannot find symbol\n"
                            ]
                        },
                        "6": {
                            "lines": [
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[6,36] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[6,36] cannot find symbol\n"
                            ]
                        },
                        "7": {
                            "lines": [
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[7,36] cannot find symbol\n",
                                "[7,36] cannot find symbol\nsymbol: class ClusterPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "8": {
                            "lines": [
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[8,36] cannot find symbol\n",
                                "[8,36] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "9": {
                            "lines": [
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[9,36] cannot find symbol\n",
                                "[9,36] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "10": {
                            "lines": [
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[10,36] cannot find symbol\n",
                                "[10,36] cannot find symbol\nsymbol: class RedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 12,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[11,36] cannot find symbol\n",
                                "[11,36] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "21": {
                            "lines": [
                                {
                                    "line_no": 20,
                                    "content": "public interface RedisGraphPipeline extends"
                                },
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[21,9] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\n",
                                "[21,9] cannot find symbol\n"
                            ]
                        },
                        "22": {
                            "lines": [
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[22,9] cannot find symbol\n",
                                "[22,35] cannot find symbol\nsymbol: class ClusterPipeline\n",
                                "[22,35] cannot find symbol\n",
                                "[22,9] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\n"
                            ]
                        },
                        "23": {
                            "lines": [
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                }
                            ],
                            "error_texts": [
                                "[23,42] cannot find symbol\n",
                                "[23,9] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\n",
                                "[23,9] cannot find symbol\n",
                                "[23,42] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\n"
                            ]
                        },
                        "24": {
                            "lines": [
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                },
                                {
                                    "line_no": 25,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[24,9] cannot find symbol\n",
                                "[24,29] cannot find symbol\nsymbol: class BinaryRedisPipeline\n",
                                "[24,50] cannot find symbol\n",
                                "[24,9] cannot find symbol\nsymbol: class BasicRedisPipeline\n",
                                "[24,29] cannot find symbol\n",
                                "[24,50] cannot find symbol\nsymbol: class RedisPipeline\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/impl/api/ContextedRedisGraph.java": {
                        "12": {
                            "lines": [
                                {
                                    "line_no": 11,
                                    "content": ""
                                },
                                {
                                    "line_no": 12,
                                    "content": "import redis.clients.jedis.Client;"
                                },
                                {
                                    "line_no": 13,
                                    "content": "import redis.clients.jedis.Jedis;"
                                }
                            ],
                            "error_texts": [
                                "[12,27] cannot find symbol\n",
                                "[12,27] cannot find symbol\nsymbol: class Client\nlocation: package redis.clients.jedis\n"
                            ]
                        },
                        "142": {
                            "lines": [
                                {
                                    "line_no": 141,
                                    "content": "        Jedis jedis = getConnection();"
                                },
                                {
                                    "line_no": 142,
                                    "content": "        Client client = jedis.getClient();"
                                },
                                {
                                    "line_no": 143,
                                    "content": "        client.multi();"
                                }
                            ],
                            "error_texts": [
                                "[142,9] cannot find symbol\n",
                                "[142,9] cannot find symbol\nsymbol: class Client\nlocation: class com.redislabs.redisgraph.impl.api.ContextedRedisGraph\n"
                            ]
                        },
                        "157": {
                            "lines": [
                                {
                                    "line_no": 156,
                                    "content": "        Jedis jedis = getConnection();"
                                },
                                {
                                    "line_no": 157,
                                    "content": "        Client client = jedis.getClient();"
                                },
                                {
                                    "line_no": 158,
                                    "content": "        RedisGraphPipeline pipeline = new RedisGraphPipeline(client, this);"
                                }
                            ],
                            "error_texts": [
                                "[157,9] cannot find symbol\n",
                                "[157,9] cannot find symbol\nsymbol: class Client\nlocation: class com.redislabs.redisgraph.impl.api.ContextedRedisGraph\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java": {
                        "10": {
                            "lines": [
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.BuilderFactory;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.Client;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.Pipeline;"
                                }
                            ],
                            "error_texts": [
                                "[10,27] cannot find symbol\nsymbol: class Client\nlocation: package redis.clients.jedis\n",
                                "[10,27] cannot find symbol\n"
                            ]
                        },
                        "26": {
                            "lines": [
                                {
                                    "line_no": 25,
                                    "content": ""
                                },
                                {
                                    "line_no": 26,
                                    "content": "    public RedisGraphPipeline(Client client, RedisGraph redisGraph){"
                                },
                                {
                                    "line_no": 27,
                                    "content": "        super.setClient(client);"
                                }
                            ],
                            "error_texts": [
                                "[26,31] cannot find symbol\nsymbol: class Client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[26,68] no suitable constructor found for Pipeline(no arguments)\nconstructor redis.clients.jedis.Pipeline.Pipeline(redis.clients.jedis.Connection) is not applicable\n(actual and formal argument lists differ in length)\nconstructor redis.clients.jedis.Pipeline.Pipeline(redis.clients.jedis.Jedis) is not applicable\n(actual and formal argument lists differ in length)\n",
                                "[26,68] no suitable constructor found for Pipeline(no arguments)\n",
                                "[26,31] cannot find symbol\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "    public Response<ResultSet> query(String graphId, String query) {"
                                },
                                {
                                    "line_no": 39,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[39,9] cannot find symbol\n",
                                "[39,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "40": {
                            "lines": [
                                {
                                    "line_no": 39,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 41,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[40,16] cannot find symbol\n",
                                "[40,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "57": {
                            "lines": [
                                {
                                    "line_no": 56,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query) {"
                                },
                                {
                                    "line_no": 57,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 58,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[57,9] cannot find symbol\n",
                                "[57,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "58": {
                            "lines": [
                                {
                                    "line_no": 57,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 58,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 59,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[58,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[58,16] cannot find symbol\n"
                            ]
                        },
                        "78": {
                            "lines": [
                                {
                                    "line_no": 77,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 78,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 79,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[78,9] cannot find symbol\n",
                                "[78,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 80,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 81,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[80,16] cannot find symbol\n",
                                "[80,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "100": {
                            "lines": [
                                {
                                    "line_no": 99,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 100,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 101,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[100,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[100,9] cannot find symbol\n"
                            ]
                        },
                        "102": {
                            "lines": [
                                {
                                    "line_no": 101,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 102,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 103,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[102,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[102,16] cannot find symbol\n"
                            ]
                        },
                        "121": {
                            "lines": [
                                {
                                    "line_no": 120,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 121,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 122,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[121,9] cannot find symbol\n",
                                "[121,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "122": {
                            "lines": [
                                {
                                    "line_no": 121,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 122,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 123,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[122,16] cannot find symbol\n",
                                "[122,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "141": {
                            "lines": [
                                {
                                    "line_no": 140,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 141,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 142,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[141,9] cannot find symbol\n",
                                "[141,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "142": {
                            "lines": [
                                {
                                    "line_no": 141,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 142,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 143,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[142,16] cannot find symbol\n",
                                "[142,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "165": {
                            "lines": [
                                {
                                    "line_no": 164,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 165,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 166,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[165,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[165,9] cannot find symbol\n"
                            ]
                        },
                        "167": {
                            "lines": [
                                {
                                    "line_no": 166,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 167,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 168,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[167,16] cannot find symbol\n",
                                "[167,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "190": {
                            "lines": [
                                {
                                    "line_no": 189,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 190,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,"
                                },
                                {
                                    "line_no": 191,
                                    "content": "                Utils.TIMEOUT_STRING,"
                                }
                            ],
                            "error_texts": [
                                "[190,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[190,9] cannot find symbol\n"
                            ]
                        },
                        "193": {
                            "lines": [
                                {
                                    "line_no": 192,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 193,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 194,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[193,16] cannot find symbol\n",
                                "[193,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "246": {
                            "lines": [
                                {
                                    "line_no": 245,
                                    "content": ""
                                },
                                {
                                    "line_no": 246,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 247,
                                    "content": "        Response<String> response =  getResponse(BuilderFactory.STRING);"
                                }
                            ],
                            "error_texts": [
                                "[246,9] cannot find symbol\n",
                                "[246,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "247": {
                            "lines": [
                                {
                                    "line_no": 246,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 247,
                                    "content": "        Response<String> response =  getResponse(BuilderFactory.STRING);"
                                },
                                {
                                    "line_no": 248,
                                    "content": "        caches.removeGraphCache(graphId);"
                                }
                            ],
                            "error_texts": [
                                "[247,38] cannot find symbol\n",
                                "[247,38] cannot find symbol\nsymbol: method getResponse(redis.clients.jedis.Builder<java.lang.String>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java": {
                        "20": {
                            "lines": [
                                {
                                    "line_no": 19,
                                    "content": " */"
                                },
                                {
                                    "line_no": 20,
                                    "content": "public class RedisGraphTransaction extends Transaction"
                                },
                                {
                                    "line_no": 21,
                                    "content": "        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder {"
                                }
                            ],
                            "error_texts": [
                                "[20,8] com.redislabs.redisgraph.impl.api.RedisGraphTransaction is not abstract and does not override abstract method execGetResponse() in com.redislabs.redisgraph.RedisGraphTransaction\n"
                            ]
                        },
                        "41": {
                            "lines": [
                                {
                                    "line_no": 40,
                                    "content": "    public Response<ResultSet> query(String graphId, String query) {"
                                },
                                {
                                    "line_no": 41,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 42,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[41,9] cannot find symbol\nsymbol: method getConnection()\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[41,9] cannot find symbol\n"
                            ]
                        },
                        "42": {
                            "lines": [
                                {
                                    "line_no": 41,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 42,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 43,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[42,16] cannot find symbol\n",
                                "[42,16] cannot find symbol\nsymbol: method appendResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "59": {
                            "lines": [
                                {
                                    "line_no": 58,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query) {"
                                },
                                {
                                    "line_no": 59,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 60,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[59,9] cannot find symbol\nsymbol: method getConnection()\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[59,9] cannot find symbol\n"
                            ]
                        },
                        "60": {
                            "lines": [
                                {
                                    "line_no": 59,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 60,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 61,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[60,16] cannot find symbol\nsymbol: method appendResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[60,16] cannot find symbol\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 80,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 81,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[80,9] cannot find symbol\nsymbol: method getConnection()\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[80,9] cannot find symbol\n"
                            ]
                        },
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 82,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 83,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[82,16] cannot find symbol\nsymbol: method appendResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[82,16] cannot find symbol\n"
                            ]
                        },
                        "102": {
                            "lines": [
                                {
                                    "line_no": 101,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 102,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 103,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[102,9] cannot find symbol\nsymbol: method getConnection()\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[102,9] cannot find symbol\n"
                            ]
                        },
                        "104": {
                            "lines": [
                                {
                                    "line_no": 103,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 104,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 105,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[104,16] cannot find symbol\nsymbol: method appendResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[104,16] cannot find symbol\n"
                            ]
                        },
                        "126": {
                            "lines": [
                                {
                                    "line_no": 125,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, args);"
                                },
                                {
                                    "line_no": 126,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 127,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[126,9] cannot find symbol\nsymbol: method getConnection()\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[126,9] cannot find symbol\n"
                            ]
                        },
                        "127": {
                            "lines": [
                                {
                                    "line_no": 126,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 127,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 128,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[127,16] cannot find symbol\nsymbol: method appendResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[127,16] cannot find symbol\n"
                            ]
                        },
                        "146": {
                            "lines": [
                                {
                                    "line_no": 145,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 146,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 147,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[146,9] cannot find symbol\n",
                                "[146,9] cannot find symbol\nsymbol: method getConnection()\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "147": {
                            "lines": [
                                {
                                    "line_no": 146,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 147,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 148,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[147,16] cannot find symbol\nsymbol: method appendResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[147,16] cannot find symbol\n"
                            ]
                        },
                        "166": {
                            "lines": [
                                {
                                    "line_no": 165,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 166,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 167,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[166,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[166,9] cannot find symbol\n"
                            ]
                        },
                        "167": {
                            "lines": [
                                {
                                    "line_no": 166,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 167,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 168,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[167,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[167,16] cannot find symbol\n"
                            ]
                        },
                        "189": {
                            "lines": [
                                {
                                    "line_no": 188,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 189,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 190,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[189,9] cannot find symbol\n",
                                "[189,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "191": {
                            "lines": [
                                {
                                    "line_no": 190,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 191,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 192,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[191,16] cannot find symbol\n",
                                "[191,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "213": {
                            "lines": [
                                {
                                    "line_no": 212,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 213,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,"
                                },
                                {
                                    "line_no": 214,
                                    "content": "                Utils.TIMEOUT_STRING, Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[213,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[213,9] cannot find symbol\n"
                            ]
                        },
                        "215": {
                            "lines": [
                                {
                                    "line_no": 214,
                                    "content": "                Utils.TIMEOUT_STRING, Long.toString(timeout));"
                                },
                                {
                                    "line_no": 215,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 216,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[215,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[215,16] cannot find symbol\n"
                            ]
                        },
                        "265": {
                            "lines": [
                                {
                                    "line_no": 264,
                                    "content": "    public Response<String> deleteGraph(String graphId) {"
                                },
                                {
                                    "line_no": 265,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 266,
                                    "content": "        Response<String> response = getResponse(BuilderFactory.STRING);"
                                }
                            ],
                            "error_texts": [
                                "[265,9] cannot find symbol\n",
                                "[265,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "266": {
                            "lines": [
                                {
                                    "line_no": 265,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 266,
                                    "content": "        Response<String> response = getResponse(BuilderFactory.STRING);"
                                },
                                {
                                    "line_no": 267,
                                    "content": "        caches.removeGraphCache(graphId);"
                                }
                            ],
                            "error_texts": [
                                "[266,37] cannot find symbol\nsymbol: method getResponse(redis.clients.jedis.Builder<java.lang.String>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[266,37] cannot find symbol\n"
                            ]
                        }
                    }
                }
            },
            "error": "cannot find symbol\n",
            "span_id": 3304440546816431982
        },
        {
            "input": "I apologize for the confusion. It seems that there are more changes required to make the code compatible with the new Jedis version. Let's make a more comprehensive set of changes to address all the issues:\n\n```diff\n--- a/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n+++ b/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n@@ -7,7 +7,7 @@ import com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\n import redis.clients.jedis.Builder;\n import redis.clients.jedis.BuilderFactory;\n import redis.clients.jedis.Connection;\n-import redis.clients.jedis.Response;\n+import redis.clients.jedis.commands.PipelineCommands;\n import redis.clients.jedis.Transaction;\n \n import java.util.List;\n@@ -17,7 +17,7 @@ import java.util.Map;\n  * This class is extending Jedis Transaction\n  */\n public class RedisGraphTransaction extends Transaction\n-        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder {\n+        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder, PipelineCommands {\n \n     private final RedisGraph redisGraph;\n     private RedisGraphCaches caches;\n@@ -38,8 +38,8 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> query(String graphId, String query) {\n-        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n-        return appendResponse(new Builder<ResultSet>() {\n+        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n+        return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -57,8 +57,8 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n-        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n-        return appendResponse(new Builder<ResultSet>() {\n+        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n+        return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -78,9 +78,9 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> query(String graphId, String query, long timeout) {\n-        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n+        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 Long.toString(timeout));\n-        return appendResponse(new Builder<ResultSet>() {\n+        return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -100,9 +100,9 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n-        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n+        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 Long.toString(timeout));",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "cannot find symbol\n",
                "updated_files": {
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java": "package com.redislabs.redisgraph.impl.api;\n\nimport com.redislabs.redisgraph.RedisGraph;\nimport com.redislabs.redisgraph.ResultSet;\nimport com.redislabs.redisgraph.impl.Utils;\nimport com.redislabs.redisgraph.impl.graph_cache.RedisGraphCaches;\nimport com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\nimport redis.clients.jedis.Builder;\nimport redis.clients.jedis.BuilderFactory;\nimport redis.clients.jedis.Connection;\nimport redis.clients.jedis.commands.PipelineCommands;\nimport redis.clients.jedis.Transaction;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * This class is extending Jedis Transaction\n */\npublic class RedisGraphTransaction extends Transaction\n        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder, PipelineCommands {\n\n    private final RedisGraph redisGraph;\n    private RedisGraphCaches caches;\n\n    public RedisGraphTransaction(Connection connection, RedisGraph redisGraph) {\n        // init as in Jedis\n        super(connection);\n\n        this.redisGraph = redisGraph;\n    }\n\n    /**\n     * Execute a Cypher query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query) {\n        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-oly query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, long timeout) {\n        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-only query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return appendResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with arguments\n     *\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param args\n     * @return response with a result set\n     * @deprecated use {@link #query(String, String, Map)} instead.\n     */\n    @Deprecated\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Object... args) {\n        String preparedQuery = Utils.prepareQuery(query, args);\n        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return appendResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return appendResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n                Utils.TIMEOUT_STRING, Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Invokes stored procedures without arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure) {\n        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invokes stored procedure with arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @param args procedure arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {\n        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invoke a stored procedure, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure - procedure to execute\n     * @param args - procedure arguments\n     * @param kwargs - procedure output arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,\n            Map<String, List<String>> kwargs) {\n        String preparedProcedure = Utils.prepareProcedure(procedure, args, kwargs);\n        return query(graphId, preparedProcedure);\n    }\n\n    /**\n     * Deletes the entire graph, in multi/exec context\n     * @param graphId graph to delete\n     * @return response with the deletion running time statistics\n     */\n    public Response<String> deleteGraph(String graphId) {\n        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING);\n        caches.removeGraphCache(graphId);\n        return response;\n    }\n\n    @Override\n    public void setRedisGraphCaches(RedisGraphCaches caches) {\n        this.caches = caches;\n    }\n\n}\n"
                },
                "compile_error_details": {
                    "src/main/java/com/redislabs/redisgraph/RedisGraphTransaction.java": {
                        "4": {
                            "lines": [
                                {
                                    "line_no": 3,
                                    "content": "import redis.clients.jedis.Response;"
                                },
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[4,36] cannot find symbol\nsymbol: class BasicRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[4,36] cannot find symbol\n"
                            ]
                        },
                        "5": {
                            "lines": [
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[5,36] cannot find symbol\nsymbol: class BinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[5,36] cannot find symbol\n"
                            ]
                        },
                        "6": {
                            "lines": [
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[6,36] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[6,36] cannot find symbol\n"
                            ]
                        },
                        "7": {
                            "lines": [
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[7,36] cannot find symbol\n",
                                "[7,36] cannot find symbol\nsymbol: class ClusterPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "8": {
                            "lines": [
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[8,36] cannot find symbol\n",
                                "[8,36] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "9": {
                            "lines": [
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[9,36] cannot find symbol\n",
                                "[9,36] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "10": {
                            "lines": [
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[10,36] cannot find symbol\n",
                                "[10,36] cannot find symbol\nsymbol: class RedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 12,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[11,36] cannot find symbol\n",
                                "[11,36] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "21": {
                            "lines": [
                                {
                                    "line_no": 20,
                                    "content": "public interface RedisGraphTransaction extends"
                                },
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[21,9] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\n",
                                "[21,9] cannot find symbol\n"
                            ]
                        },
                        "22": {
                            "lines": [
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[22,9] cannot find symbol\n",
                                "[22,35] cannot find symbol\nsymbol: class ClusterPipeline\n",
                                "[22,35] cannot find symbol\n",
                                "[22,9] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\n"
                            ]
                        },
                        "23": {
                            "lines": [
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                }
                            ],
                            "error_texts": [
                                "[23,42] cannot find symbol\n",
                                "[23,9] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\n",
                                "[23,9] cannot find symbol\n",
                                "[23,42] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\n"
                            ]
                        },
                        "24": {
                            "lines": [
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                },
                                {
                                    "line_no": 25,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[24,9] cannot find symbol\n",
                                "[24,29] cannot find symbol\nsymbol: class BinaryRedisPipeline\n",
                                "[24,50] cannot find symbol\n",
                                "[24,9] cannot find symbol\nsymbol: class BasicRedisPipeline\n",
                                "[24,29] cannot find symbol\n",
                                "[24,50] cannot find symbol\nsymbol: class RedisPipeline\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/RedisGraphPipeline.java": {
                        "4": {
                            "lines": [
                                {
                                    "line_no": 3,
                                    "content": "import redis.clients.jedis.Response;"
                                },
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[4,36] cannot find symbol\nsymbol: class BasicRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[4,36] cannot find symbol\n"
                            ]
                        },
                        "5": {
                            "lines": [
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[5,36] cannot find symbol\nsymbol: class BinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[5,36] cannot find symbol\n"
                            ]
                        },
                        "6": {
                            "lines": [
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[6,36] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[6,36] cannot find symbol\n"
                            ]
                        },
                        "7": {
                            "lines": [
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[7,36] cannot find symbol\n",
                                "[7,36] cannot find symbol\nsymbol: class ClusterPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "8": {
                            "lines": [
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[8,36] cannot find symbol\n",
                                "[8,36] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "9": {
                            "lines": [
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[9,36] cannot find symbol\n",
                                "[9,36] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "10": {
                            "lines": [
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[10,36] cannot find symbol\n",
                                "[10,36] cannot find symbol\nsymbol: class RedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 12,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[11,36] cannot find symbol\n",
                                "[11,36] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "21": {
                            "lines": [
                                {
                                    "line_no": 20,
                                    "content": "public interface RedisGraphPipeline extends"
                                },
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[21,9] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\n",
                                "[21,9] cannot find symbol\n"
                            ]
                        },
                        "22": {
                            "lines": [
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[22,9] cannot find symbol\n",
                                "[22,35] cannot find symbol\nsymbol: class ClusterPipeline\n",
                                "[22,35] cannot find symbol\n",
                                "[22,9] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\n"
                            ]
                        },
                        "23": {
                            "lines": [
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                }
                            ],
                            "error_texts": [
                                "[23,42] cannot find symbol\n",
                                "[23,9] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\n",
                                "[23,9] cannot find symbol\n",
                                "[23,42] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\n"
                            ]
                        },
                        "24": {
                            "lines": [
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                },
                                {
                                    "line_no": 25,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[24,9] cannot find symbol\n",
                                "[24,29] cannot find symbol\nsymbol: class BinaryRedisPipeline\n",
                                "[24,50] cannot find symbol\n",
                                "[24,9] cannot find symbol\nsymbol: class BasicRedisPipeline\n",
                                "[24,29] cannot find symbol\n",
                                "[24,50] cannot find symbol\nsymbol: class RedisPipeline\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/impl/api/ContextedRedisGraph.java": {
                        "12": {
                            "lines": [
                                {
                                    "line_no": 11,
                                    "content": ""
                                },
                                {
                                    "line_no": 12,
                                    "content": "import redis.clients.jedis.Client;"
                                },
                                {
                                    "line_no": 13,
                                    "content": "import redis.clients.jedis.Jedis;"
                                }
                            ],
                            "error_texts": [
                                "[12,27] cannot find symbol\n",
                                "[12,27] cannot find symbol\nsymbol: class Client\nlocation: package redis.clients.jedis\n"
                            ]
                        },
                        "142": {
                            "lines": [
                                {
                                    "line_no": 141,
                                    "content": "        Jedis jedis = getConnection();"
                                },
                                {
                                    "line_no": 142,
                                    "content": "        Client client = jedis.getClient();"
                                },
                                {
                                    "line_no": 143,
                                    "content": "        client.multi();"
                                }
                            ],
                            "error_texts": [
                                "[142,9] cannot find symbol\n",
                                "[142,9] cannot find symbol\nsymbol: class Client\nlocation: class com.redislabs.redisgraph.impl.api.ContextedRedisGraph\n"
                            ]
                        },
                        "157": {
                            "lines": [
                                {
                                    "line_no": 156,
                                    "content": "        Jedis jedis = getConnection();"
                                },
                                {
                                    "line_no": 157,
                                    "content": "        Client client = jedis.getClient();"
                                },
                                {
                                    "line_no": 158,
                                    "content": "        RedisGraphPipeline pipeline = new RedisGraphPipeline(client, this);"
                                }
                            ],
                            "error_texts": [
                                "[157,9] cannot find symbol\n",
                                "[157,9] cannot find symbol\nsymbol: class Client\nlocation: class com.redislabs.redisgraph.impl.api.ContextedRedisGraph\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java": {
                        "10": {
                            "lines": [
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.BuilderFactory;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.Client;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.Pipeline;"
                                }
                            ],
                            "error_texts": [
                                "[10,27] cannot find symbol\nsymbol: class Client\nlocation: package redis.clients.jedis\n",
                                "[10,27] cannot find symbol\n"
                            ]
                        },
                        "26": {
                            "lines": [
                                {
                                    "line_no": 25,
                                    "content": ""
                                },
                                {
                                    "line_no": 26,
                                    "content": "    public RedisGraphPipeline(Client client, RedisGraph redisGraph){"
                                },
                                {
                                    "line_no": 27,
                                    "content": "        super.setClient(client);"
                                }
                            ],
                            "error_texts": [
                                "[26,31] cannot find symbol\nsymbol: class Client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[26,68] no suitable constructor found for Pipeline(no arguments)\nconstructor redis.clients.jedis.Pipeline.Pipeline(redis.clients.jedis.Connection) is not applicable\n(actual and formal argument lists differ in length)\nconstructor redis.clients.jedis.Pipeline.Pipeline(redis.clients.jedis.Jedis) is not applicable\n(actual and formal argument lists differ in length)\n",
                                "[26,68] no suitable constructor found for Pipeline(no arguments)\n",
                                "[26,31] cannot find symbol\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "    public Response<ResultSet> query(String graphId, String query) {"
                                },
                                {
                                    "line_no": 39,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[39,9] cannot find symbol\n",
                                "[39,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "40": {
                            "lines": [
                                {
                                    "line_no": 39,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 41,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[40,16] cannot find symbol\n",
                                "[40,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "57": {
                            "lines": [
                                {
                                    "line_no": 56,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query) {"
                                },
                                {
                                    "line_no": 57,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 58,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[57,9] cannot find symbol\n",
                                "[57,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "58": {
                            "lines": [
                                {
                                    "line_no": 57,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 58,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 59,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[58,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[58,16] cannot find symbol\n"
                            ]
                        },
                        "78": {
                            "lines": [
                                {
                                    "line_no": 77,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 78,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 79,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[78,9] cannot find symbol\n",
                                "[78,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 80,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 81,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[80,16] cannot find symbol\n",
                                "[80,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "100": {
                            "lines": [
                                {
                                    "line_no": 99,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 100,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 101,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[100,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[100,9] cannot find symbol\n"
                            ]
                        },
                        "102": {
                            "lines": [
                                {
                                    "line_no": 101,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 102,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 103,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[102,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[102,16] cannot find symbol\n"
                            ]
                        },
                        "121": {
                            "lines": [
                                {
                                    "line_no": 120,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 121,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 122,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[121,9] cannot find symbol\n",
                                "[121,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "122": {
                            "lines": [
                                {
                                    "line_no": 121,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 122,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 123,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[122,16] cannot find symbol\n",
                                "[122,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "141": {
                            "lines": [
                                {
                                    "line_no": 140,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 141,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 142,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[141,9] cannot find symbol\n",
                                "[141,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "142": {
                            "lines": [
                                {
                                    "line_no": 141,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 142,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 143,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[142,16] cannot find symbol\n",
                                "[142,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "165": {
                            "lines": [
                                {
                                    "line_no": 164,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 165,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 166,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[165,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[165,9] cannot find symbol\n"
                            ]
                        },
                        "167": {
                            "lines": [
                                {
                                    "line_no": 166,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 167,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 168,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[167,16] cannot find symbol\n",
                                "[167,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "190": {
                            "lines": [
                                {
                                    "line_no": 189,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 190,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,"
                                },
                                {
                                    "line_no": 191,
                                    "content": "                Utils.TIMEOUT_STRING,"
                                }
                            ],
                            "error_texts": [
                                "[190,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[190,9] cannot find symbol\n"
                            ]
                        },
                        "193": {
                            "lines": [
                                {
                                    "line_no": 192,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 193,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 194,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[193,16] cannot find symbol\n",
                                "[193,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "246": {
                            "lines": [
                                {
                                    "line_no": 245,
                                    "content": ""
                                },
                                {
                                    "line_no": 246,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 247,
                                    "content": "        Response<String> response =  getResponse(BuilderFactory.STRING);"
                                }
                            ],
                            "error_texts": [
                                "[246,9] cannot find symbol\n",
                                "[246,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "247": {
                            "lines": [
                                {
                                    "line_no": 246,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 247,
                                    "content": "        Response<String> response =  getResponse(BuilderFactory.STRING);"
                                },
                                {
                                    "line_no": 248,
                                    "content": "        caches.removeGraphCache(graphId);"
                                }
                            ],
                            "error_texts": [
                                "[247,38] cannot find symbol\n",
                                "[247,38] cannot find symbol\nsymbol: method getResponse(redis.clients.jedis.Builder<java.lang.String>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java": {
                        "40": {
                            "lines": [
                                {
                                    "line_no": 39,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 40,
                                    "content": "    public Response<ResultSet> query(String graphId, String query) {"
                                },
                                {
                                    "line_no": 41,
                                    "content": "        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                }
                            ],
                            "error_texts": [
                                "[40,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[40,12] cannot find symbol\n"
                            ]
                        },
                        "58": {
                            "lines": [
                                {
                                    "line_no": 57,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 58,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query) {"
                                },
                                {
                                    "line_no": 59,
                                    "content": "        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                }
                            ],
                            "error_texts": [
                                "[58,12] cannot find symbol\n",
                                "[58,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "79": {
                            "lines": [
                                {
                                    "line_no": 78,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 79,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 80,
                                    "content": "        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                }
                            ],
                            "error_texts": [
                                "[79,12] cannot find symbol\n",
                                "[79,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "101": {
                            "lines": [
                                {
                                    "line_no": 100,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 101,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 102,
                                    "content": "        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                }
                            ],
                            "error_texts": [
                                "[101,12] cannot find symbol\n",
                                "[101,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "124": {
                            "lines": [
                                {
                                    "line_no": 123,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 124,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, Object... args) {"
                                },
                                {
                                    "line_no": 125,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, args);"
                                }
                            ],
                            "error_texts": [
                                "[124,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[124,12] cannot find symbol\n"
                            ]
                        },
                        "144": {
                            "lines": [
                                {
                                    "line_no": 143,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 144,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {"
                                },
                                {
                                    "line_no": 145,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                }
                            ],
                            "error_texts": [
                                "[144,12] cannot find symbol\n",
                                "[144,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "164": {
                            "lines": [
                                {
                                    "line_no": 163,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 164,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {"
                                },
                                {
                                    "line_no": 165,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                }
                            ],
                            "error_texts": [
                                "[164,12] cannot find symbol\n",
                                "[164,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "187": {
                            "lines": [
                                {
                                    "line_no": 186,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 187,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {"
                                },
                                {
                                    "line_no": 188,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                }
                            ],
                            "error_texts": [
                                "[187,12] cannot find symbol\n",
                                "[187,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "211": {
                            "lines": [
                                {
                                    "line_no": 210,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 211,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {"
                                },
                                {
                                    "line_no": 212,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                }
                            ],
                            "error_texts": [
                                "[211,12] cannot find symbol\n",
                                "[211,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "230": {
                            "lines": [
                                {
                                    "line_no": 229,
                                    "content": "     */"
                                },
                                {
                                    "line_no": 230,
                                    "content": "    public Response<ResultSet> callProcedure(String graphId, String procedure) {"
                                },
                                {
                                    "line_no": 231,
                                    "content": "        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);"
                                }
                            ],
                            "error_texts": [
                                "[230,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[230,12] cannot find symbol\n"
                            ]
                        },
                        "241": {
                            "lines": [
                                {
                                    "line_no": 240,
                                    "content": "     */"
                                },
                                {
                                    "line_no": 241,
                                    "content": "    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {"
                                },
                                {
                                    "line_no": 242,
                                    "content": "        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);"
                                }
                            ],
                            "error_texts": [
                                "[241,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[241,12] cannot find symbol\n"
                            ]
                        },
                        "253": {
                            "lines": [
                                {
                                    "line_no": 252,
                                    "content": "     */"
                                },
                                {
                                    "line_no": 253,
                                    "content": "    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,"
                                },
                                {
                                    "line_no": 254,
                                    "content": "            Map<String, List<String>> kwargs) {"
                                }
                            ],
                            "error_texts": [
                                "[253,12] cannot find symbol\n",
                                "[253,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "264": {
                            "lines": [
                                {
                                    "line_no": 263,
                                    "content": "     */"
                                },
                                {
                                    "line_no": 264,
                                    "content": "    public Response<String> deleteGraph(String graphId) {"
                                },
                                {
                                    "line_no": 265,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                }
                            ],
                            "error_texts": [
                                "[264,12] cannot find symbol\n",
                                "[264,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "20": {
                            "lines": [
                                {
                                    "line_no": 19,
                                    "content": " */"
                                },
                                {
                                    "line_no": 20,
                                    "content": "public class RedisGraphTransaction extends Transaction"
                                },
                                {
                                    "line_no": 21,
                                    "content": "        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder, PipelineCommands {"
                                }
                            ],
                            "error_texts": [
                                "[20,8] com.redislabs.redisgraph.impl.api.RedisGraphTransaction is not abstract and does not override abstract method execGetResponse() in com.redislabs.redisgraph.RedisGraphTransaction\n"
                            ]
                        },
                        "42": {
                            "lines": [
                                {
                                    "line_no": 41,
                                    "content": "        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 42,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 43,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[42,16] cannot find symbol\n",
                                "[42,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "60": {
                            "lines": [
                                {
                                    "line_no": 59,
                                    "content": "        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 60,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 61,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[60,16] cannot find symbol\n",
                                "[60,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 82,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 83,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[82,16] cannot find symbol\n",
                                "[82,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "104": {
                            "lines": [
                                {
                                    "line_no": 103,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 104,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 105,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[104,16] cannot find symbol\nsymbol: method appendResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[104,16] cannot find symbol\n"
                            ]
                        },
                        "126": {
                            "lines": [
                                {
                                    "line_no": 125,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, args);"
                                },
                                {
                                    "line_no": 126,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 127,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[126,9] cannot find symbol\nsymbol: method getConnection()\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[126,9] cannot find symbol\n"
                            ]
                        },
                        "127": {
                            "lines": [
                                {
                                    "line_no": 126,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 127,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 128,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[127,16] cannot find symbol\nsymbol: method appendResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[127,16] cannot find symbol\n"
                            ]
                        },
                        "146": {
                            "lines": [
                                {
                                    "line_no": 145,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 146,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 147,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[146,9] cannot find symbol\n",
                                "[146,9] cannot find symbol\nsymbol: method getConnection()\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "147": {
                            "lines": [
                                {
                                    "line_no": 146,
                                    "content": "        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 147,
                                    "content": "        return appendResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 148,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[147,16] cannot find symbol\nsymbol: method appendResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[147,16] cannot find symbol\n"
                            ]
                        },
                        "166": {
                            "lines": [
                                {
                                    "line_no": 165,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 166,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 167,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[166,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[166,9] cannot find symbol\n"
                            ]
                        },
                        "167": {
                            "lines": [
                                {
                                    "line_no": 166,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 167,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 168,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[167,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[167,16] cannot find symbol\n"
                            ]
                        },
                        "189": {
                            "lines": [
                                {
                                    "line_no": 188,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 189,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 190,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[189,9] cannot find symbol\n",
                                "[189,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "191": {
                            "lines": [
                                {
                                    "line_no": 190,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 191,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 192,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[191,16] cannot find symbol\n",
                                "[191,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "213": {
                            "lines": [
                                {
                                    "line_no": 212,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 213,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,"
                                },
                                {
                                    "line_no": 214,
                                    "content": "                Utils.TIMEOUT_STRING, Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[213,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[213,9] cannot find symbol\n"
                            ]
                        },
                        "215": {
                            "lines": [
                                {
                                    "line_no": 214,
                                    "content": "                Utils.TIMEOUT_STRING, Long.toString(timeout));"
                                },
                                {
                                    "line_no": 215,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 216,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[215,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[215,16] cannot find symbol\n"
                            ]
                        },
                        "265": {
                            "lines": [
                                {
                                    "line_no": 264,
                                    "content": "    public Response<String> deleteGraph(String graphId) {"
                                },
                                {
                                    "line_no": 265,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 266,
                                    "content": "        Response<String> response = getResponse(BuilderFactory.STRING);"
                                }
                            ],
                            "error_texts": [
                                "[265,9] cannot find symbol\n",
                                "[265,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "266": {
                            "lines": [
                                {
                                    "line_no": 265,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 266,
                                    "content": "        Response<String> response = getResponse(BuilderFactory.STRING);"
                                },
                                {
                                    "line_no": 267,
                                    "content": "        caches.removeGraphCache(graphId);"
                                }
                            ],
                            "error_texts": [
                                "[266,37] cannot find symbol\n",
                                "[266,37] cannot find symbol\nsymbol: method getResponse(redis.clients.jedis.Builder<java.lang.String>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[266,9] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[266,9] cannot find symbol\n"
                            ]
                        }
                    }
                }
            },
            "error": "cannot find symbol\n",
            "span_id": 8099918948518159442
        },
        {
            "input": "I apologize for the confusion. It seems that the changes required are more extensive than initially thought. Let's make a more comprehensive set of changes to address all the issues:\n\n```diff\n--- a/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n+++ b/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n@@ -7,7 +7,8 @@ import com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\n import redis.clients.jedis.Builder;\n import redis.clients.jedis.BuilderFactory;\n import redis.clients.jedis.Connection;\n-import redis.clients.jedis.Response;\n+import redis.clients.jedis.commands.PipelineCommands;\n+import redis.clients.jedis.resps.Response;\n import redis.clients.jedis.Transaction;\n \n import java.util.List;\n@@ -17,7 +18,7 @@ import java.util.Map;\n  * This class is extending Jedis Transaction\n  */\n public class RedisGraphTransaction extends Transaction\n-        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder {\n+        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder, PipelineCommands {\n \n     private final RedisGraph redisGraph;\n     private RedisGraphCaches caches;\n@@ -38,8 +39,8 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> query(String graphId, String query) {\n-        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n-        return appendResponse(new Builder<ResultSet>() {\n+        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n+        return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -57,8 +58,8 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n-        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n-        return appendResponse(new Builder<ResultSet>() {\n+        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n+        return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -78,9 +79,9 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> query(String graphId, String query, long timeout) {\n-        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n+        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 Long.toString(timeout));\n-        return appendResponse(new Builder<ResultSet>() {\n+        return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -100,9 +101,9 @@ public class RedisGraphTransaction extends Transaction\n      */\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n-        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n+        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 ",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\n*/\n@Override\npublic Response<ResultSet> readOnlyQuery(String graphId, String query) {\ngetConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\nreturn appendResponse(new Builder<ResultSet>() {\n@SuppressWarnings(\"unchecked\")\n@Override\npublic ResultSet build(Object o) {\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java does not contain these 8 exact lines in a row:\n```\n*/\n@Override\npublic Response<ResultSet> readOnlyQuery(String graphId, String query) {\ngetConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\nreturn appendResponse(new Builder<ResultSet>() {\n@SuppressWarnings(\"unchecked\")\n@Override\npublic ResultSet build(Object o) {\n```",
            "span_id": 10226109768371405654
        },
        {
            "input": "Now that we have the actual content of the file, let's make the necessary changes to update it for the new Jedis version:\n\n```diff\n--- a/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n+++ b/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n@@ -8,6 +8,7 @@ import redis.clients.jedis.Builder;\n import redis.clients.jedis.BuilderFactory;\n import redis.clients.jedis.Connection;\n import redis.clients.jedis.commands.PipelineCommands;\n+import redis.clients.jedis.resps.Response;\n import redis.clients.jedis.Transaction;\n \n import java.util.List;\n@@ -115,7 +116,7 @@ public class RedisGraphTransaction extends Transaction\n     public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n         sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 Long.toString(timeout));\n-        return appendResponse(new Builder<ResultSet>() {\n+        return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -137,8 +138,8 @@ public class RedisGraphTransaction extends Transaction\n     @Override\n     public Response<ResultSet> query(String graphId, String query, Object... args) {\n         String preparedQuery = Utils.prepareQuery(query, args);\n-        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n-        return appendResponse(new Builder<ResultSet>() {\n+        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n+        return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -157,8 +158,8 @@ public class RedisGraphTransaction extends Transaction\n     @Override\n     public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n         String preparedQuery = Utils.prepareQuery(query, params);\n-        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n-        return appendResponse(new Builder<ResultSet>() {\n+        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n+        return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n             public ResultSet build(Object o) {\n@@ -177,7 +178,7 @@ public class RedisGraphTransaction extends Transaction\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n         String preparedQuery = Utils.prepareQuery(query, params);\n-        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n+        sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n@@ -200,7 +201,7 @@ public class RedisGraphTransaction extends Transaction\n     @Override\n     public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n         String preparedQuery = Utils.prepareQuery(query, params);\n-        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n+        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "';' expected\n",
                "updated_files": {
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java": "package com.redislabs.redisgraph.impl.api;\n\nimport com.redislabs.redisgraph.RedisGraph;\nimport com.redislabs.redisgraph.ResultSet;\nimport com.redislabs.redisgraph.impl.Utils;\nimport com.redislabs.redisgraph.impl.graph_cache.RedisGraphCaches;\nimport com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\nimport redis.clients.jedis.Builder;\nimport redis.clients.jedis.BuilderFactory;\nimport redis.clients.jedis.Connection;\nimport redis.clients.jedis.commands.PipelineCommands;\nimport redis.clients.jedis.resps.Response;\nimport redis.clients.jedis.Transaction;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * This class is extending Jedis Transaction\n */\npublic class RedisGraphTransaction extends Transaction\n        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder, PipelineCommands {\n\n    private final RedisGraph redisGraph;\n    private RedisGraphCaches caches;\n\n    public RedisGraphTransaction(Connection connection, RedisGraph redisGraph) {\n        // init as in Jedis\n        super(connection);\n\n        this.redisGraph = redisGraph;\n    }\n\n    /**\n     * Execute a Cypher query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query) {\n        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-oly query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, long timeout) {\n        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-only query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with arguments\n     *\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param args\n     * @return response with a result set\n     * @deprecated use {@link #query(String, String, Map)} instead.\n     */\n    @Deprecated\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Object... args) {\n        String preparedQuery = Utils.prepareQuery(query, args);\n        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n                Utils.TIMEOUT_STRING, Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Invokes stored procedures without arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure) {\n        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invokes stored procedure with arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @param args procedure arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {\n        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invoke a stored procedure, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure - procedure to execute\n     * @param args - procedure arguments\n     * @param kwargs - procedure output arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,\n            Map<String, List<String>> kwargs) {\n        String preparedProcedure = Utils.prepareProcedure(procedure, args, kwargs);\n        return query(graphId, preparedProcedure);\n    }\n\n    /**\n     * Deletes the entire graph, in multi/exec context\n     * @param graphId graph to delete\n     * @return response with the deletion running time statistics\n     */\n    public Response<String> deleteGraph(String graphId) {\n        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING);\n        caches.removeGraphCache(graphId);\n        return response;\n    }\n\n    @Override\n    public void setRedisGraphCaches(RedisGraphCaches caches) {\n        this.caches = caches;\n    }\n\n}\n"
                },
                "compile_error_details": {
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java": {
                        "190": {
                            "lines": [
                                {
                                    "line_no": 189,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 190,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 191,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[190,39] ';' expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "';' expected\n",
            "span_id": 13090687607129836296
        },
        {
            "input": "```diff\n--- a/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n+++ b/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n@@ -201,8 +201,8 @@ public class RedisGraphTransaction extends Transaction\n     @Override\n     public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n         String preparedQuery = Utils.prepareQuery(query, params);\n-        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n-                Long.toString(timeout));\n+        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n+                Long.toString(timeout));\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n@@ -225,8 +225,8 @@ public class RedisGraphTransaction extends Transaction\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n         String preparedQuery = Utils.prepareQuery(query, params);\n-        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n-                Utils.TIMEOUT_STRING, Long.toString(timeout));\n+        sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n+                Utils.TIMEOUT_STRING, Long.toString(timeout));\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n@@ -275,8 +275,8 @@ public class RedisGraphTransaction extends Transaction\n      * @return response with the deletion running time statistics\n      */\n     public Response<String> deleteGraph(String graphId) {\n-        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n-        Response<String> response = getResponse(BuilderFactory.STRING);\n+        sendCommand(RedisGraphCommand.DELETE, graphId);\n+        Response<String> response = getResponse(BuilderFactory.STRING_INSTANCE);\n         caches.removeGraphCache(graphId);\n         return response;\n     }\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "cannot find symbol\n",
                "updated_files": {
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java": "package com.redislabs.redisgraph.impl.api;\n\nimport com.redislabs.redisgraph.RedisGraph;\nimport com.redislabs.redisgraph.ResultSet;\nimport com.redislabs.redisgraph.impl.Utils;\nimport com.redislabs.redisgraph.impl.graph_cache.RedisGraphCaches;\nimport com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\nimport redis.clients.jedis.Builder;\nimport redis.clients.jedis.BuilderFactory;\nimport redis.clients.jedis.Connection;\nimport redis.clients.jedis.commands.PipelineCommands;\nimport redis.clients.jedis.resps.Response;\nimport redis.clients.jedis.Transaction;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * This class is extending Jedis Transaction\n */\npublic class RedisGraphTransaction extends Transaction\n        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder, PipelineCommands {\n\n    private final RedisGraph redisGraph;\n    private RedisGraphCaches caches;\n\n    public RedisGraphTransaction(Connection connection, RedisGraph redisGraph) {\n        // init as in Jedis\n        super(connection);\n\n        this.redisGraph = redisGraph;\n    }\n\n    /**\n     * Execute a Cypher query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query) {\n        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-oly query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, long timeout) {\n        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-only query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with arguments\n     *\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param args\n     * @return response with a result set\n     * @deprecated use {@link #query(String, String, Map)} instead.\n     */\n    @Deprecated\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Object... args) {\n        String preparedQuery = Utils.prepareQuery(query, args);\n        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n                Utils.TIMEOUT_STRING, Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Invokes stored procedures without arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure) {\n        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invokes stored procedure with arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @param args procedure arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {\n        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invoke a stored procedure, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure - procedure to execute\n     * @param args - procedure arguments\n     * @param kwargs - procedure output arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,\n            Map<String, List<String>> kwargs) {\n        String preparedProcedure = Utils.prepareProcedure(procedure, args, kwargs);\n        return query(graphId, preparedProcedure);\n    }\n\n    /**\n     * Deletes the entire graph, in multi/exec context\n     * @param graphId graph to delete\n     * @return response with the deletion running time statistics\n     */\n    public Response<String> deleteGraph(String graphId) {\n        sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING_INSTANCE);\n        caches.removeGraphCache(graphId);\n        return response;\n    }\n\n    @Override\n    public void setRedisGraphCaches(RedisGraphCaches caches) {\n        this.caches = caches;\n    }\n\n}\n"
                },
                "compile_error_details": {
                    "src/main/java/com/redislabs/redisgraph/RedisGraphTransaction.java": {
                        "4": {
                            "lines": [
                                {
                                    "line_no": 3,
                                    "content": "import redis.clients.jedis.Response;"
                                },
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[4,36] cannot find symbol\nsymbol: class BasicRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[4,36] cannot find symbol\n"
                            ]
                        },
                        "5": {
                            "lines": [
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[5,36] cannot find symbol\nsymbol: class BinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[5,36] cannot find symbol\n"
                            ]
                        },
                        "6": {
                            "lines": [
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[6,36] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[6,36] cannot find symbol\n"
                            ]
                        },
                        "7": {
                            "lines": [
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[7,36] cannot find symbol\n",
                                "[7,36] cannot find symbol\nsymbol: class ClusterPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "8": {
                            "lines": [
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[8,36] cannot find symbol\n",
                                "[8,36] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "9": {
                            "lines": [
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[9,36] cannot find symbol\n",
                                "[9,36] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "10": {
                            "lines": [
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[10,36] cannot find symbol\n",
                                "[10,36] cannot find symbol\nsymbol: class RedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 12,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[11,36] cannot find symbol\n",
                                "[11,36] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "21": {
                            "lines": [
                                {
                                    "line_no": 20,
                                    "content": "public interface RedisGraphTransaction extends"
                                },
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[21,9] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\n",
                                "[21,9] cannot find symbol\n"
                            ]
                        },
                        "22": {
                            "lines": [
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[22,9] cannot find symbol\n",
                                "[22,35] cannot find symbol\nsymbol: class ClusterPipeline\n",
                                "[22,35] cannot find symbol\n",
                                "[22,9] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\n"
                            ]
                        },
                        "23": {
                            "lines": [
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                }
                            ],
                            "error_texts": [
                                "[23,42] cannot find symbol\n",
                                "[23,9] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\n",
                                "[23,9] cannot find symbol\n",
                                "[23,42] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\n"
                            ]
                        },
                        "24": {
                            "lines": [
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                },
                                {
                                    "line_no": 25,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[24,9] cannot find symbol\n",
                                "[24,29] cannot find symbol\nsymbol: class BinaryRedisPipeline\n",
                                "[24,50] cannot find symbol\n",
                                "[24,9] cannot find symbol\nsymbol: class BasicRedisPipeline\n",
                                "[24,29] cannot find symbol\n",
                                "[24,50] cannot find symbol\nsymbol: class RedisPipeline\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/RedisGraphPipeline.java": {
                        "4": {
                            "lines": [
                                {
                                    "line_no": 3,
                                    "content": "import redis.clients.jedis.Response;"
                                },
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[4,36] cannot find symbol\nsymbol: class BasicRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[4,36] cannot find symbol\n"
                            ]
                        },
                        "5": {
                            "lines": [
                                {
                                    "line_no": 4,
                                    "content": "import redis.clients.jedis.commands.BasicRedisPipeline;"
                                },
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[5,36] cannot find symbol\nsymbol: class BinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[5,36] cannot find symbol\n"
                            ]
                        },
                        "6": {
                            "lines": [
                                {
                                    "line_no": 5,
                                    "content": "import redis.clients.jedis.commands.BinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[6,36] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n",
                                "[6,36] cannot find symbol\n"
                            ]
                        },
                        "7": {
                            "lines": [
                                {
                                    "line_no": 6,
                                    "content": "import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[7,36] cannot find symbol\n",
                                "[7,36] cannot find symbol\nsymbol: class ClusterPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "8": {
                            "lines": [
                                {
                                    "line_no": 7,
                                    "content": "import redis.clients.jedis.commands.ClusterPipeline;"
                                },
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[8,36] cannot find symbol\n",
                                "[8,36] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "9": {
                            "lines": [
                                {
                                    "line_no": 8,
                                    "content": "import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;"
                                },
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[9,36] cannot find symbol\n",
                                "[9,36] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "10": {
                            "lines": [
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.commands.MultiKeyCommandsPipeline;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                }
                            ],
                            "error_texts": [
                                "[10,36] cannot find symbol\n",
                                "[10,36] cannot find symbol\nsymbol: class RedisPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "11": {
                            "lines": [
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.commands.RedisPipeline;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.ScriptingCommandsPipeline;"
                                },
                                {
                                    "line_no": 12,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[11,36] cannot find symbol\n",
                                "[11,36] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\nlocation: package redis.clients.jedis.commands\n"
                            ]
                        },
                        "21": {
                            "lines": [
                                {
                                    "line_no": 20,
                                    "content": "public interface RedisGraphPipeline extends"
                                },
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[21,9] cannot find symbol\nsymbol: class MultiKeyBinaryRedisPipeline\n",
                                "[21,9] cannot find symbol\n"
                            ]
                        },
                        "22": {
                            "lines": [
                                {
                                    "line_no": 21,
                                    "content": "        MultiKeyBinaryRedisPipeline,"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                }
                            ],
                            "error_texts": [
                                "[22,9] cannot find symbol\n",
                                "[22,35] cannot find symbol\nsymbol: class ClusterPipeline\n",
                                "[22,35] cannot find symbol\n",
                                "[22,9] cannot find symbol\nsymbol: class MultiKeyCommandsPipeline\n"
                            ]
                        },
                        "23": {
                            "lines": [
                                {
                                    "line_no": 22,
                                    "content": "        MultiKeyCommandsPipeline, ClusterPipeline,"
                                },
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                }
                            ],
                            "error_texts": [
                                "[23,42] cannot find symbol\n",
                                "[23,9] cannot find symbol\nsymbol: class BinaryScriptingCommandsPipeline\n",
                                "[23,9] cannot find symbol\n",
                                "[23,42] cannot find symbol\nsymbol: class ScriptingCommandsPipeline\n"
                            ]
                        },
                        "24": {
                            "lines": [
                                {
                                    "line_no": 23,
                                    "content": "        BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,"
                                },
                                {
                                    "line_no": 24,
                                    "content": "        BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {"
                                },
                                {
                                    "line_no": 25,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[24,9] cannot find symbol\n",
                                "[24,29] cannot find symbol\nsymbol: class BinaryRedisPipeline\n",
                                "[24,50] cannot find symbol\n",
                                "[24,9] cannot find symbol\nsymbol: class BasicRedisPipeline\n",
                                "[24,29] cannot find symbol\n",
                                "[24,50] cannot find symbol\nsymbol: class RedisPipeline\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/impl/api/ContextedRedisGraph.java": {
                        "12": {
                            "lines": [
                                {
                                    "line_no": 11,
                                    "content": ""
                                },
                                {
                                    "line_no": 12,
                                    "content": "import redis.clients.jedis.Client;"
                                },
                                {
                                    "line_no": 13,
                                    "content": "import redis.clients.jedis.Jedis;"
                                }
                            ],
                            "error_texts": [
                                "[12,27] cannot find symbol\n",
                                "[12,27] cannot find symbol\nsymbol: class Client\nlocation: package redis.clients.jedis\n"
                            ]
                        },
                        "142": {
                            "lines": [
                                {
                                    "line_no": 141,
                                    "content": "        Jedis jedis = getConnection();"
                                },
                                {
                                    "line_no": 142,
                                    "content": "        Client client = jedis.getClient();"
                                },
                                {
                                    "line_no": 143,
                                    "content": "        client.multi();"
                                }
                            ],
                            "error_texts": [
                                "[142,9] cannot find symbol\n",
                                "[142,9] cannot find symbol\nsymbol: class Client\nlocation: class com.redislabs.redisgraph.impl.api.ContextedRedisGraph\n"
                            ]
                        },
                        "157": {
                            "lines": [
                                {
                                    "line_no": 156,
                                    "content": "        Jedis jedis = getConnection();"
                                },
                                {
                                    "line_no": 157,
                                    "content": "        Client client = jedis.getClient();"
                                },
                                {
                                    "line_no": 158,
                                    "content": "        RedisGraphPipeline pipeline = new RedisGraphPipeline(client, this);"
                                }
                            ],
                            "error_texts": [
                                "[157,9] cannot find symbol\n",
                                "[157,9] cannot find symbol\nsymbol: class Client\nlocation: class com.redislabs.redisgraph.impl.api.ContextedRedisGraph\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java": {
                        "12": {
                            "lines": [
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.commands.PipelineCommands;"
                                },
                                {
                                    "line_no": 12,
                                    "content": "import redis.clients.jedis.resps.Response;"
                                },
                                {
                                    "line_no": 13,
                                    "content": "import redis.clients.jedis.Transaction;"
                                }
                            ],
                            "error_texts": [
                                "[12,33] cannot find symbol\nsymbol: class Response\nlocation: package redis.clients.jedis.resps\n",
                                "[12,33] cannot find symbol\n"
                            ]
                        },
                        "41": {
                            "lines": [
                                {
                                    "line_no": 40,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 41,
                                    "content": "    public Response<ResultSet> query(String graphId, String query) {"
                                },
                                {
                                    "line_no": 42,
                                    "content": "        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                }
                            ],
                            "error_texts": [
                                "[41,12] cannot find symbol\n",
                                "[41,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "59": {
                            "lines": [
                                {
                                    "line_no": 58,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 59,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query) {"
                                },
                                {
                                    "line_no": 60,
                                    "content": "        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                }
                            ],
                            "error_texts": [
                                "[59,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[59,12] cannot find symbol\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 80,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 81,
                                    "content": "        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                }
                            ],
                            "error_texts": [
                                "[80,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[80,12] cannot find symbol\n"
                            ]
                        },
                        "102": {
                            "lines": [
                                {
                                    "line_no": 101,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 102,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 103,
                                    "content": "        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                }
                            ],
                            "error_texts": [
                                "[102,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[102,12] cannot find symbol\n"
                            ]
                        },
                        "125": {
                            "lines": [
                                {
                                    "line_no": 124,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 125,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, Object... args) {"
                                },
                                {
                                    "line_no": 126,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, args);"
                                }
                            ],
                            "error_texts": [
                                "[125,12] cannot find symbol\n",
                                "[125,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "145": {
                            "lines": [
                                {
                                    "line_no": 144,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 145,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {"
                                },
                                {
                                    "line_no": 146,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                }
                            ],
                            "error_texts": [
                                "[145,12] cannot find symbol\n",
                                "[145,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "165": {
                            "lines": [
                                {
                                    "line_no": 164,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 165,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {"
                                },
                                {
                                    "line_no": 166,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                }
                            ],
                            "error_texts": [
                                "[165,12] cannot find symbol\n",
                                "[165,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "188": {
                            "lines": [
                                {
                                    "line_no": 187,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 188,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {"
                                },
                                {
                                    "line_no": 189,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                }
                            ],
                            "error_texts": [
                                "[188,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[188,12] cannot find symbol\n"
                            ]
                        },
                        "212": {
                            "lines": [
                                {
                                    "line_no": 211,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 212,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {"
                                },
                                {
                                    "line_no": 213,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                }
                            ],
                            "error_texts": [
                                "[212,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[212,12] cannot find symbol\n"
                            ]
                        },
                        "231": {
                            "lines": [
                                {
                                    "line_no": 230,
                                    "content": "     */"
                                },
                                {
                                    "line_no": 231,
                                    "content": "    public Response<ResultSet> callProcedure(String graphId, String procedure) {"
                                },
                                {
                                    "line_no": 232,
                                    "content": "        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);"
                                }
                            ],
                            "error_texts": [
                                "[231,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[231,12] cannot find symbol\n"
                            ]
                        },
                        "242": {
                            "lines": [
                                {
                                    "line_no": 241,
                                    "content": "     */"
                                },
                                {
                                    "line_no": 242,
                                    "content": "    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {"
                                },
                                {
                                    "line_no": 243,
                                    "content": "        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);"
                                }
                            ],
                            "error_texts": [
                                "[242,12] cannot find symbol\n",
                                "[242,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "254": {
                            "lines": [
                                {
                                    "line_no": 253,
                                    "content": "     */"
                                },
                                {
                                    "line_no": 254,
                                    "content": "    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,"
                                },
                                {
                                    "line_no": 255,
                                    "content": "            Map<String, List<String>> kwargs) {"
                                }
                            ],
                            "error_texts": [
                                "[254,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[254,12] cannot find symbol\n"
                            ]
                        },
                        "265": {
                            "lines": [
                                {
                                    "line_no": 264,
                                    "content": "     */"
                                },
                                {
                                    "line_no": 265,
                                    "content": "    public Response<String> deleteGraph(String graphId) {"
                                },
                                {
                                    "line_no": 266,
                                    "content": "        sendCommand(RedisGraphCommand.DELETE, graphId);"
                                }
                            ],
                            "error_texts": [
                                "[265,12] cannot find symbol\n",
                                "[265,12] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "21": {
                            "lines": [
                                {
                                    "line_no": 20,
                                    "content": " */"
                                },
                                {
                                    "line_no": 21,
                                    "content": "public class RedisGraphTransaction extends Transaction"
                                },
                                {
                                    "line_no": 22,
                                    "content": "        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder, PipelineCommands {"
                                }
                            ],
                            "error_texts": [
                                "[21,8] com.redislabs.redisgraph.impl.api.RedisGraphTransaction is not abstract and does not override abstract method execGetResponse() in com.redislabs.redisgraph.RedisGraphTransaction\n"
                            ]
                        },
                        "43": {
                            "lines": [
                                {
                                    "line_no": 42,
                                    "content": "        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 43,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 44,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[43,16] cannot find symbol\n",
                                "[43,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "61": {
                            "lines": [
                                {
                                    "line_no": 60,
                                    "content": "        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 61,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 62,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[61,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[61,16] cannot find symbol\n"
                            ]
                        },
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 83,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 84,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[83,16] cannot find symbol\n",
                                "[83,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "105": {
                            "lines": [
                                {
                                    "line_no": 104,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 105,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 106,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[105,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[105,16] cannot find symbol\n"
                            ]
                        },
                        "128": {
                            "lines": [
                                {
                                    "line_no": 127,
                                    "content": "        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 128,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 129,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[128,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[128,16] cannot find symbol\n"
                            ]
                        },
                        "148": {
                            "lines": [
                                {
                                    "line_no": 147,
                                    "content": "        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 148,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 149,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[148,16] cannot find symbol\n",
                                "[148,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "168": {
                            "lines": [
                                {
                                    "line_no": 167,
                                    "content": "        sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 168,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 169,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[168,16] cannot find symbol\n",
                                "[168,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "192": {
                            "lines": [
                                {
                                    "line_no": 191,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 192,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 193,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[192,16] cannot find symbol\n",
                                "[192,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n"
                            ]
                        },
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": "                Utils.TIMEOUT_STRING, Long.toString(timeout));"
                                },
                                {
                                    "line_no": 216,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 217,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[216,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[216,16] cannot find symbol\n"
                            ]
                        },
                        "267": {
                            "lines": [
                                {
                                    "line_no": 266,
                                    "content": "        sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 267,
                                    "content": "        Response<String> response = getResponse(BuilderFactory.STRING_INSTANCE);"
                                },
                                {
                                    "line_no": 268,
                                    "content": "        caches.removeGraphCache(graphId);"
                                }
                            ],
                            "error_texts": [
                                "[267,9] cannot find symbol\n",
                                "[267,63] cannot find symbol\nsymbol: variable STRING_INSTANCE\nlocation: class redis.clients.jedis.BuilderFactory\n",
                                "[267,9] cannot find symbol\nsymbol: class Response\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n",
                                "[267,63] cannot find symbol\n"
                            ]
                        }
                    },
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java": {
                        "10": {
                            "lines": [
                                {
                                    "line_no": 9,
                                    "content": "import redis.clients.jedis.BuilderFactory;"
                                },
                                {
                                    "line_no": 10,
                                    "content": "import redis.clients.jedis.Client;"
                                },
                                {
                                    "line_no": 11,
                                    "content": "import redis.clients.jedis.Pipeline;"
                                }
                            ],
                            "error_texts": [
                                "[10,27] cannot find symbol\nsymbol: class Client\nlocation: package redis.clients.jedis\n",
                                "[10,27] cannot find symbol\n"
                            ]
                        },
                        "26": {
                            "lines": [
                                {
                                    "line_no": 25,
                                    "content": ""
                                },
                                {
                                    "line_no": 26,
                                    "content": "    public RedisGraphPipeline(Client client, RedisGraph redisGraph){"
                                },
                                {
                                    "line_no": 27,
                                    "content": "        super.setClient(client);"
                                }
                            ],
                            "error_texts": [
                                "[26,31] cannot find symbol\nsymbol: class Client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[26,68] no suitable constructor found for Pipeline(no arguments)\nconstructor redis.clients.jedis.Pipeline.Pipeline(redis.clients.jedis.Connection) is not applicable\n(actual and formal argument lists differ in length)\nconstructor redis.clients.jedis.Pipeline.Pipeline(redis.clients.jedis.Jedis) is not applicable\n(actual and formal argument lists differ in length)\n",
                                "[26,68] no suitable constructor found for Pipeline(no arguments)\n",
                                "[26,31] cannot find symbol\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "    public Response<ResultSet> query(String graphId, String query) {"
                                },
                                {
                                    "line_no": 39,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[39,9] cannot find symbol\n",
                                "[39,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "40": {
                            "lines": [
                                {
                                    "line_no": 39,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 41,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[40,16] cannot find symbol\n",
                                "[40,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "57": {
                            "lines": [
                                {
                                    "line_no": 56,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query) {"
                                },
                                {
                                    "line_no": 57,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 58,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[57,9] cannot find symbol\n",
                                "[57,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "58": {
                            "lines": [
                                {
                                    "line_no": 57,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 58,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 59,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[58,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[58,16] cannot find symbol\n"
                            ]
                        },
                        "78": {
                            "lines": [
                                {
                                    "line_no": 77,
                                    "content": "    public Response<ResultSet> query(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 78,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 79,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[78,9] cannot find symbol\n",
                                "[78,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 80,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 81,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[80,16] cannot find symbol\n",
                                "[80,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "100": {
                            "lines": [
                                {
                                    "line_no": 99,
                                    "content": "    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {"
                                },
                                {
                                    "line_no": 100,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 101,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[100,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[100,9] cannot find symbol\n"
                            ]
                        },
                        "102": {
                            "lines": [
                                {
                                    "line_no": 101,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 102,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 103,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[102,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[102,16] cannot find symbol\n"
                            ]
                        },
                        "121": {
                            "lines": [
                                {
                                    "line_no": 120,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 121,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 122,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[121,9] cannot find symbol\n",
                                "[121,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "122": {
                            "lines": [
                                {
                                    "line_no": 121,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 122,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 123,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[122,16] cannot find symbol\n",
                                "[122,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "141": {
                            "lines": [
                                {
                                    "line_no": 140,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 141,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 142,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                }
                            ],
                            "error_texts": [
                                "[141,9] cannot find symbol\n",
                                "[141,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "142": {
                            "lines": [
                                {
                                    "line_no": 141,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);"
                                },
                                {
                                    "line_no": 142,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 143,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[142,16] cannot find symbol\n",
                                "[142,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "165": {
                            "lines": [
                                {
                                    "line_no": 164,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 165,
                                    "content": "        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,"
                                },
                                {
                                    "line_no": 166,
                                    "content": "                Long.toString(timeout));"
                                }
                            ],
                            "error_texts": [
                                "[165,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[165,9] cannot find symbol\n"
                            ]
                        },
                        "167": {
                            "lines": [
                                {
                                    "line_no": 166,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 167,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 168,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[167,16] cannot find symbol\n",
                                "[167,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "190": {
                            "lines": [
                                {
                                    "line_no": 189,
                                    "content": "        String preparedQuery = Utils.prepareQuery(query, params);"
                                },
                                {
                                    "line_no": 190,
                                    "content": "        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,"
                                },
                                {
                                    "line_no": 191,
                                    "content": "                Utils.TIMEOUT_STRING,"
                                }
                            ],
                            "error_texts": [
                                "[190,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n",
                                "[190,9] cannot find symbol\n"
                            ]
                        },
                        "193": {
                            "lines": [
                                {
                                    "line_no": 192,
                                    "content": "                Long.toString(timeout));"
                                },
                                {
                                    "line_no": 193,
                                    "content": "        return getResponse(new Builder<ResultSet>() {"
                                },
                                {
                                    "line_no": 194,
                                    "content": "            @SuppressWarnings(\"unchecked\")"
                                }
                            ],
                            "error_texts": [
                                "[193,16] cannot find symbol\n",
                                "[193,16] cannot find symbol\nsymbol: method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "246": {
                            "lines": [
                                {
                                    "line_no": 245,
                                    "content": ""
                                },
                                {
                                    "line_no": 246,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 247,
                                    "content": "        Response<String> response =  getResponse(BuilderFactory.STRING);"
                                }
                            ],
                            "error_texts": [
                                "[246,9] cannot find symbol\n",
                                "[246,9] cannot find symbol\nsymbol: variable client\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        },
                        "247": {
                            "lines": [
                                {
                                    "line_no": 246,
                                    "content": "        client.sendCommand(RedisGraphCommand.DELETE, graphId);"
                                },
                                {
                                    "line_no": 247,
                                    "content": "        Response<String> response =  getResponse(BuilderFactory.STRING);"
                                },
                                {
                                    "line_no": 248,
                                    "content": "        caches.removeGraphCache(graphId);"
                                }
                            ],
                            "error_texts": [
                                "[247,38] cannot find symbol\n",
                                "[247,38] cannot find symbol\nsymbol: method getResponse(redis.clients.jedis.Builder<java.lang.String>)\nlocation: class com.redislabs.redisgraph.impl.api.RedisGraphPipeline\n"
                            ]
                        }
                    }
                }
            },
            "error": "cannot find symbol\n",
            "span_id": 66121935932822236
        },
        {
            "input": "I apologize for the ongoing issues. It seems that the changes required are more extensive than initially thought. Let's make a more comprehensive set of changes to address all the issues:\n\n```diff\n--- a/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n+++ b/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java\n@@ -8,7 +8,7 @@ import redis.clients.jedis.Builder;\n import redis.clients.jedis.BuilderFactory;\n import redis.clients.jedis.Connection;\n import redis.clients.jedis.commands.PipelineCommands;\n-import redis.clients.jedis.resps.Response;\n+import redis.clients.jedis.Response;\n import redis.clients.jedis.Transaction;\n \n import java.util.List;\n@@ -265,7 +265,7 @@ public class RedisGraphTransaction extends Transaction\n      */\n     public Response<String> deleteGraph(String graphId) {\n         sendCommand(RedisGraphCommand.DELETE, graphId);\n-        Response<String> response = getResponse(BuilderFactory.STRING_INSTANCE);\n+        Response<String> response = getResponse(BuilderFactory.STRING);\n         caches.removeGraphCache(graphId);\n         return response;\n     }\n```\n\nNow, let's update the `RedisGraphPipeline.java` file:\n\n```diff\n--- a/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java\n+++ b/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java\n@@ -7,7 +7,7 @@ import com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\n import redis.clients.jedis.Builder;\n import redis.clients.jedis.BuilderFactory;\n import redis.clients.jedis.Pipeline;\n-import redis.clients.jedis.Client;\n+import redis.clients.jedis.Connection;\n import redis.clients.jedis.Response;\n \n import java.util.List;\n@@ -23,8 +23,8 @@ public class RedisGraphPipeline extends Pipeline implements RedisGraphPipeline,\n     private final RedisGraph redisGraph;\n     private RedisGraphCaches caches;\n \n-    public RedisGraphPipeline(Client client, RedisGraph redisGraph) {\n-        super.setClient(client);\n+    public RedisGraphPipeline(Connection connection, RedisGraph redisGraph) {\n+        super(connection);\n         this.redisGraph = redisGraph;\n     }\n \n@@ -36,7 +36,7 @@ public class RedisGraphPipeline extends Pipeline implements RedisGraphPipeline,\n      */\n     @Override\n     public Response<ResultSet> query(String graphId, String query) {\n-        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n+        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n@@ -54,7 +54,7 @@ public class RedisGraphPipeline extends Pipeline implements RedisGraphPipeline,\n      */\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n-        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n+        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n@@ -75,7 +75,7 @@ public class RedisGraphPipeline extends Pipeline implements RedisGraphPipeline,\n      */\n     @Override\n     public Response",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "illegal start of expression\n",
                "updated_files": {
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java": "package com.redislabs.redisgraph.impl.api;\n\nimport com.redislabs.redisgraph.RedisGraph;\nimport com.redislabs.redisgraph.ResultSet;\nimport com.redislabs.redisgraph.impl.Utils;\nimport com.redislabs.redisgraph.impl.graph_cache.RedisGraphCaches;\nimport com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\nimport redis.clients.jedis.Builder;\nimport redis.clients.jedis.BuilderFactory;\nimport redis.clients.jedis.Connection;\nimport redis.clients.jedis.commands.PipelineCommands;\nimport redis.clients.jedis.Response;\nimport redis.clients.jedis.Transaction;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * This class is extending Jedis Transaction\n */\npublic class RedisGraphTransaction extends Transaction\n        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder, PipelineCommands {\n\n    private final RedisGraph redisGraph;\n    private RedisGraphCaches caches;\n\n    public RedisGraphTransaction(Connection connection, RedisGraph redisGraph) {\n        // init as in Jedis\n        super(connection);\n\n        this.redisGraph = redisGraph;\n    }\n\n    /**\n     * Execute a Cypher query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query) {\n        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-oly query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, long timeout) {\n        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-only query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with arguments\n     *\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param args\n     * @return response with a result set\n     * @deprecated use {@link #query(String, String, Map)} instead.\n     */\n    @Deprecated\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Object... args) {\n        String preparedQuery = Utils.prepareQuery(query, args);\n        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n                Utils.TIMEOUT_STRING, Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Invokes stored procedures without arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure) {\n        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invokes stored procedure with arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @param args procedure arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {\n        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invoke a stored procedure, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure - procedure to execute\n     * @param args - procedure arguments\n     * @param kwargs - procedure output arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,\n            Map<String, List<String>> kwargs) {\n        String preparedProcedure = Utils.prepareProcedure(procedure, args, kwargs);\n        return query(graphId, preparedProcedure);\n    }\n\n    /**\n     * Deletes the entire graph, in multi/exec context\n     * @param graphId graph to delete\n     * @return response with the deletion running time statistics\n     */\n    public Response<String> deleteGraph(String graphId) {\n        sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING);\n        caches.removeGraphCache(graphId);\n        return response;\n    }\n\n    @Override\n    public void setRedisGraphCaches(RedisGraphCaches caches) {\n        this.caches = caches;\n    }\n\n}\n",
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java": "package com.redislabs.redisgraph.impl.api;\n\nimport com.redislabs.redisgraph.RedisGraph;\nimport com.redislabs.redisgraph.ResultSet;\nimport com.redislabs.redisgraph.impl.Utils;\nimport com.redislabs.redisgraph.impl.graph_cache.RedisGraphCaches;\nimport com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\nimport redis.clients.jedis.Builder;\nimport redis.clients.jedis.BuilderFactory;\nimport redis.clients.jedis.Connection;\nimport redis.clients.jedis.Pipeline;\nimport redis.clients.jedis.Response;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * This class is extending Jedis Pipeline\n */\npublic class RedisGraphPipeline extends Pipeline implements com.redislabs.redisgraph.RedisGraphPipeline, RedisGraphCacheHolder {\n\n    private final RedisGraph redisGraph;\n    private RedisGraphCaches caches;\n\n\n    public RedisGraphPipeline(Client client, RedisGraph redisGraph){\n    public RedisGraphPipeline(Connection connection, RedisGraph redisGraph) {\n        super(connection);\n        this.redisGraph = redisGraph;\n    }\n\n    /**\n     * Execute a Cypher query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query) {\n        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-oly query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, long timeout) {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-only query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return  a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return  a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * timeout.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return  a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * timeout.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return  a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n                Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Invokes stored procedures without arguments\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure){\n        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invokes stored procedure with arguments\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @param args procedure arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args  ){\n        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);\n    }\n\n\n    /**\n     * Invoke a stored procedure\n     * @param graphId a graph to perform the query on\n     * @param procedure - procedure to execute\n     * @param args - procedure arguments\n     * @param kwargs - procedure output arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,\n                                                  Map<String, List<String>> kwargs) {\n        String preparedProcedure = Utils.prepareProcedure(procedure, args, kwargs);\n        return query(graphId, preparedProcedure);\n    }\n\n\n    /**\n     * Deletes the entire graph\n     * @param graphId graph to delete\n     * @return response with the deletion running time statistics\n     */\n    public Response<String> deleteGraph(String graphId){\n\n        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response =  getResponse(BuilderFactory.STRING);\n        caches.removeGraphCache(graphId);\n        return response;\n    }\n\n    @Override\n    public void setRedisGraphCaches(RedisGraphCaches caches) {\n        this.caches = caches;\n    }\n}\n"
                },
                "compile_error_details": {
                    "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java": {
                        "27": {
                            "lines": [
                                {
                                    "line_no": 26,
                                    "content": "    public RedisGraphPipeline(Client client, RedisGraph redisGraph){"
                                },
                                {
                                    "line_no": 27,
                                    "content": "    public RedisGraphPipeline(Connection connection, RedisGraph redisGraph) {"
                                },
                                {
                                    "line_no": 28,
                                    "content": "        super(connection);"
                                }
                            ],
                            "error_texts": [
                                "[27,5] illegal start of expression\n"
                            ]
                        }
                    }
                }
            },
            "error": "illegal start of expression\n",
            "span_id": 7782763014664905698
        },
        {
            "input": "I apologize for the confusion. It seems there was an issue with the diff format. Let's try to fix the `RedisGraphPipeline.java` file with a more precise diff:\n\n```diff\n--- a/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java\n+++ b/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java\n@@ -7,7 +7,7 @@ import com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\n import redis.clients.jedis.Builder;\n import redis.clients.jedis.BuilderFactory;\n import redis.clients.jedis.Pipeline;\n-import redis.clients.jedis.Client;\n+import redis.clients.jedis.Connection;\n import redis.clients.jedis.Response;\n \n import java.util.List;\n@@ -23,8 +23,8 @@ public class RedisGraphPipeline extends Pipeline implements com.redislabs.redisg\n     private final RedisGraph redisGraph;\n     private RedisGraphCaches caches;\n \n-    public RedisGraphPipeline(Client client, RedisGraph redisGraph) {\n-        super.setClient(client);\n+    public RedisGraphPipeline(Connection connection, RedisGraph redisGraph) {\n+        super(connection);\n         this.redisGraph = redisGraph;\n     }\n \n@@ -36,7 +36,7 @@ public class RedisGraphPipeline extends Pipeline implements com.redislabs.redisg\n      */\n     @Override\n     public Response<ResultSet> query(String graphId, String query) {\n-        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n+        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n@@ -54,7 +54,7 @@ public class RedisGraphPipeline extends Pipeline implements com.redislabs.redisg\n      */\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n-        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n+        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n             @Override\n@@ -75,7 +75,7 @@ public class RedisGraphPipeline extends Pipeline implements com.redislabs.redisg\n      */\n     @Override\n     public Response<ResultSet> query(String graphId, String query, long timeout) {\n-        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n+        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 Long.toString(timeout));\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n@@ -97,7 +97,7 @@ public class RedisGraphPipeline extends Pipeline implements com.redislabs.redisg\n      */\n     @Override\n     public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n-        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n+        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                 Long.toString(timeout));\n         return getResponse(new Builder<ResultSet>() {\n             @SuppressWarnings(\"unchecked\")\n@@ -118,7 +118,7",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java does not contain these 7 exact lines in a row:\n```\n*/\n@Override\npublic Response<ResultSet> readOnlyQuery(String graphId, String query) {\nclient.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\nreturn getResponse(new Builder<ResultSet>() {\n@SuppressWarnings(\"unchecked\")\n@Override\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java!\nMake extra sure the indentation is correct.\nsrc/main/java/com/redislabs/redisgraph/impl/api/RedisGraphPipeline.java does not contain these 7 exact lines in a row:\n```\n*/\n@Override\npublic Response<ResultSet> readOnlyQuery(String graphId, String query) {\nclient.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\nreturn getResponse(new Builder<ResultSet>() {\n@SuppressWarnings(\"unchecked\")\n@Override\n```",
            "span_id": 8634076284905610642
        }
    ],
    "read_file": [
        {
            "input": "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java",
            "output": "package com.redislabs.redisgraph.impl.api;\n\nimport com.redislabs.redisgraph.RedisGraph;\nimport com.redislabs.redisgraph.ResultSet;\nimport com.redislabs.redisgraph.impl.Utils;\nimport com.redislabs.redisgraph.impl.graph_cache.RedisGraphCaches;\nimport com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\nimport redis.clients.jedis.Builder;\nimport redis.clients.jedis.BuilderFactory;\nimport redis.clients.jedis.Client;\nimport redis.clients.jedis.Response;\nimport redis.clients.jedis.Transaction;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * This class is extending Jedis Transaction\n */\npublic class RedisGraphTransaction extends Transaction\n        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder {\n\n    private final RedisGraph redisGraph;\n    private RedisGraphCaches caches;\n\n    public RedisGraphTransaction(Client client, RedisGraph redisGraph) {\n        // init as in Jedis\n        super(client);\n\n        this.redisGraph = redisGraph;\n    }\n\n    /**\n     * Execute a Cypher query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query) {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-oly query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, long timeout) {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-only query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with arguments\n     *\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param args\n     * @return response with a result set\n     * @deprecated use {@link #query(String, String, Map)} instead.\n     */\n    @Deprecated\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Object... args) {\n        String preparedQuery = Utils.prepareQuery(query, args);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n                Utils.TIMEOUT_STRING, Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Invokes stored procedures without arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure) {\n        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invokes stored procedure with arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @param args procedure arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {\n        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invoke a stored procedure, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure - procedure to execute\n     * @param args - procedure arguments\n     * @param kwargs - procedure output arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,\n            Map<String, List<String>> kwargs) {\n        String preparedProcedure = Utils.prepareProcedure(procedure, args, kwargs);\n        return query(graphId, preparedProcedure);\n    }\n\n    /**\n     * Deletes the entire graph, in multi/exec context\n     * @param graphId graph to delete\n     * @return response with the deletion running time statistics\n     */\n    public Response<String> deleteGraph(String graphId) {\n        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING);\n        caches.removeGraphCache(graphId);\n        return response;\n    }\n\n    @Override\n    public void setRedisGraphCaches(RedisGraphCaches caches) {\n        this.caches = caches;\n    }\n\n}\n",
            "error": "",
            "span_id": 15740268298661783490
        },
        {
            "input": "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java",
            "output": "package com.redislabs.redisgraph.impl.api;\n\nimport com.redislabs.redisgraph.RedisGraph;\nimport com.redislabs.redisgraph.ResultSet;\nimport com.redislabs.redisgraph.impl.Utils;\nimport com.redislabs.redisgraph.impl.graph_cache.RedisGraphCaches;\nimport com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\nimport redis.clients.jedis.Builder;\nimport redis.clients.jedis.BuilderFactory;\nimport redis.clients.jedis.Connection;\nimport redis.clients.jedis.Response;\nimport redis.clients.jedis.Transaction;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * This class is extending Jedis Transaction\n */\npublic class RedisGraphTransaction extends Transaction\n        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder {\n\n    private final RedisGraph redisGraph;\n    private RedisGraphCaches caches;\n\n    public RedisGraphTransaction(Connection connection, RedisGraph redisGraph) {\n        // init as in Jedis\n        super(connection);\n\n        this.redisGraph = redisGraph;\n    }\n\n    /**\n     * Execute a Cypher query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query) {\n        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-oly query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, long timeout) {\n        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-only query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n        getConnection().sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with arguments\n     *\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param args\n     * @return response with a result set\n     * @deprecated use {@link #query(String, String, Map)} instead.\n     */\n    @Deprecated\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Object... args) {\n        String preparedQuery = Utils.prepareQuery(query, args);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n                Utils.TIMEOUT_STRING, Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Invokes stored procedures without arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure) {\n        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invokes stored procedure with arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @param args procedure arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {\n        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invoke a stored procedure, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure - procedure to execute\n     * @param args - procedure arguments\n     * @param kwargs - procedure output arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,\n            Map<String, List<String>> kwargs) {\n        String preparedProcedure = Utils.prepareProcedure(procedure, args, kwargs);\n        return query(graphId, preparedProcedure);\n    }\n\n    /**\n     * Deletes the entire graph, in multi/exec context\n     * @param graphId graph to delete\n     * @return response with the deletion running time statistics\n     */\n    public Response<String> deleteGraph(String graphId) {\n        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING);\n        caches.removeGraphCache(graphId);\n        return response;\n    }\n\n    @Override\n    public void setRedisGraphCaches(RedisGraphCaches caches) {\n        this.caches = caches;\n    }\n\n}\n",
            "error": "",
            "span_id": 1045990289069692845
        },
        {
            "input": "src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java",
            "output": "package com.redislabs.redisgraph.impl.api;\n\nimport com.redislabs.redisgraph.RedisGraph;\nimport com.redislabs.redisgraph.ResultSet;\nimport com.redislabs.redisgraph.impl.Utils;\nimport com.redislabs.redisgraph.impl.graph_cache.RedisGraphCaches;\nimport com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\nimport redis.clients.jedis.Builder;\nimport redis.clients.jedis.BuilderFactory;\nimport redis.clients.jedis.Connection;\nimport redis.clients.jedis.commands.PipelineCommands;\nimport redis.clients.jedis.Transaction;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * This class is extending Jedis Transaction\n */\npublic class RedisGraphTransaction extends Transaction\n        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder, PipelineCommands {\n\n    private final RedisGraph redisGraph;\n    private RedisGraphCaches caches;\n\n    public RedisGraphTransaction(Connection connection, RedisGraph redisGraph) {\n        // init as in Jedis\n        super(connection);\n\n        this.redisGraph = redisGraph;\n    }\n\n    /**\n     * Execute a Cypher query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query) {\n        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-oly query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, long timeout) {\n        sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-only query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n        sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return appendResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with arguments\n     *\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param args\n     * @return response with a result set\n     * @deprecated use {@link #query(String, String, Map)} instead.\n     */\n    @Deprecated\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Object... args) {\n        String preparedQuery = Utils.prepareQuery(query, args);\n        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return appendResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        getConnection().sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return appendResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n                Utils.TIMEOUT_STRING, Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Invokes stored procedures without arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure) {\n        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invokes stored procedure with arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @param args procedure arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {\n        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invoke a stored procedure, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure - procedure to execute\n     * @param args - procedure arguments\n     * @param kwargs - procedure output arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,\n            Map<String, List<String>> kwargs) {\n        String preparedProcedure = Utils.prepareProcedure(procedure, args, kwargs);\n        return query(graphId, preparedProcedure);\n    }\n\n    /**\n     * Deletes the entire graph, in multi/exec context\n     * @param graphId graph to delete\n     * @return response with the deletion running time statistics\n     */\n    public Response<String> deleteGraph(String graphId) {\n        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING);\n        caches.removeGraphCache(graphId);\n        return response;\n    }\n\n    @Override\n    public void setRedisGraphCaches(RedisGraphCaches caches) {\n        this.caches = caches;\n    }\n\n}\n",
            "error": "",
            "span_id": 11112112847849738831
        }
    ],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}