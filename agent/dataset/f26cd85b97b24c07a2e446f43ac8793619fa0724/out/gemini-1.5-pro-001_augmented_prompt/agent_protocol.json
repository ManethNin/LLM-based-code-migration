{
    "validate_diffs": [],
    "compile_maven": [
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -11,7 +11,7 @@\n \n import org.eclipse.jetty.server.Handler;\n import org.eclipse.jetty.server.Server;\n-import org.eclipse.jetty.server.nio.SelectChannelConnector;\n+import org.eclipse.jetty.server.ServerConnector;\n \n public class JettyStubHttpServer implements StubHttpServer {\n \n@@ -31,18 +31,15 @@\n     this.server = new Server();\n \n     ServerConnector httpConnector = new ServerConnector(server);\n-    server.setSendServerVersion(false);\n-    server.setSendDateHeader(false);\n-    httpConnector = new SelectChannelConnector();\n+\n     httpConnector.setPort(port);\n     server.addConnector(httpConnector);\n \n     server.setHandler(handler);\n   }\n \n-  public int getPort() {\n-    return ((SelectChannelConnector) server.getConnectors()[0]).getLocalPort();\n+  public int getPort() {    \n+    return ((ServerConnector) server.getConnectors()[0]).getLocalPort();\n   }\n \n   public void start() throws Exception {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 18 exact lines in a row:\n```\nthis.server = new Server();\nServerConnector httpConnector = new ServerConnector(server);\nserver.setSendServerVersion(false);\nserver.setSendDateHeader(false);\nhttpConnector = new SelectChannelConnector();\nhttpConnector.setPort(port);\nserver.addConnector(httpConnector);\nserver.setHandler(handler);\n}\npublic int getPort() {\nreturn ((SelectChannelConnector) server.getConnectors()[0]).getLocalPort();\n}\npublic void start() throws Exception {\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 18 exact lines in a row:\n```\nthis.server = new Server();\nServerConnector httpConnector = new ServerConnector(server);\nserver.setSendServerVersion(false);\nserver.setSendDateHeader(false);\nhttpConnector = new SelectChannelConnector();\nhttpConnector.setPort(port);\nserver.addConnector(httpConnector);\nserver.setHandler(handler);\n}\npublic int getPort() {\nreturn ((SelectChannelConnector) server.getConnectors()[0]).getLocalPort();\n}\npublic void start() throws Exception {\n```",
            "span_id": 12485770710311921105
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -10,6 +10,7 @@\n import net.jadler.stubbing.server.StubHttpServer;\n \n import org.eclipse.jetty.server.Handler;\n+import org.eclipse.jetty.server.HttpConfiguration;\n import org.eclipse.jetty.server.Server;\n import org.eclipse.jetty.server.ServerConnector;\n \n@@ -29,9 +30,13 @@\n   public JettyStubHttpServer(final Handler handler, final int port) {\n     super();\n     this.server = new Server();\n-\n+    \n+    HttpConfiguration httpConfig = new HttpConfiguration();\n+    httpConfig.setSendServerVersion(false);\n+    httpConfig.setSendDateHeader(false);\n+    \n     ServerConnector httpConnector = new ServerConnector(server);\n-\n+    httpConnector.setHttpConfiguration(httpConfig);\n     httpConnector.setPort(port);\n     server.addConnector(httpConnector);\n \n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: method does not override or implement a method from a supertype\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this.server = new Server();\n\nHttpConfiguration httpConfig = new HttpConfiguration();\nhttpConfig.setSendServerVersion(false);\nhttpConfig.setSendDateHeader(false);\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\nthis.httpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n}\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "13": {
                            "lines": [
                                {
                                    "line_no": 12,
                                    "content": "import org.eclipse.jetty.server.Server;"
                                },
                                {
                                    "line_no": 13,
                                    "content": "import org.eclipse.jetty.server.nio.SelectChannelConnector;"
                                },
                                {
                                    "line_no": 14,
                                    "content": "import org.slf4j.Logger;"
                                }
                            ],
                            "error_texts": [
                                "[13,35] error: package org.eclipse.jetty.server.nio does not exist\n"
                            ]
                        },
                        "38": {
                            "lines": [
                                {
                                    "line_no": 37,
                                    "content": "httpConfig.setSendDateHeader(false);"
                                },
                                {
                                    "line_no": 38,
                                    "content": "        this.server.setSendServerVersion(false);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "        this.server.setSendDateHeader(true);"
                                }
                            ],
                            "error_texts": [
                                "[38,19] error: cannot find symbol\n",
                                "[38,19] error: cannot find symbol\nsymbol: method setSendServerVersion(boolean)\nlocation: variable server of type Server\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "        this.server.setSendServerVersion(false);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "        this.server.setSendDateHeader(true);"
                                },
                                {
                                    "line_no": 40,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[39,19] error: cannot find symbol\nsymbol: method setSendDateHeader(boolean)\nlocation: variable server of type Server\n",
                                "[39,19] error: cannot find symbol\n"
                            ]
                        },
                        "41": {
                            "lines": [
                                {
                                    "line_no": 40,
                                    "content": ""
                                },
                                {
                                    "line_no": 41,
                                    "content": "        this.httpConnector = new SelectChannelConnector();"
                                },
                                {
                                    "line_no": 42,
                                    "content": "this.httpConnector.setHttpConfiguration(httpConfig);"
                                }
                            ],
                            "error_texts": [
                                "[41,33] error: cannot find symbol\n",
                                "[41,33] error: cannot find symbol\nsymbol: class SelectChannelConnector\nlocation: class JettyStubHttpServer\n"
                            ]
                        },
                        "42": {
                            "lines": [
                                {
                                    "line_no": 41,
                                    "content": "        this.httpConnector = new SelectChannelConnector();"
                                },
                                {
                                    "line_no": 42,
                                    "content": "this.httpConnector.setHttpConfiguration(httpConfig);"
                                },
                                {
                                    "line_no": 43,
                                    "content": "httpConnector.setPort(port);"
                                }
                            ],
                            "error_texts": [
                                "[42,18] error: cannot find symbol\nsymbol: method setHttpConfiguration(HttpConfiguration)\nlocation: variable httpConnector of type Connector\n",
                                "[42,18] error: cannot find symbol\n"
                            ]
                        },
                        "43": {
                            "lines": [
                                {
                                    "line_no": 42,
                                    "content": "this.httpConnector.setHttpConfiguration(httpConfig);"
                                },
                                {
                                    "line_no": 43,
                                    "content": "httpConnector.setPort(port);"
                                },
                                {
                                    "line_no": 44,
                                    "content": "        server.addConnector(this.httpConnector);"
                                }
                            ],
                            "error_texts": [
                                "[43,13] error: cannot find symbol\n",
                                "[43,13] error: cannot find symbol\nsymbol: method setPort(int)\nlocation: variable httpConnector of type Connector\n"
                            ]
                        },
                        "86": {
                            "lines": [
                                {
                                    "line_no": 85,
                                    "content": "    public int getPort() {"
                                },
                                {
                                    "line_no": 86,
                                    "content": "        return httpConnector.getLocalPort();"
                                },
                                {
                                    "line_no": 87,
                                    "content": "}"
                                }
                            ],
                            "error_texts": [
                                "[86,28] error: cannot find symbol\nsymbol: method getLocalPort()\nlocation: variable httpConnector of type Connector\n",
                                "[86,28] error: cannot find symbol\n"
                            ]
                        }
                    },
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JadlerHandler.java": {
                        "25": {
                            "lines": [
                                {
                                    "line_no": 24,
                                    "content": " */"
                                },
                                {
                                    "line_no": 25,
                                    "content": "class JadlerHandler extends AbstractHandler {"
                                },
                                {
                                    "line_no": 26,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[25,] error: JadlerHandler is not abstract and does not override abstract method handle(String,Request,HttpServletRequest,HttpServletResponse) in AbstractHandler\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": ""
                                },
                                {
                                    "line_no": 39,
                                    "content": "    @Override"
                                },
                                {
                                    "line_no": 40,
                                    "content": "    public void handle(final String target, final Request baseRequest, final HttpServletRequest request,"
                                }
                            ],
                            "error_texts": [
                                "[39,4] error: method does not override or implement a method from a supertype\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: method does not override or implement a method from a supertype\n",
            "span_id": 5602444132630139205
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -12,7 +12,6 @@\n import org.eclipse.jetty.server.Handler;\n import org.eclipse.jetty.server.HttpConfiguration;\n import org.eclipse.jetty.server.Server;\n-import org.eclipse.jetty.server.ServerConnector;\n \n public class JettyStubHttpServer implements StubHttpServer {\n \n@@ -27,25 +26,23 @@\n         this(0);\n     }\n \n-\n     public JettyStubHttpServer(final int port) {\n         this.server = new Server();\n-        \n+\n         HttpConfiguration httpConfig = new HttpConfiguration();\n         httpConfig.setSendServerVersion(false);\n         httpConfig.setSendDateHeader(false);\n-        \n-        ServerConnector httpConnector = new ServerConnector(server);\n+\n+        httpConnector = new org.eclipse.jetty.server.ServerConnector(server);\n         httpConnector.setHttpConfiguration(httpConfig);\n         httpConnector.setPort(port);\n         server.addConnector(httpConnector);\n-\n-        server.setHandler(handler);\n     }\n-\n-  public int getPort() {    \n-    return ((ServerConnector) server.getConnectors()[0]).getLocalPort();\n+    \n+    @Override\n+    public int getPort() {\n+        return httpConnector.getLocalPort();\n   }\n \n   public void start() throws Exception {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 25 exact lines in a row:\n```\nthis(0);\n}\npublic JettyStubHttpServer(final int port) {\nthis.server = new Server();\nHttpConfiguration httpConfig = new HttpConfiguration();\nhttpConfig.setSendServerVersion(false);\nhttpConfig.setSendDateHeader(false);\nServerConnector httpConnector = new ServerConnector(server);\nhttpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\nserver.addConnector(httpConnector);\nserver.setHandler(handler);\n}\npublic int getPort() {\nreturn ((ServerConnector) server.getConnectors()[0]).getLocalPort();\n}\npublic void start() throws Exception {\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 25 exact lines in a row:\n```\nthis(0);\n}\npublic JettyStubHttpServer(final int port) {\nthis.server = new Server();\nHttpConfiguration httpConfig = new HttpConfiguration();\nhttpConfig.setSendServerVersion(false);\nhttpConfig.setSendDateHeader(false);\nServerConnector httpConnector = new ServerConnector(server);\nhttpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\nserver.addConnector(httpConnector);\nserver.setHandler(handler);\n}\npublic int getPort() {\nreturn ((ServerConnector) server.getConnectors()[0]).getLocalPort();\n}\npublic void start() throws Exception {\n```",
            "span_id": 5193206134586477899
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -27,7 +27,7 @@\n     }\n \n     public JettyStubHttpServer(final int port) {\n-        this.server = new Server();\n+        this(null, port);\n \n         HttpConfiguration httpConfig = new HttpConfiguration();\n         httpConfig.setSendServerVersion(false);\n@@ -37,6 +37,11 @@\n         httpConnector.setHttpConfiguration(httpConfig);\n         httpConnector.setPort(port);\n         server.addConnector(httpConnector);\n+    }\n+\n+    public JettyStubHttpServer(final Handler handler, final int port) {\n+        this.server = new Server();\n+        server.setHandler(handler);\n     }\n     \n     @Override\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 7 exact lines in a row:\n```\n}\npublic JettyStubHttpServer(final int port) {\nthis.server = new Server();\nHttpConfiguration httpConfig = new HttpConfiguration();\nhttpConfig.setSendServerVersion(false);\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 7 exact lines in a row:\n```\n}\npublic JettyStubHttpServer(final int port) {\nthis.server = new Server();\nHttpConfiguration httpConfig = new HttpConfiguration();\nhttpConfig.setSendServerVersion(false);\n```",
            "span_id": 2870137462904356336
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -28,15 +28,17 @@\n \n     public JettyStubHttpServer(final int port) {\n         this(null, port);\n-\n+    }\n+    \n+    public JettyStubHttpServer(final Handler handler, final int port) {\n+        super();\n+        this.server = new Server();\n         HttpConfiguration httpConfig = new HttpConfiguration();\n         httpConfig.setSendServerVersion(false);\n         httpConfig.setSendDateHeader(false);\n-\n+        \n         httpConnector = new org.eclipse.jetty.server.ServerConnector(server);\n         httpConnector.setHttpConfiguration(httpConfig);\n         httpConnector.setPort(port);\n         server.addConnector(httpConnector);\n-    }\n-\n-    public JettyStubHttpServer(final Handler handler, final int port) {\n-        this.server = new Server();\n         server.setHandler(handler);\n     }\n     \n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 20 exact lines in a row:\n```\npublic JettyStubHttpServer(final int port) {\nthis(null, port);\nHttpConfiguration httpConfig = new HttpConfiguration();\nhttpConfig.setSendServerVersion(false);\nhttpConfig.setSendDateHeader(false);\nhttpConnector = new org.eclipse.jetty.server.ServerConnector(server);\nhttpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\nserver.addConnector(httpConnector);\n}\npublic JettyStubHttpServer(final Handler handler, final int port) {\nthis.server = new Server();\nserver.setHandler(handler);\n}\n```",
                "updated_files": {},
                "compile_error_details": {}
            },
            "error": "Failed to prepare diffs: Diff is not valid, UnifiedDiffNoMatch: hunk failed to apply!\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain lines that match the diff you provided!\nTry again.\nDO NOT, NEVER, skip blank lines, comments, docstrings, etc!\nThe diff needs to apply cleanly to the lines in jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java!\nMake extra sure the indentation is correct.\njadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java does not contain these 20 exact lines in a row:\n```\npublic JettyStubHttpServer(final int port) {\nthis(null, port);\nHttpConfiguration httpConfig = new HttpConfiguration();\nhttpConfig.setSendServerVersion(false);\nhttpConfig.setSendDateHeader(false);\nhttpConnector = new org.eclipse.jetty.server.ServerConnector(server);\nhttpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\nserver.addConnector(httpConnector);\n}\npublic JettyStubHttpServer(final Handler handler, final int port) {\nthis.server = new Server();\nserver.setHandler(handler);\n}\n```",
            "span_id": 3010145709578704115
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -27,8 +27,6 @@\n     }\n \n     public JettyStubHttpServer(final int port) {\n-        this(null, port);\n-    }\n-    \n-    public JettyStubHttpServer(final Handler handler, final int port) {\n         super();\n         this.server = new Server();\n         HttpConfiguration httpConfig = new HttpConfiguration();\n@@ -40,6 +38,11 @@\n         httpConnector.setPort(port);\n         server.addConnector(httpConnector);\n         server.setHandler(handler);\n+    }\n+\n+    public JettyStubHttpServer(final Handler handler, final int port) {\n+        this(port);\n+        server.setHandler(handler);\n     }\n     \n     @Override\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: illegal start of type\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n-        this(null, port);\n-    }\n-\n-    public JettyStubHttpServer(final Handler handler, final int port) {\n        this.server = new Server();\n\nHttpConfiguration httpConfig = new HttpConfiguration();\nhttpConfig.setSendServerVersion(false);\nhttpConfig.setSendDateHeader(false);\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\nthis.httpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n}\n\n\n/**\n     * {@inheritDoc}\n*/\npublic JettyStubHttpServer(final Handler handler, final int port) {\nthis(port);\nserver.setHandler(handler);\n}\n\n@Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n}\n\n\n/**\n     * {@inheritDoc}\n*/\npublic JettyStubHttpServer(final Handler handler, final int port) {\nthis(port);\nserver.setHandler(handler);\n}\n\n@Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\npublic JettyStubHttpServer(final Handler handler, final int port) {\nthis(port);\nserver.setHandler(handler);\n}\n\n@Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\npublic JettyStubHttpServer(final Handler handler, final int port) {\nthis(port);\nserver.setHandler(handler);\n}\n\n@Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n}\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "33": {
                            "lines": [
                                {
                                    "line_no": 32,
                                    "content": "    public JettyStubHttpServer(final int port) {"
                                },
                                {
                                    "line_no": 33,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 34,
                                    "content": "-    }"
                                }
                            ],
                            "error_texts": [
                                "[33,] error: not a statement\n"
                            ]
                        },
                        "34": {
                            "lines": [
                                {
                                    "line_no": 33,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 34,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 35,
                                    "content": "-"
                                }
                            ],
                            "error_texts": [
                                "[34,] error: not a statement\n",
                                "[34,5] error: illegal start of expression\n"
                            ]
                        },
                        "35": {
                            "lines": [
                                {
                                    "line_no": 34,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 35,
                                    "content": "-"
                                },
                                {
                                    "line_no": 36,
                                    "content": "-    public JettyStubHttpServer(final Handler handler, final int port) {"
                                }
                            ],
                            "error_texts": [
                                "[35,] error: illegal start of type\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: illegal start of type\n",
            "span_id": 2619734973906606314
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -27,6 +27,7 @@\n     }\n \n     public JettyStubHttpServer(final int port) {\n+        this(null, port);\n+    }\n+    \n+    public JettyStubHttpServer(final Handler handler, final int port) {\n         super();\n         this.server = new Server();\n         HttpConfiguration httpConfig = new HttpConfiguration();\n@@ -38,11 +39,6 @@\n         httpConnector.setPort(port);\n         server.addConnector(httpConnector);\n         server.setHandler(handler);\n-    }\n-\n-    public JettyStubHttpServer(final Handler handler, final int port) {\n-        this(port);\n-        server.setHandler(handler);\n     }\n     \n     @Override\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: illegal start of type\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this(null, port);\n    }\n\n    public JettyStubHttpServer(final Handler handler, final int port) {\n-        this(null, port);\n-    }\n-\n-    public JettyStubHttpServer(final Handler handler, final int port) {\n        this.server = new Server();\n\nHttpConfiguration httpConfig = new HttpConfiguration();\nhttpConfig.setSendServerVersion(false);\nhttpConfig.setSendDateHeader(false);\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\nthis.httpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n}\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "37": {
                            "lines": [
                                {
                                    "line_no": 36,
                                    "content": "    public JettyStubHttpServer(final Handler handler, final int port) {"
                                },
                                {
                                    "line_no": 37,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 38,
                                    "content": "-    }"
                                }
                            ],
                            "error_texts": [
                                "[37,] error: not a statement\n"
                            ]
                        },
                        "38": {
                            "lines": [
                                {
                                    "line_no": 37,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 38,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 39,
                                    "content": "-"
                                }
                            ],
                            "error_texts": [
                                "[38,] error: not a statement\n",
                                "[38,5] error: illegal start of expression\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 39,
                                    "content": "-"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-    public JettyStubHttpServer(final Handler handler, final int port) {"
                                }
                            ],
                            "error_texts": [
                                "[39,] error: illegal start of type\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: illegal start of type\n",
            "span_id": 2531483565285341035
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -27,7 +27,7 @@\n     }\n \n     public JettyStubHttpServer(final int port) {\n-        this(null, port);\n+        this(new JadlerHandler(null), port);\n     }\n     \n     public JettyStubHttpServer(final Handler handler, final int port) {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: illegal start of type\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this(new JadlerHandler(null), port);\n    }\n\n    public JettyStubHttpServer(final Handler handler, final int port) {\n\n-        this(null, port);\n-    }\n-\n-    public JettyStubHttpServer(final Handler handler, final int port) {\n        this.server = new Server();\n\nHttpConfiguration httpConfig = new HttpConfiguration();\nhttpConfig.setSendServerVersion(false);\nhttpConfig.setSendDateHeader(false);\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\nthis.httpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n}\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "38": {
                            "lines": [
                                {
                                    "line_no": 37,
                                    "content": ""
                                },
                                {
                                    "line_no": 38,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                }
                            ],
                            "error_texts": [
                                "[38,] error: not a statement\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-"
                                }
                            ],
                            "error_texts": [
                                "[39,] error: not a statement\n",
                                "[39,5] error: illegal start of expression\n"
                            ]
                        },
                        "40": {
                            "lines": [
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-"
                                },
                                {
                                    "line_no": 41,
                                    "content": "-    public JettyStubHttpServer(final Handler handler, final int port) {"
                                }
                            ],
                            "error_texts": [
                                "[40,] error: illegal start of type\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: illegal start of type\n",
            "span_id": 12901738161596313484
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -28,6 +28,12 @@\n \n     public JettyStubHttpServer(final int port) {\n         this(new JadlerHandler(null), port);\n+        super();\n+        this.server = new Server();\n+        HttpConfiguration httpConfig = new HttpConfiguration();\n+        httpConfig.setSendServerVersion(false);\n+        httpConfig.setSendDateHeader(false);\n+\n     }\n     \n     public JettyStubHttpServer(final Handler handler, final int port) {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: illegal start of type\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this(new JadlerHandler(null), port);\n        super();\n        this.server = new Server();\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        httpConfig.setSendServerVersion(false);\n        httpConfig.setSendDateHeader(false);\n\n    }\n\n    public JettyStubHttpServer(final Handler handler, final int port) {\n\n-        this(null, port);\n-    }\n-\n-    public JettyStubHttpServer(final Handler handler, final int port) {\n        this.server = new Server();\n\nHttpConfiguration httpConfig = new HttpConfiguration();\nhttpConfig.setSendServerVersion(false);\nhttpConfig.setSendDateHeader(false);\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\nthis.httpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n}\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "44": {
                            "lines": [
                                {
                                    "line_no": 43,
                                    "content": ""
                                },
                                {
                                    "line_no": 44,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 45,
                                    "content": "-    }"
                                }
                            ],
                            "error_texts": [
                                "[44,] error: not a statement\n"
                            ]
                        },
                        "45": {
                            "lines": [
                                {
                                    "line_no": 44,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 45,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 46,
                                    "content": "-"
                                }
                            ],
                            "error_texts": [
                                "[45,5] error: illegal start of expression\n",
                                "[45,] error: not a statement\n"
                            ]
                        },
                        "46": {
                            "lines": [
                                {
                                    "line_no": 45,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 46,
                                    "content": "-"
                                },
                                {
                                    "line_no": 47,
                                    "content": "-    public JettyStubHttpServer(final Handler handler, final int port) {"
                                }
                            ],
                            "error_texts": [
                                "[46,] error: illegal start of type\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: illegal start of type\n",
            "span_id": 198672432459871833
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -28,11 +28,6 @@\n \n     public JettyStubHttpServer(final int port) {\n         this(new JadlerHandler(null), port);\n-        super();\n-        this.server = new Server();\n-        HttpConfiguration httpConfig = new HttpConfiguration();\n-        httpConfig.setSendServerVersion(false);\n-        httpConfig.setSendDateHeader(false);\n \n     }\n     \n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: illegal start of type\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this(new JadlerHandler(null), port);\n\n}\n\n    public JettyStubHttpServer(final Handler handler, final int port) {\n\n-        this(null, port);\n-    }\n-\n-    public JettyStubHttpServer(final Handler handler, final int port) {\n        this.server = new Server();\n\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        httpConfig.setSendServerVersion(false);\n        httpConfig.setSendDateHeader(false);\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\nthis.httpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n}\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": ""
                                },
                                {
                                    "line_no": 39,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-    }"
                                }
                            ],
                            "error_texts": [
                                "[39,] error: not a statement\n"
                            ]
                        },
                        "40": {
                            "lines": [
                                {
                                    "line_no": 39,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 41,
                                    "content": "-"
                                }
                            ],
                            "error_texts": [
                                "[40,] error: not a statement\n",
                                "[40,5] error: illegal start of expression\n"
                            ]
                        },
                        "41": {
                            "lines": [
                                {
                                    "line_no": 40,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 41,
                                    "content": "-"
                                },
                                {
                                    "line_no": 42,
                                    "content": "-    public JettyStubHttpServer(final Handler handler, final int port) {"
                                }
                            ],
                            "error_texts": [
                                "[41,] error: illegal start of type\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: illegal start of type\n",
            "span_id": 4994333562709045372
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -28,7 +28,6 @@\n \n     public JettyStubHttpServer(final int port) {\n         this(new JadlerHandler(null), port);\n-\n     }\n     \n     public JettyStubHttpServer(final Handler handler, final int port) {\n@@ -37,7 +36,7 @@\n         HttpConfiguration httpConfig = new HttpConfiguration();\n         httpConfig.setSendServerVersion(false);\n         httpConfig.setSendDateHeader(false);\n-        \n+\n         httpConnector = new org.eclipse.jetty.server.ServerConnector(server);\n         httpConnector.setHttpConfiguration(httpConfig);\n         httpConnector.setPort(port);\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: illegal start of type\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\n        this(new JadlerHandler(null), port);\n}\n\n    public JettyStubHttpServer(final Handler handler, final int port) {\n\n-        this(null, port);\n-    }\n-\n-    public JettyStubHttpServer(final Handler handler, final int port) {\n        this.server = new Server();\n\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        httpConfig.setSendServerVersion(false);\n        httpConfig.setSendDateHeader(false);\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\nthis.httpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n}\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "38": {
                            "lines": [
                                {
                                    "line_no": 37,
                                    "content": ""
                                },
                                {
                                    "line_no": 38,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                }
                            ],
                            "error_texts": [
                                "[38,] error: not a statement\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-"
                                }
                            ],
                            "error_texts": [
                                "[39,] error: not a statement\n",
                                "[39,5] error: illegal start of expression\n"
                            ]
                        },
                        "40": {
                            "lines": [
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-"
                                },
                                {
                                    "line_no": 41,
                                    "content": "-    public JettyStubHttpServer(final Handler handler, final int port) {"
                                }
                            ],
                            "error_texts": [
                                "[40,] error: illegal start of type\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: illegal start of type\n",
            "span_id": 7096514008727053419
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -27,7 +27,7 @@\n     }\n \n     public JettyStubHttpServer(final int port) {\n-        this(new JadlerHandler(null), port);\n+        this(new JadlerHandler(), port);\n     }\n     \n     public JettyStubHttpServer(final Handler handler, final int port) {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: illegal start of type\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\nthis(new JadlerHandler(), port);\n}\n\n    public JettyStubHttpServer(final Handler handler, final int port) {\n\n-        this(null, port);\n-    }\n-\n-    public JettyStubHttpServer(final Handler handler, final int port) {\n        this.server = new Server();\n\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        httpConfig.setSendServerVersion(false);\n        httpConfig.setSendDateHeader(false);\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\nthis.httpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n}\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "38": {
                            "lines": [
                                {
                                    "line_no": 37,
                                    "content": ""
                                },
                                {
                                    "line_no": 38,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                }
                            ],
                            "error_texts": [
                                "[38,] error: not a statement\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-"
                                }
                            ],
                            "error_texts": [
                                "[39,] error: not a statement\n",
                                "[39,5] error: illegal start of expression\n"
                            ]
                        },
                        "40": {
                            "lines": [
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-"
                                },
                                {
                                    "line_no": 41,
                                    "content": "-    public JettyStubHttpServer(final Handler handler, final int port) {"
                                }
                            ],
                            "error_texts": [
                                "[40,] error: illegal start of type\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: illegal start of type\n",
            "span_id": 5402885884029987911
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -27,7 +27,7 @@\n     }\n \n     public JettyStubHttpServer(final int port) {\n-        this(new JadlerHandler(), port);\n+        this(new JadlerHandler(null), port);\n     }\n     \n     public JettyStubHttpServer(final Handler handler, final int port) {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: illegal start of type\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\nthis(new JadlerHandler(null), port);\n}\n\n    public JettyStubHttpServer(final Handler handler, final int port) {\n\n-        this(null, port);\n-    }\n-\n-    public JettyStubHttpServer(final Handler handler, final int port) {\n        this.server = new Server();\n\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        httpConfig.setSendServerVersion(false);\n        httpConfig.setSendDateHeader(false);\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\nthis.httpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n}\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "38": {
                            "lines": [
                                {
                                    "line_no": 37,
                                    "content": ""
                                },
                                {
                                    "line_no": 38,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                }
                            ],
                            "error_texts": [
                                "[38,] error: not a statement\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-"
                                }
                            ],
                            "error_texts": [
                                "[39,] error: not a statement\n",
                                "[39,5] error: illegal start of expression\n"
                            ]
                        },
                        "40": {
                            "lines": [
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-"
                                },
                                {
                                    "line_no": 41,
                                    "content": "-    public JettyStubHttpServer(final Handler handler, final int port) {"
                                }
                            ],
                            "error_texts": [
                                "[40,] error: illegal start of type\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: illegal start of type\n",
            "span_id": 6567440693596072577
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -28,6 +28,12 @@\n \n     public JettyStubHttpServer(final int port) {\n         this(new JadlerHandler(null), port);\n+        super();\n+        this.server = new Server();\n+        HttpConfiguration httpConfig = new HttpConfiguration();\n+        httpConfig.setSendServerVersion(false);\n+        httpConfig.setSendDateHeader(false);\n+\n     }\n     \n     public JettyStubHttpServer(final Handler handler, final int port) {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: illegal start of type\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\nthis(new JadlerHandler(null), port);\nsuper();\n        this.server = new Server();\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        httpConfig.setSendServerVersion(false);\n        httpConfig.setSendDateHeader(false);\n\n}\n\n    public JettyStubHttpServer(final Handler handler, final int port) {\n\n-        this(null, port);\n-    }\n-\n-    public JettyStubHttpServer(final Handler handler, final int port) {\n        this.server = new Server();\n\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        httpConfig.setSendServerVersion(false);\n        httpConfig.setSendDateHeader(false);\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\nthis.httpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n}\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "44": {
                            "lines": [
                                {
                                    "line_no": 43,
                                    "content": ""
                                },
                                {
                                    "line_no": 44,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 45,
                                    "content": "-    }"
                                }
                            ],
                            "error_texts": [
                                "[44,] error: not a statement\n"
                            ]
                        },
                        "45": {
                            "lines": [
                                {
                                    "line_no": 44,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 45,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 46,
                                    "content": "-"
                                }
                            ],
                            "error_texts": [
                                "[45,5] error: illegal start of expression\n",
                                "[45,] error: not a statement\n"
                            ]
                        },
                        "46": {
                            "lines": [
                                {
                                    "line_no": 45,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 46,
                                    "content": "-"
                                },
                                {
                                    "line_no": 47,
                                    "content": "-    public JettyStubHttpServer(final Handler handler, final int port) {"
                                }
                            ],
                            "error_texts": [
                                "[46,] error: illegal start of type\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: illegal start of type\n",
            "span_id": 8462017121692639234
        },
        {
            "input": "```diff\n--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java\n@@ -28,12 +28,6 @@\n \n     public JettyStubHttpServer(final int port) {\n         this(new JadlerHandler(null), port);\n-        super();\n-        this.server = new Server();\n-        HttpConfiguration httpConfig = new HttpConfiguration();\n-        httpConfig.setSendServerVersion(false);\n-        httpConfig.setSendDateHeader(false);\n-\n     }\n     \n     public JettyStubHttpServer(final Handler handler, final int port) {\n\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "error: illegal start of type\n",
                "updated_files": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": "/*\n * Copyright (c) 2012 - 2016 Jadler contributors\n * This program is made available under the terms of the MIT License.\n */\npackage net.jadler.stubbing.server.jetty;\n\nimport net.jadler.RequestManager;\nimport net.jadler.stubbing.server.StubHttpServer;\nimport org.apache.commons.lang.Validate;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.HttpConfiguration;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n\n/**\n * Default stub http server implementation using Jetty as an http server.\n */\npublic class JettyStubHttpServer implements StubHttpServer {\n\n    private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);\n    private final Server server;\n    private final Connector httpConnector;\n\n    public JettyStubHttpServer() {\n        this(0);\n    }\n\n\n    public JettyStubHttpServer(final int port) {\nthis(new JadlerHandler(null), port);\n}\n\n    public JettyStubHttpServer(final Handler handler, final int port) {\n\n-        this(null, port);\n-    }\n-\n-    public JettyStubHttpServer(final Handler handler, final int port) {\n        this.server = new Server();\n\n        HttpConfiguration httpConfig = new HttpConfiguration();\n        httpConfig.setSendServerVersion(false);\n        httpConfig.setSendDateHeader(false);\n        this.server.setSendServerVersion(false);\n        this.server.setSendDateHeader(true);\n\n        this.httpConnector = new SelectChannelConnector();\nthis.httpConnector.setHttpConfiguration(httpConfig);\nhttpConnector.setPort(port);\n        server.addConnector(this.httpConnector);\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void registerRequestManager(final RequestManager ruleProvider) {\n        Validate.notNull(ruleProvider, \"ruleProvider cannot be null\");\n\n        server.setHandler(new JadlerHandler(ruleProvider));\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void start() throws Exception {\n        logger.debug(\"starting jetty\");\n        server.start();\n        logger.debug(\"jetty started\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public void stop() throws Exception {\n        logger.debug(\"stopping jetty\");\n        server.stop();\n        logger.debug(\"jetty stopped\");\n}\n\n\n/**\n     * {@inheritDoc}\n*/\n@Override\n    public int getPort() {\n        return httpConnector.getLocalPort();\n}\n}"
                },
                "compile_error_details": {
                    "jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java": {
                        "38": {
                            "lines": [
                                {
                                    "line_no": 37,
                                    "content": ""
                                },
                                {
                                    "line_no": 38,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                }
                            ],
                            "error_texts": [
                                "[38,] error: not a statement\n"
                            ]
                        },
                        "39": {
                            "lines": [
                                {
                                    "line_no": 38,
                                    "content": "-        this(null, port);"
                                },
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-"
                                }
                            ],
                            "error_texts": [
                                "[39,] error: not a statement\n",
                                "[39,5] error: illegal start of expression\n"
                            ]
                        },
                        "40": {
                            "lines": [
                                {
                                    "line_no": 39,
                                    "content": "-    }"
                                },
                                {
                                    "line_no": 40,
                                    "content": "-"
                                },
                                {
                                    "line_no": 41,
                                    "content": "-    public JettyStubHttpServer(final Handler handler, final int port) {"
                                }
                            ],
                            "error_texts": [
                                "[40,] error: illegal start of type\n"
                            ]
                        }
                    }
                }
            },
            "error": "error: illegal start of type\n",
            "span_id": 10702807414778817234
        }
    ],
    "read_file": [],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}