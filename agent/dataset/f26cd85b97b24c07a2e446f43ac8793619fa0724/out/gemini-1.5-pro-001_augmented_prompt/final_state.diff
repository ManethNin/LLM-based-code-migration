diff --git a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java
index b6fde22..43d94bc 100644
--- a/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java
+++ b/jadler-jetty/src/main/java/net/jadler/stubbing/server/jetty/JettyStubHttpServer.java
@@ -8,6 +8,7 @@ import net.jadler.RequestManager;
 import net.jadler.stubbing.server.StubHttpServer;
 import org.apache.commons.lang.Validate;
 import org.eclipse.jetty.server.Connector;
+import org.eclipse.jetty.server.HttpConfiguration;
 import org.eclipse.jetty.server.Server;
 import org.eclipse.jetty.server.nio.SelectChannelConnector;
 import org.slf4j.Logger;
@@ -29,54 +30,68 @@ public class JettyStubHttpServer implements StubHttpServer {
 
 
     public JettyStubHttpServer(final int port) {
+this(new JadlerHandler(null), port);
+}
+
+    public JettyStubHttpServer(final Handler handler, final int port) {
+
+-        this(null, port);
+-    }
+-
+-    public JettyStubHttpServer(final Handler handler, final int port) {
         this.server = new Server();
+
+        HttpConfiguration httpConfig = new HttpConfiguration();
+        httpConfig.setSendServerVersion(false);
+        httpConfig.setSendDateHeader(false);
         this.server.setSendServerVersion(false);
         this.server.setSendDateHeader(true);
 
         this.httpConnector = new SelectChannelConnector();
-        this.httpConnector.setPort(port);
+this.httpConnector.setHttpConfiguration(httpConfig);
+httpConnector.setPort(port);
         server.addConnector(this.httpConnector);
-    }
+}
 
 
-    /**
+/**
      * {@inheritDoc}
-     */
-    @Override
+*/
+@Override
     public void registerRequestManager(final RequestManager ruleProvider) {
         Validate.notNull(ruleProvider, "ruleProvider cannot be null");
 
         server.setHandler(new JadlerHandler(ruleProvider));
-    }
+}
 
 
-    /**
+/**
      * {@inheritDoc}
-     */
-    @Override
+*/
+@Override
     public void start() throws Exception {
         logger.debug("starting jetty");
         server.start();
         logger.debug("jetty started");
-    }
+}
 
 
-    /**
+/**
      * {@inheritDoc}
-     */
-    @Override
+*/
+@Override
     public void stop() throws Exception {
         logger.debug("stopping jetty");
         server.stop();
         logger.debug("jetty stopped");
-    }
+}
 
 
-    /**
+/**
      * {@inheritDoc}
-     */
-    @Override
+*/
+@Override
     public int getPort() {
         return httpConnector.getLocalPort();
-    }
+}
 }
\ No newline at end of file