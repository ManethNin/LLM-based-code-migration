{
    "validate_diffs": [],
    "compile_maven": [
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.DependencyResolutionRequiredException;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.project.MavenProject;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 6485058430240089816
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.DependencyResolutionRequiredException;\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.project.MavenProject;\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 15755968980011549486
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 17315075976646255075
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[74,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        },
                        "220": {
                            "lines": [
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[220,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 7690767482608932734
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[74,1] class, interface, or enum expected\n"
                            ]
                        },
                        "75": {
                            "lines": [
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[75,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        },
                        "220": {
                            "lines": [
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[220,1] class, interface, or enum expected\n"
                            ]
                        },
                        "221": {
                            "lines": [
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[221,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 8253938351640110265
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[74,1] class, interface, or enum expected\n"
                            ]
                        },
                        "75": {
                            "lines": [
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[75,1] class, interface, or enum expected\n"
                            ]
                        },
                        "76": {
                            "lines": [
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[76,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        },
                        "220": {
                            "lines": [
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[220,1] class, interface, or enum expected\n"
                            ]
                        },
                        "221": {
                            "lines": [
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[221,1] class, interface, or enum expected\n"
                            ]
                        },
                        "222": {
                            "lines": [
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[222,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 2229715278070481470
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[74,1] class, interface, or enum expected\n"
                            ]
                        },
                        "75": {
                            "lines": [
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[75,1] class, interface, or enum expected\n"
                            ]
                        },
                        "76": {
                            "lines": [
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[76,1] class, interface, or enum expected\n"
                            ]
                        },
                        "77": {
                            "lines": [
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[77,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        },
                        "220": {
                            "lines": [
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[220,1] class, interface, or enum expected\n"
                            ]
                        },
                        "221": {
                            "lines": [
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[221,1] class, interface, or enum expected\n"
                            ]
                        },
                        "222": {
                            "lines": [
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[222,1] class, interface, or enum expected\n"
                            ]
                        },
                        "223": {
                            "lines": [
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[223,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 11080377689660561129
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[74,1] class, interface, or enum expected\n"
                            ]
                        },
                        "75": {
                            "lines": [
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[75,1] class, interface, or enum expected\n"
                            ]
                        },
                        "76": {
                            "lines": [
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[76,1] class, interface, or enum expected\n"
                            ]
                        },
                        "77": {
                            "lines": [
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[77,1] class, interface, or enum expected\n"
                            ]
                        },
                        "78": {
                            "lines": [
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[78,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        },
                        "220": {
                            "lines": [
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[220,1] class, interface, or enum expected\n"
                            ]
                        },
                        "221": {
                            "lines": [
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[221,1] class, interface, or enum expected\n"
                            ]
                        },
                        "222": {
                            "lines": [
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[222,1] class, interface, or enum expected\n"
                            ]
                        },
                        "223": {
                            "lines": [
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[223,1] class, interface, or enum expected\n"
                            ]
                        },
                        "224": {
                            "lines": [
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[224,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 9668223211217213281
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[74,1] class, interface, or enum expected\n"
                            ]
                        },
                        "75": {
                            "lines": [
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[75,1] class, interface, or enum expected\n"
                            ]
                        },
                        "76": {
                            "lines": [
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[76,1] class, interface, or enum expected\n"
                            ]
                        },
                        "77": {
                            "lines": [
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[77,1] class, interface, or enum expected\n"
                            ]
                        },
                        "78": {
                            "lines": [
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[78,1] class, interface, or enum expected\n"
                            ]
                        },
                        "79": {
                            "lines": [
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[79,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        },
                        "220": {
                            "lines": [
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[220,1] class, interface, or enum expected\n"
                            ]
                        },
                        "221": {
                            "lines": [
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[221,1] class, interface, or enum expected\n"
                            ]
                        },
                        "222": {
                            "lines": [
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[222,1] class, interface, or enum expected\n"
                            ]
                        },
                        "223": {
                            "lines": [
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[223,1] class, interface, or enum expected\n"
                            ]
                        },
                        "224": {
                            "lines": [
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[224,1] class, interface, or enum expected\n"
                            ]
                        },
                        "225": {
                            "lines": [
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[225,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 11053255502879803082
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[74,1] class, interface, or enum expected\n"
                            ]
                        },
                        "75": {
                            "lines": [
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[75,1] class, interface, or enum expected\n"
                            ]
                        },
                        "76": {
                            "lines": [
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[76,1] class, interface, or enum expected\n"
                            ]
                        },
                        "77": {
                            "lines": [
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[77,1] class, interface, or enum expected\n"
                            ]
                        },
                        "78": {
                            "lines": [
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[78,1] class, interface, or enum expected\n"
                            ]
                        },
                        "79": {
                            "lines": [
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[79,1] class, interface, or enum expected\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 81,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[80,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        },
                        "220": {
                            "lines": [
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[220,1] class, interface, or enum expected\n"
                            ]
                        },
                        "221": {
                            "lines": [
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[221,1] class, interface, or enum expected\n"
                            ]
                        },
                        "222": {
                            "lines": [
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[222,1] class, interface, or enum expected\n"
                            ]
                        },
                        "223": {
                            "lines": [
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[223,1] class, interface, or enum expected\n"
                            ]
                        },
                        "224": {
                            "lines": [
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[224,1] class, interface, or enum expected\n"
                            ]
                        },
                        "225": {
                            "lines": [
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[225,1] class, interface, or enum expected\n"
                            ]
                        },
                        "226": {
                            "lines": [
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 227,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[226,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 12753614880868204494
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[74,1] class, interface, or enum expected\n"
                            ]
                        },
                        "75": {
                            "lines": [
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[75,1] class, interface, or enum expected\n"
                            ]
                        },
                        "76": {
                            "lines": [
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[76,1] class, interface, or enum expected\n"
                            ]
                        },
                        "77": {
                            "lines": [
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[77,1] class, interface, or enum expected\n"
                            ]
                        },
                        "78": {
                            "lines": [
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[78,1] class, interface, or enum expected\n"
                            ]
                        },
                        "79": {
                            "lines": [
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[79,1] class, interface, or enum expected\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[80,1] class, interface, or enum expected\n"
                            ]
                        },
                        "81": {
                            "lines": [
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 82,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[81,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        },
                        "220": {
                            "lines": [
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[220,1] class, interface, or enum expected\n"
                            ]
                        },
                        "221": {
                            "lines": [
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[221,1] class, interface, or enum expected\n"
                            ]
                        },
                        "222": {
                            "lines": [
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[222,1] class, interface, or enum expected\n"
                            ]
                        },
                        "223": {
                            "lines": [
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[223,1] class, interface, or enum expected\n"
                            ]
                        },
                        "224": {
                            "lines": [
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[224,1] class, interface, or enum expected\n"
                            ]
                        },
                        "225": {
                            "lines": [
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[225,1] class, interface, or enum expected\n"
                            ]
                        },
                        "226": {
                            "lines": [
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[226,1] class, interface, or enum expected\n"
                            ]
                        },
                        "227": {
                            "lines": [
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 228,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[227,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 981796678839254868
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[74,1] class, interface, or enum expected\n"
                            ]
                        },
                        "75": {
                            "lines": [
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[75,1] class, interface, or enum expected\n"
                            ]
                        },
                        "76": {
                            "lines": [
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[76,1] class, interface, or enum expected\n"
                            ]
                        },
                        "77": {
                            "lines": [
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[77,1] class, interface, or enum expected\n"
                            ]
                        },
                        "78": {
                            "lines": [
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[78,1] class, interface, or enum expected\n"
                            ]
                        },
                        "79": {
                            "lines": [
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[79,1] class, interface, or enum expected\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[80,1] class, interface, or enum expected\n"
                            ]
                        },
                        "81": {
                            "lines": [
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 82,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[81,1] class, interface, or enum expected\n"
                            ]
                        },
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 82,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 83,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[82,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        },
                        "220": {
                            "lines": [
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[220,1] class, interface, or enum expected\n"
                            ]
                        },
                        "221": {
                            "lines": [
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[221,1] class, interface, or enum expected\n"
                            ]
                        },
                        "222": {
                            "lines": [
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[222,1] class, interface, or enum expected\n"
                            ]
                        },
                        "223": {
                            "lines": [
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[223,1] class, interface, or enum expected\n"
                            ]
                        },
                        "224": {
                            "lines": [
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[224,1] class, interface, or enum expected\n"
                            ]
                        },
                        "225": {
                            "lines": [
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[225,1] class, interface, or enum expected\n"
                            ]
                        },
                        "226": {
                            "lines": [
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[226,1] class, interface, or enum expected\n"
                            ]
                        },
                        "227": {
                            "lines": [
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 228,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[227,1] class, interface, or enum expected\n"
                            ]
                        },
                        "228": {
                            "lines": [
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 228,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 229,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[228,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 4796559464715973323
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[74,1] class, interface, or enum expected\n"
                            ]
                        },
                        "75": {
                            "lines": [
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[75,1] class, interface, or enum expected\n"
                            ]
                        },
                        "76": {
                            "lines": [
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[76,1] class, interface, or enum expected\n"
                            ]
                        },
                        "77": {
                            "lines": [
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[77,1] class, interface, or enum expected\n"
                            ]
                        },
                        "78": {
                            "lines": [
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[78,1] class, interface, or enum expected\n"
                            ]
                        },
                        "79": {
                            "lines": [
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[79,1] class, interface, or enum expected\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[80,1] class, interface, or enum expected\n"
                            ]
                        },
                        "81": {
                            "lines": [
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 82,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[81,1] class, interface, or enum expected\n"
                            ]
                        },
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 82,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[82,1] class, interface, or enum expected\n"
                            ]
                        },
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 84,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[83,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        },
                        "220": {
                            "lines": [
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[220,1] class, interface, or enum expected\n"
                            ]
                        },
                        "221": {
                            "lines": [
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[221,1] class, interface, or enum expected\n"
                            ]
                        },
                        "222": {
                            "lines": [
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[222,1] class, interface, or enum expected\n"
                            ]
                        },
                        "223": {
                            "lines": [
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[223,1] class, interface, or enum expected\n"
                            ]
                        },
                        "224": {
                            "lines": [
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[224,1] class, interface, or enum expected\n"
                            ]
                        },
                        "225": {
                            "lines": [
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[225,1] class, interface, or enum expected\n"
                            ]
                        },
                        "226": {
                            "lines": [
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[226,1] class, interface, or enum expected\n"
                            ]
                        },
                        "227": {
                            "lines": [
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 228,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[227,1] class, interface, or enum expected\n"
                            ]
                        },
                        "228": {
                            "lines": [
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 228,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 229,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[228,1] class, interface, or enum expected\n"
                            ]
                        },
                        "229": {
                            "lines": [
                                {
                                    "line_no": 228,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 229,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 230,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[229,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 1770449275237004003
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[74,1] class, interface, or enum expected\n"
                            ]
                        },
                        "75": {
                            "lines": [
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[75,1] class, interface, or enum expected\n"
                            ]
                        },
                        "76": {
                            "lines": [
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[76,1] class, interface, or enum expected\n"
                            ]
                        },
                        "77": {
                            "lines": [
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[77,1] class, interface, or enum expected\n"
                            ]
                        },
                        "78": {
                            "lines": [
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[78,1] class, interface, or enum expected\n"
                            ]
                        },
                        "79": {
                            "lines": [
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[79,1] class, interface, or enum expected\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[80,1] class, interface, or enum expected\n"
                            ]
                        },
                        "81": {
                            "lines": [
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 82,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[81,1] class, interface, or enum expected\n"
                            ]
                        },
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 82,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[82,1] class, interface, or enum expected\n"
                            ]
                        },
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[83,1] class, interface, or enum expected\n"
                            ]
                        },
                        "84": {
                            "lines": [
                                {
                                    "line_no": 83,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 85,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[84,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        },
                        "220": {
                            "lines": [
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[220,1] class, interface, or enum expected\n"
                            ]
                        },
                        "221": {
                            "lines": [
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[221,1] class, interface, or enum expected\n"
                            ]
                        },
                        "222": {
                            "lines": [
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[222,1] class, interface, or enum expected\n"
                            ]
                        },
                        "223": {
                            "lines": [
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[223,1] class, interface, or enum expected\n"
                            ]
                        },
                        "224": {
                            "lines": [
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[224,1] class, interface, or enum expected\n"
                            ]
                        },
                        "225": {
                            "lines": [
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[225,1] class, interface, or enum expected\n"
                            ]
                        },
                        "226": {
                            "lines": [
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[226,1] class, interface, or enum expected\n"
                            ]
                        },
                        "227": {
                            "lines": [
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 228,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[227,1] class, interface, or enum expected\n"
                            ]
                        },
                        "228": {
                            "lines": [
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 228,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 229,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[228,1] class, interface, or enum expected\n"
                            ]
                        },
                        "229": {
                            "lines": [
                                {
                                    "line_no": 228,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 229,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 230,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[229,1] class, interface, or enum expected\n"
                            ]
                        },
                        "230": {
                            "lines": [
                                {
                                    "line_no": 229,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 230,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 231,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[230,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 14459090561716553039
        },
        {
            "input": "```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java\n@@ -20,0 +21,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```\n\n```diff\n--- tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n+++ tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java\n@@ -23,0 +24,1 @@\n+import org.apache.maven.plugin.AbstractMojo;\n```",
            "output": {
                "compilation_has_succeeded": false,
                "test_has_succeeded": false,
                "error_text": "class, interface, or enum expected\n",
                "updated_files": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.artifact.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.MojoExecutionException;\nimport org.apache.maven.plugins.annotations.Component;\nimport org.apache.maven.plugins.annotations.LifecyclePhase;\nimport org.apache.maven.plugins.annotations.Mojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.plugins.annotations.ResolutionScope;\nimport org.codehaus.plexus.archiver.ArchiverException;\nimport org.codehaus.plexus.archiver.UnArchiver;\nimport org.codehaus.plexus.archiver.manager.ArchiverManager;\nimport org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\nimport org.codehaus.plexus.util.FileUtils;\nimport org.codehaus.plexus.util.IOUtil;\nimport org.codehaus.plexus.util.ReaderFactory;\nimport org.codehaus.plexus.util.xml.XmlStreamReader;\nimport org.codehaus.plexus.util.xml.Xpp3Dom;\nimport org.codehaus.plexus.util.xml.Xpp3DomBuilder;\nimport org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Properties;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipFile;\n\n@Mojo(\n  name = \"resources\",\n  defaultPhase = LifecyclePhase.PROCESS_RESOURCES,\n  requiresDependencyResolution = ResolutionScope.RUNTIME)\npublic class UnPackThemeMojo extends AbstractThemeMojo {\n\n  /**\n   * To look up Archiver/UnArchiver implementations\n   */\n  @Component\n  private ArchiverManager archiverManager;\n\n  /**\n   * Directory to unpack JARs into if needed\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/theme/work\", required = true)\n  private File workDirectory;\n\n  /**\n   * The directory where the webapp is built.\n   */\n  @Parameter(defaultValue = \"${project.build.directory}/${project.build.finalName}\", required = true)\n  private File webappDirectory;\n\n  /**\n   * Don't use the versioned information of the themes..\n   */\n  @Parameter\n  private boolean ignoreVersioned;\n\n\n  private String getThemeDescriptor(final File jarFile) throws MojoExecutionException {\n    try (ZipFile zip = new ZipFile(jarFile)) {\n      final Enumeration<? extends ZipEntry> files = zip.entries();\n      while (files.hasMoreElements()) {\n        final ZipEntry nextEntry = files.nextElement();\n        if (nextEntry == null || nextEntry.isDirectory()) {\n          continue;\n        }\n        final String name = nextEntry.getName();\n        if (name.equals(\"META-INF/tobago-theme.xml\") || name.equals(\"META-INF/tobago-config.xml\")) {\n          try (XmlStreamReader xsr = ReaderFactory.newXmlReader(zip.getInputStream(nextEntry))) {\n            final StringWriter stringWriter = new StringWriter();\n            IOUtil.copy(xsr, stringWriter);\n            return stringWriter.toString();\n          }\n        }\n      }\n    } catch (final IOException e) {\n      throw new MojoExecutionException(\"Error find ThemeDescriptor in \" + jarFile, e);\n    }\n    // ignore\n    return null;\n  }\n\n  public void execute() throws MojoExecutionException {\n    try {\n      final Iterator<String> artifacts = getProject().getRuntimeClasspathElements().iterator();\n      if (!workDirectory.exists()) {\n        workDirectory.mkdirs();\n      }\n      while (artifacts.hasNext()) {\n\n        final String artifact = artifacts.next();\n        if (getLog().isDebugEnabled()) {\n          getLog().debug(\"Testing jar \" + artifact);\n        }\n\n        final File file = new File(artifact);\n        if (file.isFile() && artifact.endsWith(\".jar\")) {\n          final String descriptor = getThemeDescriptor(file);\n          if (descriptor != null) {\n\n            final String name = file.getName();\n            final File tempLocation = new File(workDirectory, name.substring(0, name.length() - 4));\n            boolean process = false;\n            if (!tempLocation.exists()) {\n              tempLocation.mkdirs();\n              process = true;\n            } else if (file.lastModified() > tempLocation.lastModified()) {\n              process = true;\n            }\n            if (process) {\n              try {\n                unpack(file, tempLocation);\n                String version = null;\n                String resourcePath = null;\n                try {\n                  final Xpp3Dom xpp3Dom = Xpp3DomBuilder.build(new StringReader(descriptor));\n                  final Xpp3Dom themeDefinitions = xpp3Dom.getChild(\"theme-definitions\");\n                  if (themeDefinitions != null && !ignoreVersioned) {\n                    for (final Xpp3Dom themeDefinition : themeDefinitions.getChildren()) {\n                      final Xpp3Dom versionedDom = themeDefinition.getChild(\"versioned\");\n                      if (versionedDom != null) {\n                        final boolean versioned = Boolean.parseBoolean(versionedDom.getValue());\n                        if (versioned) {\n                          final Xpp3Dom resourcePathDom = themeDefinition.getChild(\"resource-path\");\n                          resourcePath = resourcePathDom.getValue();\n                          final Properties properties = new Properties();\n                          final String metaInf = tempLocation + \"/META-INF/MANIFEST.MF\";\n                          properties.load(new ByteArrayInputStream(FileUtils.fileRead(metaInf).getBytes()));\n                          version = properties.getProperty(\"Implementation-Version\");\n                          if (version == null) {\n                            getLog().error(\"No Implementation-Version found in Manifest-File for theme: '\"\n                              + name + \"'.\");\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (final IOException | XmlPullParserException e) {\n                  getLog().error(e);\n                }\n                if (getLog().isDebugEnabled()) {\n                  getLog().debug(\"Expanding theme: \" + name);\n                  getLog().debug(\"Version: \" + version);\n                  getLog().debug(\"ResourcePath: \" + resourcePath);\n                }\n                final String[] fileNames = getThemeFiles(tempLocation);\n                for (final String fileName : fileNames) {\n                  final File fromFile = new File(tempLocation, fileName);\n                  String toFileName = fileName;\n                  if (resourcePath != null && version != null && toFileName.startsWith(resourcePath)\n                    && !fileName.endsWith(\"blank.html\")) {\n                    toFileName = resourcePath + \"/\" + version + \"/\" + toFileName.substring(resourcePath.length() + 1);\n                  }\n                  if (getLog().isDebugEnabled()) {\n                    getLog().debug(\"Copy file \" + fromFile + \" to: \" + toFileName);\n                  }\n                  final File toFile = new File(webappDirectory, toFileName);\n                  try {\n                    FileUtils.copyFile(fromFile, toFile);\n                  } catch (final IOException e) {\n                    throw new MojoExecutionException(\"Error copy file: \" + fromFile + \" to: \" + toFile, e);\n                  }\n                }\n              } catch (final NoSuchArchiverException e) {\n                getLog().info(\"Skip unpacking dependency file with unknown extension: \" + file.getPath());\n              }\n            }\n          }\n        }\n      }\n    } catch (final DependencyResolutionRequiredException drre) {\n      throw new MojoExecutionException(drre.getMessage(), drre);\n    }\n  }\n\n  private void unpack(final File file, final File location)\n    throws MojoExecutionException, NoSuchArchiverException {\n    final String archiveExt = FileUtils.getExtension(file.getAbsolutePath()).toLowerCase(Locale.ENGLISH);\n    try {\n      final UnArchiver unArchiver = archiverManager.getUnArchiver(archiveExt);\n      unArchiver.setSourceFile(file);\n      unArchiver.setDestDirectory(location);\n      unArchiver.extract();\n    } catch (final ArchiverException e) {\n      throw new MojoExecutionException(\"Error unpacking file: \" + file + \"to: \" + location, e);\n    }\n  }\n}\n\n\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.DependencyResolutionRequiredException;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n",
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.apache.myfaces.tobago.maven.plugin;\n\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugins.annotations.Parameter;\nimport org.apache.maven.project.MavenProject;\nimport org.codehaus.plexus.util.DirectoryScanner;\n\nimport java.io.File;\n\npublic abstract class AbstractThemeMojo extends AbstractMojo {\n\n  /**\n   * The Maven project.\n   */\n  @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n  private MavenProject project;\n\n  private static final String[] INCLUDES = new String[]{\n    \"**\"\n  };\n  private static final String[] EXCLUDES = new String[]{\n    \"META-INF/**/*\",\n    \"**/*.properties\",\n    \"**/*.xml\",\n    \"**/*.class\"\n  };\n\n  public MavenProject getProject() {\n    return project;\n  }\n\n  protected String[] getThemeFiles(final File sourceDir) {\n    final DirectoryScanner scanner = new DirectoryScanner();\n    scanner.setBasedir(sourceDir);\n    scanner.setIncludes(INCLUDES);\n    scanner.setExcludes(EXCLUDES);\n    scanner.scan();\n    return scanner.getIncludedFiles();\n  }\n\n  public String[] getIncludes() {\n    return INCLUDES;\n  }\n\n  public String[] getExcludes() {\n    return EXCLUDES;\n  }\n\n\n}\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.project.MavenProject;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\nimport org.apache.maven.plugin.AbstractMojo;\n"
                },
                "compile_error_details": {
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/AbstractThemeMojo.java": {
                        "70": {
                            "lines": [
                                {
                                    "line_no": 69,
                                    "content": "}"
                                },
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                }
                            ],
                            "error_texts": [
                                "[70,1] class, interface, or enum expected\n"
                            ]
                        },
                        "71": {
                            "lines": [
                                {
                                    "line_no": 70,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[71,1] class, interface, or enum expected\n"
                            ]
                        },
                        "72": {
                            "lines": [
                                {
                                    "line_no": 71,
                                    "content": "import org.apache.maven.project.MavenProject;"
                                },
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[72,1] class, interface, or enum expected\n"
                            ]
                        },
                        "73": {
                            "lines": [
                                {
                                    "line_no": 72,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[73,1] class, interface, or enum expected\n"
                            ]
                        },
                        "74": {
                            "lines": [
                                {
                                    "line_no": 73,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[74,1] class, interface, or enum expected\n"
                            ]
                        },
                        "75": {
                            "lines": [
                                {
                                    "line_no": 74,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[75,1] class, interface, or enum expected\n"
                            ]
                        },
                        "76": {
                            "lines": [
                                {
                                    "line_no": 75,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[76,1] class, interface, or enum expected\n"
                            ]
                        },
                        "77": {
                            "lines": [
                                {
                                    "line_no": 76,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[77,1] class, interface, or enum expected\n"
                            ]
                        },
                        "78": {
                            "lines": [
                                {
                                    "line_no": 77,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[78,1] class, interface, or enum expected\n"
                            ]
                        },
                        "79": {
                            "lines": [
                                {
                                    "line_no": 78,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[79,1] class, interface, or enum expected\n"
                            ]
                        },
                        "80": {
                            "lines": [
                                {
                                    "line_no": 79,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[80,1] class, interface, or enum expected\n"
                            ]
                        },
                        "81": {
                            "lines": [
                                {
                                    "line_no": 80,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 82,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[81,1] class, interface, or enum expected\n"
                            ]
                        },
                        "82": {
                            "lines": [
                                {
                                    "line_no": 81,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 82,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[82,1] class, interface, or enum expected\n"
                            ]
                        },
                        "83": {
                            "lines": [
                                {
                                    "line_no": 82,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 83,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[83,1] class, interface, or enum expected\n"
                            ]
                        },
                        "84": {
                            "lines": [
                                {
                                    "line_no": 83,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 84,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[84,1] class, interface, or enum expected\n"
                            ]
                        },
                        "85": {
                            "lines": [
                                {
                                    "line_no": 84,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 85,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 86,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[85,1] class, interface, or enum expected\n"
                            ]
                        }
                    },
                    "tobago-tool/tobago-theme-plugin/src/main/java/org/apache/myfaces/tobago/maven/plugin/UnPackThemeMojo.java": {
                        "216": {
                            "lines": [
                                {
                                    "line_no": 215,
                                    "content": ""
                                },
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                }
                            ],
                            "error_texts": [
                                "[216,1] class, interface, or enum expected\n"
                            ]
                        },
                        "217": {
                            "lines": [
                                {
                                    "line_no": 216,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[217,1] class, interface, or enum expected\n"
                            ]
                        },
                        "218": {
                            "lines": [
                                {
                                    "line_no": 217,
                                    "content": "import org.apache.maven.plugin.DependencyResolutionRequiredException;"
                                },
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[218,1] class, interface, or enum expected\n"
                            ]
                        },
                        "219": {
                            "lines": [
                                {
                                    "line_no": 218,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[219,1] class, interface, or enum expected\n"
                            ]
                        },
                        "220": {
                            "lines": [
                                {
                                    "line_no": 219,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[220,1] class, interface, or enum expected\n"
                            ]
                        },
                        "221": {
                            "lines": [
                                {
                                    "line_no": 220,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[221,1] class, interface, or enum expected\n"
                            ]
                        },
                        "222": {
                            "lines": [
                                {
                                    "line_no": 221,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[222,1] class, interface, or enum expected\n"
                            ]
                        },
                        "223": {
                            "lines": [
                                {
                                    "line_no": 222,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[223,1] class, interface, or enum expected\n"
                            ]
                        },
                        "224": {
                            "lines": [
                                {
                                    "line_no": 223,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[224,1] class, interface, or enum expected\n"
                            ]
                        },
                        "225": {
                            "lines": [
                                {
                                    "line_no": 224,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[225,1] class, interface, or enum expected\n"
                            ]
                        },
                        "226": {
                            "lines": [
                                {
                                    "line_no": 225,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[226,1] class, interface, or enum expected\n"
                            ]
                        },
                        "227": {
                            "lines": [
                                {
                                    "line_no": 226,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 228,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[227,1] class, interface, or enum expected\n"
                            ]
                        },
                        "228": {
                            "lines": [
                                {
                                    "line_no": 227,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 228,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 229,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[228,1] class, interface, or enum expected\n"
                            ]
                        },
                        "229": {
                            "lines": [
                                {
                                    "line_no": 228,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 229,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 230,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[229,1] class, interface, or enum expected\n"
                            ]
                        },
                        "230": {
                            "lines": [
                                {
                                    "line_no": 229,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 230,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 231,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                }
                            ],
                            "error_texts": [
                                "[230,1] class, interface, or enum expected\n"
                            ]
                        },
                        "231": {
                            "lines": [
                                {
                                    "line_no": 230,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 231,
                                    "content": "import org.apache.maven.plugin.AbstractMojo;"
                                },
                                {
                                    "line_no": 232,
                                    "content": ""
                                }
                            ],
                            "error_texts": [
                                "[231,1] class, interface, or enum expected\n"
                            ]
                        }
                    }
                }
            },
            "error": "class, interface, or enum expected\n",
            "span_id": 16687697776822911082
        }
    ],
    "read_file": [],
    "get_directory_tree": [],
    "get_language_server_suggestions": [],
    "reset_repo": []
}