{
  "timestamp": "2025-09-09T14:55:23.586912",
  "model": "groq-llama-3.3-70b-versatile",
  "experiment": "focused-experiment-3projects",
  "generated_diffs": [
    "```diff\n--- a/src/test/java/uk/gov/pay/adminusers/queue/event/EventMessageHandlerTest.java\n+++ b/src/test/java/uk/gov/pay/adminusers/queue/event/EventMessageHandlerTest.java\n@@ -1,7 +1,7 @@\n-package uk.gov.pay.adminusers.queue.event; \n+package uk.gov.pay.adminusers.queue.event; \n import ch.qos.logback.classic.Level; \n import ch.qos.logback.classic.Logger; \n-import ch.qos.logback.classic.spi.ILoggingEvent; \n+import ch.qos.logback.classic.spi.ILoggingEvent; \n import ch.qos.logback.core.Appender; \n import com.fasterxml.jackson.databind.ObjectMapper; \n import com.google.gson.GsonBuilder; \n@@ -23,7 +23,7 @@\n import org.slf4j.LoggerFactory; \n import uk.gov.pay.adminusers.client.ledger.model.LedgerTransaction; \n import uk.gov.pay.adminusers.client.ledger.service.LedgerService; \n-import uk.gov.pay.adminusers.model.MerchantDetails; \n+import uk.gov.pay.adminusers.model.MerchantDetails; \n import uk.gov.pay.adminusers.model.Service; \n import uk.gov.pay.adminusers.model.ServiceName; \n import uk.gov.pay.adminusers.persistence.entity.UserEntity; \n@@ -44,7 +44,7 @@\n import static org.mockito.Mockito.times; \n import static org.mockito.Mockito.verify; \n import static org.mockito.Mockito.when; \n-import static uk.gov.pay.adminusers.app.util.RandomIdGenerator.randomInt; \n+import static uk.gov.pay.adminusers.app.util.RandomIdGenerator.randomInt; \n import static uk.gov.pay.adminusers.app.util.RandomIdGenerator.randomUuid; \n import static uk.gov.pay.adminusers.fixtures.EventFixture.anEventFixture; \n import static uk.gov.pay.adminusers.fixtures.LedgerTransactionFixture.aLedgerTransactionFixture; \n@@ -63,7 +63,7 @@\n @BeforeEach \n void setUp() { \n     eventMessageHandler = new EventMessageHandler(mockEventSubscriberQueue, mockLedgerService, mockNotificationService, mockServiceFinder, mockUserServices, objectMapper); \n-    service = Service.from(randomInt(), randomUuid(), new ServiceName(DEFAULT_NAME_VALUE)); \n+    service = Service.from(randomInt(), randomUuid(), new ServiceName(DEFAULT_NAME_VALUE)); \n     service.setMerchantDetails(new MerchantDetails(\"Organisation Name\", null, null, null, null, null, null, null, null)); \n     transaction = aLedgerTransactionFixture() \n@@ -82,7 +82,7 @@\n         .withTransactionId(\"456\") \n         .withReference(\"tx ref\") \n         .build(); \n-    users = Arrays.asList( \n+    users = Arrays.asList( \n         aUserEntityWithRoleForService(service, true, \"admin1\"), \n         aUserEntityWithRoleForService(service, true, \"admin2\") \n     ); \n@@ -90,7 +90,7 @@\n     Logger logger = (Logger) LoggerFactory.getLogger(EventMessageHandler.class); \n-    logger.setLevel(Level.INFO); \n+    logger.setLevel(Level.INFO); \n     logger.addAppender(mockLogAppender); \n }\n```"
  ],
  "compilation_succeeded": false,
  "test_succeeded": false,
  "error_text": "Failed to prepare diffs: Diff for src/test/java/uk/gov/pay/adminusers/queue/event/EventMessageHandlerTest.java is not valid"
}